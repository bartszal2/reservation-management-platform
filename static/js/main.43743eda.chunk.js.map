{"version":3,"sources":["data/staticPlatformData.ts","pages/ErrorPage/ErrorPage.tsx","pages/HelpPage/components/HelpContent.tsx","pages/HelpPage/components/HelpHeader.tsx","pages/HelpPage/HelpPage.tsx","hooks/redux-hooks.ts","data/employeePositionsData.ts","data/employeeresExampleData.ts","redux/slices/employeeresPageSlice.ts","data/roomTypesData.ts","data/roomsExampleData.ts","redux/slices/roomsPageSlice.ts","data/meetingsCategoriesData.ts","data/meetingsExampleData.ts","redux/slices/meetingsPageSlice.ts","data/screensExampleData.ts","redux/slices/screensPageSlice.ts","components/LoadingSpinner/LoadingSpinner.tsx","pages/DashboardPage/DashboardPage.tsx","redux/slices/roomTypesSlice.ts","pages/RoomsPage/components/RoomsContentHeader.tsx","redux/slices/globalSettingsSlice.ts","utils/dateStringToDateLocalString.tsx","utils/saveToLocalStorage.tsx","utils/shortenedTextFormat.tsx","pages/RoomsPage/components/RoomsContentTable.tsx","components/PrintButton/PrintButton.tsx","pages/RoomsPage/components/RoomsHeader.tsx","pages/RoomsPage/RoomsPage.tsx","redux/slices/meetingCategoriesSlice.ts","pages/MeetingsPage/components/MeetingsContentHeader.tsx","utils/convertDateAndTimeStringToMiliseconds.tsx","pages/MeetingsPage/components/MeetingsContentTable.tsx","pages/MeetingsPage/components/MeetingsHeader.tsx","pages/MeetingsPage/MeetingsPage.tsx","utils/dateStringToLocalString.tsx","pages/ScreenInfoPage/components/ScreenInfoContent.tsx","pages/ScreenInfoPage/components/ScreenInfoHeader.tsx","pages/ScreenInfoPage/ScreenInfoPage.tsx","pages/ScreenPage/components/ScreenMeetingReservation.tsx","utils/convertDateAndTimeStringToDate.tsx","pages/ScreenPage/components/ScreenMeetingsList.tsx","pages/ScreenPage/components/ScreenRoomName.tsx","pages/ScreenPage/components/ScreenRoomStatus.tsx","utils/valueLessThanTenFormat.tsx","pages/ScreenPage/ScreenPage.tsx","pages/ScreensPage/components/ScreensContentHeader.tsx","pages/ScreensPage/components/ScreensContentTable.tsx","pages/ScreensPage/components/ScreensHeader.tsx","pages/ScreensPage/ScreensPage.tsx","redux/slices/employeePositionsSlice.ts","pages/SettingsPage/components/components/EmployeePositionsBlock.tsx","pages/SettingsPage/components/components/MeetingCategoriesBlock.tsx","pages/SettingsPage/components/components/RoomTypesBlock.tsx","pages/SettingsPage/components/SettingsContentTable.tsx","pages/SettingsPage/components/SettingsHeader.tsx","pages/SettingsPage/SettingsPage.tsx","pages/EmployeeInfoPage/components/EmployeeInfoContent.tsx","pages/EmployeeInfoPage/components/EmployeeInfoHeader.tsx","pages/EmployeeInfoPage/EmployeeInfoPage.tsx","pages/EmployeeresPage/components/EmployeeresContentHeader.tsx","pages/EmployeeresPage/components/EmployeeresContentTable.tsx","pages/EmployeeresPage/components/EmployeeresHeader.tsx","pages/EmployeeresPage/EmployeeresPage.tsx","layouts/Header/components/NotificationBlock/NotificationBlock.tsx","layouts/Header/components/ProfileSettingsBlock/ProfileSettingsBlock.tsx","layouts/Header/components/HeaderNavigation/HeaderNavigation.tsx","layouts/Header/components/HeaderSearchForm/HeaderSearchForm.tsx","layouts/Header/Header.tsx","layouts/Sidebar/components/SidebarMenuElement.tsx","layouts/Sidebar/Sidebar.tsx","layouts/Footer/Footer.tsx","utils/dateStringToDateTimeInputFormat.tsx","layouts/ModalWindow/components/AddForms/AddEmployeeModalWindow.tsx","utils/dateStringToDateInputFormat.tsx","utils/dateToDateInputFormat.tsx","layouts/ModalWindow/components/AddForms/AddMeetingModalWindow.tsx","layouts/ModalWindow/components/AddForms/AddRoomModalWindow.tsx","layouts/ModalWindow/components/AddForms/AddScreenModalWindow.tsx","layouts/ModalWindow/components/DeleteAgreementModalWindow.tsx","layouts/ModalWindow/components/EditForms/EditEmployeeModalWindow.tsx","layouts/ModalWindow/components/EditForms/EditMeetingModalWindow.tsx","layouts/ModalWindow/components/EditForms/EditRoomModalWindow.tsx","layouts/ModalWindow/components/EditForms/EditScreenModalWindow.tsx","layouts/ModalWindow/ModalWindow.tsx","pages/MeetingInfoPage/components/MeetingInfoContent.tsx","pages/MeetingInfoPage/components/MeetingInfoHeader.tsx","pages/MeetingInfoPage/MeetingInfoPage.tsx","pages/RoomInfoPage/components/RoomInfoContent.tsx","pages/RoomInfoPage/components/RoomInfoHeader.tsx","pages/RoomInfoPage/RoomInfoPage.tsx","pages/ErrorFullPage/ErrorFullPage.tsx","App.tsx","reportWebVitals.ts","redux/store.ts","index.tsx"],"names":["MIN_HOURS_RESERVATION","MAX_HOURS_RESERVATION","PLATFORM_NAME","EMPLOYEERES_LSTORAGE_NAME","MEETINGS_LSTORAGE_NAME","ROOMS_LSTORAGE_NAME","SCREENS_LSTORAGE_NAME","MEETING_CATEGORIES_LSTORAGE_NAME","ROOM_TYPES_LSTORAGE_NAME","EMPLOYEE_POSITIONS_LSTORAGE_NAME","NOTIFICATION_LSTORAGE_NAME","PLATFORM_THEME_LSTORAGE_NAME","ErrorPage","useEffect","document","title","concat","react_default","a","createElement","className","HelpContent","type","HelpHeader","HelpPage","components_HelpHeader","components_HelpContent","useAppDispatch","useDispatch","useAppSelector","useSelector","employeePositionsData","employeePositionId","employeePositionName","employeeresExampleData","employeeId","employeeName","employeePosition","employeeStatus","employeeCode","additionalInformation","dateAdded","Date","toJSON","modificationDate","getEmployeeresData","createAsyncThunk","Object","asyncToGenerator","_regeneratorRuntime","mark","_callee","promise","wrap","_context","prev","next","Promise","resolve","reject","setTimeout","getDataFromLocalstorage","localStorage","getItem","JSON","parse","abrupt","stop","employeeresPageSlice","createSlice","name","initialState","loading","value","error","pageData","searchValue","filterValue","sortValue","reducers","ADD_EMPLOYEE","state","action","push","payload","UPDATE_EMPLOYEE","data","index","REMOVE_EMPLOYEE","splice","SET_EMPLOYEERES_SERACH_VALUE","SET_EMPLOYEERES_FILTER_VALUE","SET_EMPLOYEERES_SORT_VALUE","extraReducers","builder","addCase","pending","fulfilled","rejected","actions","roomTypesData","roomTypeId","roomTypeName","roomsExampleData","roomId","roomName","roomNumber","minimumRoomPeople","maximumRoomPeople","roomStatus","roomType","getRoomsData","roomsPageSlice_regeneratorRuntime","roomsPageSlice","ADD_ROOM","UPDATE_ROOM","REMOVE_ROOM","SET_ROOMS_SERACH_VALUE","SET_ROOMS_FILTER_VALUE","SET_ROOMS_SORT_VALUE","meetingsCategoriesData","meetingCategoryId","meetingCategoryName","meetingsExampleData","meetingId","meetingName","meetingCategory","meetingPeopleNumber","meetingDate","meetingTimeStart","meetingTimeEnd","setDate","getDate","getMeetingsData","meetingsPageSlice_regeneratorRuntime","meetingsPageSlice","ADD_MEETING","UPDATE_MEETING","REMOVE_MEETING","SET_MEETINGS_SERACH_VALUE","SET_MEETINGS_FILTER_VALUE","SET_MEETINGS_SORT_VALUE","screensExampleData","screenId","screenName","screenLocation","screenStatus","screenType","getScreensData","screensPageSlice_regeneratorRuntime","screensPageSlice","ADD_SCREEN","UPDATE_SCREEN","REMOVE_SCREEN","SET_SCREENS_SERACH_VALUE","SET_SCREENS_FILTER_VALUE","SET_SCREENS_SORT_VALUE","LoadingSpinner","DashboardPage","roomsData","roomsPage","meetingsData","meetingsPage","screensData","screensPage","employeeresData","employeeresPage","dispatch","currentDate","getFullYear","getMonth","dayCurrentDate","getDay","lastTwoWeeksDate","currentWeekDateStart","weekDateStart","currentWeekDateEnd","weekDateEnd","meetingsStatistics","length","roomsStatistics","employeeresStatistics","meetingsCreateLastTwoWeeksStatistics","filter","e","getTime","meetingsCurrentWeekStatistics","activeScreensStatistics","components_LoadingSpinner_LoadingSpinner","Fragment","toLocaleDateString","getRoomTypesData","roomTypesSlice_regeneratorRuntime","roomTypesSlice","ADD_TYPE","UPDATE_TYPE","REMOVE_TYPE","RoomsContentHeader","_useState","useState","_useState2","slicedToArray","setSearchValue","placeholder","onChange","target","onClick","selectFilterValue","selectSortValue","getNotificationsData","globalSettingsSlice_regeneratorRuntime","globalSettingsSlice","viewSidebar","viewModalWindow","typeOfModalWindow","editMeetingElement","editRoomElement","editEmployeeElement","editScreenElement","agreementIndexElement","agreementDataType","notification","notificationsData","OPEN_SIDEBAR","CLOSE_SIDEBAR","OPEN_MODAL_WINDOW","OPEN_EDIT_MODAL_WINDOW","element","OPEN_ARGEEMENT_MODAL_WINDOW","dataType","CLOSE_MODAL_WINDOW","ADD_NOTIFICATION","_state$notification$n","map","notificationId","sort","b","newId","objectSpread","SET_NOTIFICATION_READ_STATUS","seenNotification","CLEAR_NOTIFICATIONS_DATA","dateStringToDateLocalString","date","saveToLocalstorage","setItem","stringify","shortenedTextFormat","count","arguments","undefined","words","split","newText","i","join","RoomsContentTable","roomsPageSearchValue","roomsPageFilterValue","roomsPageSortValue","getRoomsList","localeCompare","activeRooms","inactiveRooms","toConsumableArray","getDataViewSort","getDataViewFitlering","toUpperCase","includes","getDataViewSearchValue","roomsDataTable","key","react_router_dom_dist","to","_roomsData$value$filt","roomElement","roomElementIndex","indexOf","deleteSelectedRoom","printPage","window","print","PrintButton","RoomsHeader","PrintButton_PrintButton","RoomsPage","roomTypes","components_RoomsHeader","components_RoomsContentHeader","components_RoomsContentTable","getMeetingCategoriesData","meetingCategoriesSlice_regeneratorRuntime","meetingCategoriesSlice","ADD_CATEGORY","UPDATE_CATEGORY","REMOVE_CATEGORY","MeetingsContentHeader","convertDateAndTimeStringToMiliseconds","time","hoursValue","slice","minutesValue","secondsValue","dateValue","setHours","parseInt","setMinutes","setSeconds","setMilliseconds","MeetingsContentTable","meetingsPageSearchValue","meetingsPageFilterValue","meetingsPageSortValue","setCurrentDate","checkMeetingStatusStyle","startMeetingMiliseconds","endMeetingMiliseconds","startCurrentDateMiliseconds","currentDateMiliseconds","endCurrentDateMiliseconds","currentDateTimeStart","currentDateTimeEnd","getMeetingsList","currentDayActiveMeetings","toDateString","currentDayOtherMeetings","plannedMeetings","endedMeetings","meetingsDataTable","checkMeetingStatus","_meetingsData$value$f","meetingElement","meetingElementIndex","deleteSelectedMeeting","interval","setInterval","clearInterval","MeetingsHeader","MeetingsPage","useParams","meetingCategoriesData","meetingCategories","components_MeetingsHeader","components_MeetingsContentHeader","components_MeetingsContentTable","dateStringToLocalString","toLocaleString","ScreenInfoContent","props","selectedScreenData","ScreenInfoHeader","navigate","useNavigate","screenElement","currentScreenId","_screensData$value$fi","screenElementIndex","deleteSelectedScreen","ScreenInfoPage","id","setSelectedScreenData","selectedScreenDataElement","components_ScreenInfoHeader","components_ScreenInfoContent","ScreenMeetingReservation","_props$screensData$fi","paramScreenId","roomFromScreenId","_props$roomsData$filt","roomData","loadingContent","convertDateAndTimeStringToDate","hours","minutes","ScreenMeetingsList","meetingStartISOString","meetingEndISOString","dateTimeUpdate","setDateTimeUpdate","_useState3","_useState4","roomMeetingsData","setRoomsMeetingsData","getRoomMeetingsData","currentMeetingsData","plannedMeetingsData","currentMeetingStartISOString","toISOString","currentMeetingEndISOString","statusMeeting","meetingDateTimeStart","meetingDateTimeEnd","timeInterval","currentDateTimeValue","ScreenRoomName","ScreenRoomStatus","setMeetingElement","_useState5","_useState6","setCurrentDateTime","getCurrentMeetingElement","currentMeetingElement","plannedMeetingElement","keys","style","width","startDateValue","endDateValue","currentTimeMiliseconds","getHours","getMinutes","getSeconds","startTimeMiliseconds","result","percentToEnd","sec","min","convertMilisecondsToTime","countDownTime","valueLessThanTen","ScreenPage","paramId","setParamId","screenIdError","setScreenIdError","countdownTime","setCountdownTime","_useState7","_useState8","screenSizeValidation","setScreenSizeValidation","timeUpdate","countDownToUpdate","location","reload","filteredScreensData","checkScreenId","screen","height","outerHeight","availHeight","outerWidth","availWidth","display","components_ScreenRoomName","components_ScreenRoomStatus","components_ScreenMeetingReservation","components_ScreenMeetingsList","ScreensContentHeader","ScreensContentTable","screensPageSearchValue","screensPageFilterValue","screensPageSortValue","getScreensList","activeScreens","inactiveScreens","screensDataTable","ScreensHeader","ScreensPage","components_ScreensHeader","components_ScreensContentHeader","components_ScreensContentTable","getEmployeePositionsData","employeePositionsSlice_regeneratorRuntime","employeePositionsSlice","ADD_POSITION","UPDATE_POSITION","REMOVE_POSITION","EmployeePositionsBlock","initialClearFormElements","validationError","newValue","editInput","elementId","elementValue","newUpdateValue","formElements","setFormElements","employeePositionNamesData","newIdEmployeePositionElement","prevState","editElementInputValue","editElementValue","_props$employeePositi","employeePositionElement","employeePositionElementIndex","notificationName","notificationDate","editEmployeePosition","_props$employeePositi3","removeEmployeePosition","employeePositionInputValue","addEmployeePosition","MeetingCategoriesBlock","meetingCategoryNamesData","newIdMeetingCategoryElement","nweUpdateValue","_props$meetingsCatego","meetingCategoryElement","meetingCategoryIndex","editMeetingCategory","_props$meetingsCatego3","meetingCategoryElementIndex","removeMeetingCategory","meetingCategoryInputValue","addMeetingCategory","RoomTypesBlock","roomTypeNamesData","newIdRoomTypeElement","_props$roomTypesData$","roomTypeElement","roomTypeElementIndex","editRoomType","_props$roomTypesData$3","removeRoomType","roomTypeInputValue","addRoomType","SettingsContentTable","employeePositions","components_MeetingCategoriesBlock","components_RoomTypesBlock","components_EmployeePositionsBlock","SettingsHeader","SettingsPage","components_SettingsHeader","components_SettingsContentTable","EmployeeInfoContent","selectedEmployeeData","EmployeeInfoHeader","employeeElement","currentEmployeeId","_employeeresData$valu","employeeElementIndex","deleteSelectedEmployee","EmployeeInfoPage","setSelectedEmployeeData","selectedEmployeeDataElement","components_EmployeeInfoHeader","components_EmployeeInfoContent","EmployeeresContentHeader","EmployeeresContentTable","employeeresPageSearchValue","employeeresPageFilterValue","employeeresPageSortValue","getEmployeeresList","activeEmployeeres","inactiveEmployeeres","employeeresDataTable","EmployeeresHeader","EmployeeresPage","components_EmployeeresHeader","components_EmployeeresContentHeader","components_EmployeeresContentTable","NotificationBlock","globalSettings","notificationsList","_notificationsData$fi","notificationElement","setNotificationReadStatus","toLocaleTimeString","viewNotification","viewNotificationHandler","ProfileSettingsBlock","platformTheme","setPlatformTheme","localStoragePlatformTheme","themeValue","viewProfileSettings","viewProfileSettingsHandler","documentElement","setAttribute","HeaderNavigation","notificationQuantity","setNotificationQuantity","setViewNotification","setViewProfileSettings","preValue","prevValue","newNotification","NotificationBlock_NotificationBlock","ProfileSettingsBlock_ProfileSettingsBlock","HeaderSearchForm","isMeetingsPage","setIsMeetingsPage","useLocation","pathname","endsWith","disabled","Header","HeaderSearchForm_HeaderSearchForm","HeaderNavigation_HeaderNavigation","SidebarMenuElement","linkText","_ref","isActive","end","exactMatch","iconName","elementName","Sidebar","sidebarWeekCalendar","setSidebarWeekCalendar","shortNamesDayOfWeeks","generateDataCurrentWeek","currentDateValue","firstDayOfCurrentWeekDate","currentWeekData","dateDayValue","weekCalendarContent","components_SidebarMenuElement","Footer","dateStringToDateTimeInputFormat","day","month","year","mintues","AddEmployeeModalWindow","initialNewEmployeeData","_employeeresData$map$","generateEmployeeId","newEmployee","setNewEmployee","initialFormValidationElementsData","correctValidation","formValidationElements","setFormValidationElements","formErrorMessage","setFormErrorMessage","validationErrorsData","values","formValidationMessage","elementValueHandler","defineProperty","addEmployeeToList","correctValidationEmployeeName","correctValidationEmployeePosition","correctValidationEmployeeCode","employeeCodesData","toString","validateEmployeeCodeInput","checked","dateStringToInputFormat","dateToDateInputFormat","AddMeetingModalWindow","initialNewMeetingData","_meetingsData$map$sor","generateMeetingID","newMeeting","setNewMeeting","roomMeetingsConflictsData","activeEmployeeresData","activeRoomsData","minPeopleNumberInRoom","maxPeopleNumberInRoom","validateMeetingPeopleNumberInput","isNaN","addMeetingToList","correctValidationMeetingName","correctValidationMeetingCategory","correctValidationMeetingRoom","correctValidationPeopleNumber","correctValidationMeetingDate","correctValidationMeetingTimeStart","correctValidationMeetingTimeEnd","correctValidationRoomMeetingsConflicts","meetingRoomDateTimeData","meetingStart","meetingEnd","meetingStartDateTimeMs","meetingEndDateTimeMs","inputMeetingStartMs","inputMeetingEndMs","filteredRoomMeetingsData","roomDateTimeMeetingData","validateCheckRoomMeetingsConflicts","AddRoomModalWindow","initialNewRoomData","_roomsData$map$sort","generateRoomId","newRoom","setNewRoom","elementNumberValueHandler","addRoomToList","correctValidationRoomName","roomNamesData","validateRoomNameInput","correctValidationRoomNumber","roomNumbersData","validateRoomNumberInput","correctValidationMinRoomPeople","correctValidationMaxRoomPeople","correctValidationRoomTypes","AddScreenModalWindow","initialNewScreenData","_screensData$map$sort","generateScreenId","newScreen","setNewScreen","addScreenToList","correctValidationScreenName","screenRoomsData","correctValidationScreenLocation","correctValidationScreenType","DeleteAgreementModalWindow","globalSettingsData","getDeleteAgreementModalWindowContent","EditEmployeeModalWindow","initialEditedEmployeeData","initialClearEditedEmployeeData","editedEmployee","setEditedEmployee","checkAvailabilityEmployeePosition","_employeePositionsDat","currentEmployeePositionElement","updateEmployeeElement","editEmployeeElementIndex","EditMeetingModalWindow","initialEditedMeetingData","initialClearEditedMeetingData","editedMeeting","setEditedMeeting","checkAvailabilityRoom","checkAvailabilityMeetingCategory","checkAvailabilityEmployee","_meetingCategoriesDat","currentMeetingCategoryElement","_employeeresData$filt","currentEmployeeElement","_roomsData$filter","currentRoomElement","updateMeetingElement","_meetingsData$filter","newMeetingsData","editMeetingElementIndex","EditRoomModalWindow","initialEditedRoomData","editedRoom","setEditedRoom","checkAvailabilityRoomType","_roomTypesData$filter","currentRoomTypeElement","updateRoomElement","editRoomElementIndex","EditScreenModalWindow","initialEditedScreenData","initialClearEditedScreenData","editedScreen","setEditedScreen","checkAvailabilityRoomName","updateScreenElement","editScreenElementIndex","ModalWindow","AddForms_AddEmployeeModalWindow","AddForms_AddMeetingModalWindow","AddForms_AddRoomModalWindow","AddForms_AddScreenModalWindow","EditForms_EditEmployeeModalWindow","EditForms_EditMeetingModalWindow","EditForms_EditRoomModalWindow","EditForms_EditScreenModalWindow","components_DeleteAgreementModalWindow","getModalWindow","MeetingInfoContent","selectedMeetingData","_meetingTimeStart$spl3","_meetingTimeStart$spl4","startHours","startMinutes","dateStartTime","_meetingTimeEnd$split3","_meetingTimeEnd$split4","endHours","endMinutes","dateEndTime","_meetingTimeStart$spl","_meetingTimeStart$spl2","_meetingTimeEnd$split","_meetingTimeEnd$split2","MeetingInfoHeader","currentMeetingId","MeetingInfoPage","setSelectedMeetingData","components_MeetingInfoHeader","components_MeetingInfoContent","RoomInfoContent","selectedRoomData","RoomInfoHeader","currentRoomId","RoomInfoPage","setSelectedRoomData","selectedRoomDataElement","components_RoomInfoHeader","components_RoomInfoContent","ErrorFullPage","App","dist","path","ModalWindow_ModalWindow","Header_Header","Sidebar_Sidebar","Footer_Footer","pages_DashboardPage_DashboardPage","pages_MeetingsPage_MeetingsPage","pages_MeetingInfoPage_MeetingInfoPage","pages_RoomsPage_RoomsPage","pages_RoomInfoPage_RoomInfoPage","pages_EmployeeresPage_EmployeeresPage","pages_EmployeeInfoPage_EmployeeInfoPage","pages_ScreensPage_ScreensPage","pages_ScreenInfoPage_ScreenInfoPage","pages_SettingsPage_SettingsPage","pages_HelpPage_HelpPage","pages_ErrorPage_ErrorPage","pages_ScreenPage_ScreenPage","pages_ErrorFullPage_ErrorFullPage","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","store","configureStore","reducer","ReactDOM","createRoot","getElementById","render","StrictMode","es","src_App"],"mappings":"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","file":"static/js/main.43743eda.chunk.js","sourcesContent":["export const MIN_HOURS_RESERVATION: string = \"06:00\";\r\n\r\nexport const MAX_HOURS_RESERVATION: string = \"20:00\";\r\n\r\nexport const PLATFORM_NAME: string = \"PLATFORM NAME\";\r\n\r\nexport const EMPLOYEERES_LSTORAGE_NAME: string = \"PLATFORM NAME\";\r\n\r\nexport const MEETINGS_LSTORAGE_NAME: string = \"resPlatformMeetingsData\";\r\n\r\nexport const ROOMS_LSTORAGE_NAME: string = \"resPlatformRoomsData\";\r\n\r\nexport const SCREENS_LSTORAGE_NAME: string = \"resPlatformScreensData\";\r\n\r\nexport const MEETING_CATEGORIES_LSTORAGE_NAME: string = \"resPlatformMeetingCategoriesData\";\r\n\r\nexport const ROOM_TYPES_LSTORAGE_NAME: string = \"resPlatformRoomTypesData\";\r\n\r\nexport const EMPLOYEE_POSITIONS_LSTORAGE_NAME: string = \"resPlatformEmployeePositionsData\";\r\n\r\nexport const NOTIFICATION_LSTORAGE_NAME: string = \"resPlatformNofitifationsData\";\r\n\r\nexport const PLATFORM_THEME_LSTORAGE_NAME: string = \"resPlatformThemeData\";","import React, { useEffect } from 'react';\r\nimport { PLATFORM_NAME } from '../../data/staticPlatformData';\r\nimport '../../sass/pages/ErrorPage/ErrorPage.css';\r\n\r\nfunction ErrorPage() {\r\n\r\n  useEffect(() => {\r\n    document.title = `${PLATFORM_NAME}`;\r\n  }, [])\r\n\r\n  return (\r\n    <div className=\"main-error-page\">\r\n      <div className=\"main-error-page__title\">Strona o podanym adresie nie istnieje</div>\r\n      <div className=\"main-error-page__description\">\r\n        Lorem ipsum dolor sit amet consectetur, adipisicing elit. Vitae odit earum repellat aut fugiat? Ea, dignissimos? Ratione excepturi quam est assumenda, eos ab et deleniti. Lorem ipsum dolor, sit amet consectetur adipisicing elit. Quos nihil impedit repudiandae perspiciatis eos ratione. Recusandae necessitatibus eligendi rem maiores quo veniam? Ullam fuga ea voluptatum, perferendis dolores perspiciatis ipsam asperiores animi impedit in atque. Lorem ipsum dolor sit amet consectetur adipisicing elit.\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ErrorPage;","import React from 'react';\r\n\r\nfunction HelpContent() {\r\n  return (\r\n    <div className=\"content__accordion\">\r\n      <div className=\"accordion__block\">\r\n        <div className=\"block__title\">Spotkania</div>\r\n        <label className=\"block__element\">\r\n          <input className=\"element__input-checkbox\" type=\"checkbox\"/>\r\n          <div className=\"element__title\">\r\n            Lorem ipsum dolor sit amet consectetur. Lorem ipsum dolor sit amet.\r\n          </div>\r\n          <div className=\"element__text\">\r\n            Lorem ipsum dolor sit amet consectetur, adipisicing elit. In vel provident consectetur nostrum, explicabo maxime labore exercitationem magnam, aperiam inventore molestias pariatur modi doloribus voluptatibus? Provident ipsum hic nisi eveniet sed minima accusamus adipisci placeat, fugit doloribus explicabo doloremque nesciunt unde? Maxime necessitatibus sit consequatur.\r\n          </div>\r\n        </label>\r\n        <label className=\"block__element\">\r\n          <input className=\"element__input-checkbox\" type=\"checkbox\"/>\r\n          <div className=\"element__title\">\r\n            Lorem ipsum dolor sit amet consectetur. Lorem, ipsum dolor.\r\n          </div>\r\n          <div className=\"element__text\">\r\n            Lorem ipsum dolor sit amet consectetur, adipisicing elit. In vel provident consectetur nostrum, explicabo maxime labore exercitationem magnam, aperiam inventore molestias pariatur modi doloribus voluptatibus? Provident ipsum hic nisi eveniet sed minima accusamus adipisci placeat, fugit doloribus explicabo doloremque nesciunt unde? Maxime necessitatibus sit consequatur.\r\n          </div>\r\n        </label>\r\n        <label className=\"block__element\">\r\n          <input className=\"element__input-checkbox\" type=\"checkbox\"/>\r\n          <div className=\"element__title\">\r\n            Lorem ipsum dolor sit amet consectetur. Lorem, ipsum dolor.\r\n          </div>\r\n          <div className=\"element__text\">\r\n            Lorem ipsum dolor sit amet consectetur, adipisicing elit. In vel provident consectetur nostrum, explicabo maxime labore exercitationem magnam, aperiam inventore molestias pariatur modi doloribus voluptatibus? Provident ipsum hic nisi eveniet sed minima accusamus adipisci placeat, fugit doloribus explicabo doloremque nesciunt unde? Maxime necessitatibus sit consequatur.\r\n          </div>\r\n        </label>\r\n        <label className=\"block__element\">\r\n          <input className=\"element__input-checkbox\" type=\"checkbox\"/>\r\n          <div className=\"element__title\">\r\n            Lorem ipsum dolor sit amet consectetur. Lorem, ipsum dolor.\r\n          </div>\r\n          <div className=\"element__text\">\r\n            Lorem ipsum dolor sit amet consectetur, adipisicing elit. In vel provident consectetur nostrum, explicabo maxime labore exercitationem magnam, aperiam inventore molestias pariatur modi doloribus voluptatibus? Provident ipsum hic nisi eveniet sed minima accusamus adipisci placeat, fugit doloribus explicabo doloremque nesciunt unde? Maxime necessitatibus sit consequatur.\r\n          </div>\r\n        </label>\r\n        <label className=\"block__element\">\r\n          <input className=\"element__input-checkbox\" type=\"checkbox\"/>\r\n          <div className=\"element__title\">\r\n            Lorem ipsum dolor sit amet consectetur. Lorem, ipsum dolor.\r\n          </div>\r\n          <div className=\"element__text\">\r\n            Lorem ipsum dolor sit amet consectetur, adipisicing elit. In vel provident consectetur nostrum, explicabo maxime labore exercitationem magnam, aperiam inventore molestias pariatur modi doloribus voluptatibus? Provident ipsum hic nisi eveniet sed minima accusamus adipisci placeat, fugit doloribus explicabo doloremque nesciunt unde? Maxime necessitatibus sit consequatur.\r\n          </div>\r\n        </label>\r\n        <label className=\"block__element\">\r\n          <input className=\"element__input-checkbox\" type=\"checkbox\"/>\r\n          <div className=\"element__title\">\r\n            Lorem ipsum dolor sit amet consectetur. Lorem.\r\n          </div>\r\n          <div className=\"element__text\">\r\n            Lorem ipsum dolor sit amet consectetur, adipisicing elit. In vel provident consectetur nostrum, explicabo maxime labore exercitationem magnam, aperiam inventore molestias pariatur modi doloribus voluptatibus? Provident ipsum hic nisi eveniet sed minima accusamus adipisci placeat, fugit doloribus explicabo doloremque nesciunt unde? Maxime necessitatibus sit consequatur.\r\n          </div>\r\n        </label>\r\n      </div>\r\n      <div className=\"accordion__block\">\r\n        <div className=\"block__title\">Pomieszczenia</div>\r\n        <label className=\"block__element\">\r\n          <input className=\"element__input-checkbox\" type=\"checkbox\"/>\r\n          <div className=\"element__title\">\r\n            Lorem ipsum dolor sit amet consectetur. Lorem, ipsum.\r\n          </div>\r\n          <div className=\"element__text\">\r\n            Lorem ipsum dolor sit amet consectetur, adipisicing elit. In vel provident consectetur nostrum, explicabo maxime labore exercitationem magnam, aperiam inventore molestias pariatur modi doloribus voluptatibus? Provident ipsum hic nisi eveniet sed minima accusamus adipisci placeat, fugit doloribus explicabo doloremque nesciunt unde? Maxime necessitatibus sit consequatur.\r\n          </div>\r\n        </label>\r\n        <label className=\"block__element\">\r\n          <input className=\"element__input-checkbox\" type=\"checkbox\"/>\r\n          <div className=\"element__title\">\r\n            Lorem ipsum dolor sit amet consectetur. Lorem ipsum dolor sit amet consectetur.\r\n          </div>\r\n          <div className=\"element__text\">\r\n            Lorem ipsum dolor sit amet consectetur, adipisicing elit. In vel provident consectetur nostrum, explicabo maxime labore exercitationem magnam, aperiam inventore molestias pariatur modi doloribus voluptatibus? Provident ipsum hic nisi eveniet sed minima accusamus adipisci placeat, fugit doloribus explicabo doloremque nesciunt unde? Maxime necessitatibus sit consequatur.\r\n          </div>\r\n        </label>\r\n      </div>\r\n      <div className=\"accordion__block\">\r\n        <div className=\"block__title\">Pracownicy</div>\r\n        <label className=\"block__element\">\r\n          <input className=\"element__input-checkbox\" type=\"checkbox\"/>\r\n          <div className=\"element__title\">\r\n            Lorem ipsum dolor sit amet consectetur. Lorem, ipsum dolor.\r\n          </div>\r\n          <div className=\"element__text\">\r\n            Lorem ipsum dolor sit amet consectetur, adipisicing elit. In vel provident consectetur nostrum, explicabo maxime labore exercitationem magnam, aperiam inventore molestias pariatur modi doloribus voluptatibus? Provident ipsum hic nisi eveniet sed minima accusamus adipisci placeat, fugit doloribus explicabo doloremque nesciunt unde? Maxime necessitatibus sit consequatur.\r\n          </div>\r\n        </label>\r\n        <label className=\"block__element\">\r\n          <input className=\"element__input-checkbox\" type=\"checkbox\"/>\r\n          <div className=\"element__title\">\r\n            Lorem ipsum dolor sit amet consectetur. Lorem, ipsum dolor.\r\n          </div>\r\n          <div className=\"element__text\">\r\n            Lorem ipsum dolor sit amet consectetur, adipisicing elit. In vel provident consectetur nostrum, explicabo maxime labore exercitationem magnam, aperiam inventore molestias pariatur modi doloribus voluptatibus? Provident ipsum hic nisi eveniet sed minima accusamus adipisci placeat, fugit doloribus explicabo doloremque nesciunt unde? Maxime necessitatibus sit consequatur.\r\n          </div>\r\n        </label>\r\n        <label className=\"block__element\">\r\n          <input className=\"element__input-checkbox\" type=\"checkbox\"/>\r\n          <div className=\"element__title\">\r\n            Lorem ipsum dolor sit amet consectetur. Lorem ipsum dolor sit.\r\n          </div>\r\n          <div className=\"element__text\">\r\n            Lorem ipsum dolor sit amet consectetur, adipisicing elit. In vel provident consectetur nostrum, explicabo maxime labore exercitationem magnam, aperiam inventore molestias pariatur modi doloribus voluptatibus? Provident ipsum hic nisi eveniet sed minima accusamus adipisci placeat, fugit doloribus explicabo doloremque nesciunt unde? Maxime necessitatibus sit consequatur.\r\n          </div>\r\n        </label>\r\n      </div>\r\n      <div className=\"accordion__block\">\r\n        <div className=\"block__title\">Ekrany</div>\r\n        <label className=\"block__element\">\r\n          <input className=\"element__input-checkbox\" type=\"checkbox\"/>\r\n          <div className=\"element__title\">\r\n            Lorem ipsum dolor sit amet consectetur. Lorem ipsum dolor sit amet.\r\n          </div>\r\n          <div className=\"element__text\">\r\n            Lorem ipsum dolor sit amet consectetur, adipisicing elit. In vel provident consectetur nostrum, explicabo maxime labore exercitationem magnam, aperiam inventore molestias pariatur modi doloribus voluptatibus? Provident ipsum hic nisi eveniet sed minima accusamus adipisci placeat, fugit doloribus explicabo doloremque nesciunt unde? Maxime necessitatibus sit consequatur.\r\n          </div>\r\n        </label>\r\n        <label className=\"block__element\">\r\n          <input className=\"element__input-checkbox\" type=\"checkbox\"/>\r\n          <div className=\"element__title\">\r\n            Lorem ipsum dolor sit amet consectetur. Lorem, ipsum dolor.\r\n          </div>\r\n          <div className=\"element__text\">\r\n            Lorem ipsum dolor sit amet consectetur, adipisicing elit. In vel provident consectetur nostrum, explicabo maxime labore exercitationem magnam, aperiam inventore molestias pariatur modi doloribus voluptatibus? Provident ipsum hic nisi eveniet sed minima accusamus adipisci placeat, fugit doloribus explicabo doloremque nesciunt unde? Maxime necessitatibus sit consequatur.\r\n          </div>\r\n        </label>\r\n        <label className=\"block__element\">\r\n          <input className=\"element__input-checkbox\" type=\"checkbox\"/>\r\n          <div className=\"element__title\">\r\n            Lorem ipsum dolor sit amet consectetur. Lorem, ipsum dolor.\r\n          </div>\r\n          <div className=\"element__text\">\r\n            Lorem ipsum dolor sit amet consectetur, adipisicing elit. In vel provident consectetur nostrum, explicabo maxime labore exercitationem magnam, aperiam inventore molestias pariatur modi doloribus voluptatibus? Provident ipsum hic nisi eveniet sed minima accusamus adipisci placeat, fugit doloribus explicabo doloremque nesciunt unde? Maxime necessitatibus sit consequatur.\r\n          </div>\r\n        </label>\r\n        <label className=\"block__element\">\r\n          <input className=\"element__input-checkbox\" type=\"checkbox\"/>\r\n          <div className=\"element__title\">\r\n            Lorem ipsum dolor sit amet consectetur. Lorem, ipsum dolor.\r\n          </div>\r\n          <div className=\"element__text\">\r\n            Lorem ipsum dolor sit amet consectetur, adipisicing elit. In vel provident consectetur nostrum, explicabo maxime labore exercitationem magnam, aperiam inventore molestias pariatur modi doloribus voluptatibus? Provident ipsum hic nisi eveniet sed minima accusamus adipisci placeat, fugit doloribus explicabo doloremque nesciunt unde? Maxime necessitatibus sit consequatur.\r\n          </div>\r\n        </label>\r\n      </div>\r\n      <div className=\"accordion__block\">\r\n        <div className=\"block__title\">Ustawienia</div>\r\n        <label className=\"block__element\">\r\n          <input className=\"element__input-checkbox\" type=\"checkbox\"/>\r\n          <div className=\"element__title\">\r\n            Lorem ipsum dolor sit amet consectetur. Lorem, ipsum dolor.\r\n          </div>\r\n          <div className=\"element__text\">\r\n            Lorem ipsum dolor sit amet consectetur, adipisicing elit. In vel provident consectetur nostrum, explicabo maxime labore exercitationem magnam, aperiam inventore molestias pariatur modi doloribus voluptatibus? Provident ipsum hic nisi eveniet sed minima accusamus adipisci placeat, fugit doloribus explicabo doloremque nesciunt unde? Maxime necessitatibus sit consequatur.\r\n          </div>\r\n        </label>\r\n        <label className=\"block__element\">\r\n          <input className=\"element__input-checkbox\" type=\"checkbox\"/>\r\n          <div className=\"element__title\">\r\n            Lorem ipsum dolor sit amet consectetur. Lorem, ipsum dolor.\r\n          </div>\r\n          <div className=\"element__text\">\r\n            Lorem ipsum dolor sit amet consectetur, adipisicing elit. In vel provident consectetur nostrum, explicabo maxime labore exercitationem magnam, aperiam inventore molestias pariatur modi doloribus voluptatibus? Provident ipsum hic nisi eveniet sed minima accusamus adipisci placeat, fugit doloribus explicabo doloremque nesciunt unde? Maxime necessitatibus sit consequatur.\r\n          </div>\r\n        </label>\r\n        <label className=\"block__element\">\r\n          <input className=\"element__input-checkbox\" type=\"checkbox\"/>\r\n          <div className=\"element__title\">\r\n            Lorem ipsum dolor sit amet consectetur. Lorem ipsum dolor sit.\r\n          </div>\r\n          <div className=\"element__text\">\r\n            Lorem ipsum dolor sit amet consectetur, adipisicing elit. In vel provident consectetur nostrum, explicabo maxime labore exercitationem magnam, aperiam inventore molestias pariatur modi doloribus voluptatibus? Provident ipsum hic nisi eveniet sed minima accusamus adipisci placeat, fugit doloribus explicabo doloremque nesciunt unde? Maxime necessitatibus sit consequatur.\r\n          </div>\r\n        </label>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default HelpContent;","import React from 'react';\r\n\r\nfunction HelpHeader() {\r\n  return (\r\n    <div className=\"main-help-page__header\">\r\n      <div className=\"header__group\">\r\n        <div className=\"group__title\">\r\n          <span className=\"material-symbols-outlined\">help</span>\r\n          Pomoc\r\n        </div>\r\n      </div>\r\n      <div className=\"header__text\">\r\n        Lorem ipsum dolor, sit amet consectetur adipisicing elit. Temporibus\r\n        nam, ducimus quae deleniti recusandae sed corrupti dicta ullam autem\r\n        cupiditate? Quae ex aliquam dignissimos fuga, mollitia repudiandae\r\n        quaerat tempore rem cum explicabo fugiat cupiditate perferendis possimus\r\n        voluptatibus temporibus laudantium libero incidunt tempora minus\r\n        praesentium facilis saepe illo quidem. Consectetur est distinctio\r\n        voluptatum iure iste molestiae mollitia doloremque et repellendus alias\r\n        autem unde, magni inventore quae id illum. Facere est blanditiis enim,\r\n        laudantium eos nostrum iusto, quas odit corporis corrupti fugit totam et\r\n        sunt impedit nihil ducimus recusandae veniam ipsa commodi.\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default HelpHeader;","import React, { useEffect } from 'react';\r\nimport { PLATFORM_NAME } from '../../data/staticPlatformData';\r\nimport '../../sass/pages/HelpPage/HelpPage.css';\r\nimport HelpContent from './components/HelpContent';\r\nimport HelpHeader from './components/HelpHeader';\r\n\r\nfunction HelpPage() {\r\n\r\n  useEffect((): void => {\r\n    document.title = `${PLATFORM_NAME} - Pomoc`;\r\n  }, []);\r\n  \r\n  return (\r\n      <main className=\"main-help-page\">\r\n        <HelpHeader/>\r\n        <div className=\"main-help-page__content\">\r\n          <HelpContent/>\r\n        </div>\r\n      </main>\r\n  )\r\n}\r\n\r\nexport default HelpPage;","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux'\r\nimport type { RootState, AppDispatch } from '../redux/store'\r\n\r\nexport const useAppDispatch: () => AppDispatch = useDispatch\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector","import { employeePositionDataType } from \"../types/employeePositionDataType\";\r\n\r\nexport const employeePositionsData: employeePositionDataType[] = [\r\n    {\r\n        employeePositionId: 1,\r\n        employeePositionName: 'Młodszy specjalista'\r\n    },\r\n    {\r\n        employeePositionId: 2,\r\n        employeePositionName: 'Specjalista'\r\n    },\r\n    {\r\n        employeePositionId: 3,\r\n        employeePositionName: 'Starszy specjalista'\r\n    },\r\n    {\r\n        employeePositionId: 4,\r\n        employeePositionName: 'Kierownik'\r\n    },\r\n    {\r\n        employeePositionId: 5,\r\n        employeePositionName: 'Szef'\r\n    },\r\n    {\r\n        employeePositionId: 6,\r\n        employeePositionName: 'Asystent'\r\n    },\r\n    {\r\n        employeePositionId: 7,\r\n        employeePositionName: 'Pracownik administracji'\r\n    },\r\n    {\r\n        employeePositionId: 8,\r\n        employeePositionName: 'Inne'\r\n    }\r\n];","import { employeeDataType } from \"../types/employeeDataType\";\r\nimport { employeePositionsData } from \"./employeePositionsData\";\r\n\r\nexport const employeeresExampleData: employeeDataType[] = [\r\n    {\r\n        employeeId: 1,\r\n        employeeName: 'Adam Kowalski',\r\n        employeePosition: `${employeePositionsData[0].employeePositionName}`,\r\n        employeeStatus: true,\r\n        employeeCode: 4328,\r\n        additionalInformation: 'Lorem, ipsum dolor sit amet consectetur adipisicing elit. Magnam placeat, aspernatur vel, molestiae ad iste id doloremque quod delectus officiis iusto soluta, exercitationem facere deserunt eos sed ipsum blanditiis nesciunt dolore animi commodi explicabo aut? Ab eligendi ratione voluptatem vitae inventore nobis quis omnis animi aspernatur nisi, consequuntur, nemo tempora laboriosam, perferendis nesciunt et iusto ea debitis cupiditate quam quibusdam.',\r\n        dateAdded: new Date(2022, 9, 1, 12, 45, 0).toJSON(),\r\n        modificationDate: null\r\n    },\r\n    {\r\n        employeeId: 2,\r\n        employeeName: 'Jan Nowak',\r\n        employeePosition: `${employeePositionsData[4].employeePositionName}`,\r\n        employeeStatus: true,\r\n        employeeCode: 8863,\r\n        additionalInformation: 'Lorem, ipsum dolor sit amet consectetur adipisicing elit. Magnam placeat, aspernatur vel, molestiae ad iste id doloremque quod delectus officiis iusto soluta, exercitationem facere deserunt eos sed ipsum blanditiis nesciunt dolore animi commodi explicabo aut? Ab eligendi ratione voluptatem vitae inventore nobis quis omnis animi aspernatur nisi, consequuntur, nemo tempora laboriosam, perferendis nesciunt et iusto ea debitis cupiditate quam quibusdam.',\r\n        dateAdded: new Date(2022, 9, 1, 12, 45, 0).toJSON(),\r\n        modificationDate: new Date().toJSON()\r\n    },\r\n    {\r\n        employeeId: 3,\r\n        employeeName: 'Anna Kowalska',\r\n        employeePosition: `${employeePositionsData[1].employeePositionName}`,\r\n        employeeStatus: true,\r\n        employeeCode: 9012,\r\n        additionalInformation: 'Lorem, ipsum dolor sit amet consectetur adipisicing elit. Magnam placeat, aspernatur vel, molestiae ad iste id doloremque quod delectus officiis iusto soluta, exercitationem facere deserunt eos sed ipsum blanditiis nesciunt dolore animi commodi explicabo aut? Ab eligendi ratione voluptatem vitae inventore nobis quis omnis animi aspernatur nisi, consequuntur, nemo tempora laboriosam, perferendis nesciunt et iusto ea debitis cupiditate quam quibusdam.',\r\n        dateAdded: new Date(2022, 9, 1, 12, 45, 0).toJSON(),\r\n        modificationDate: new Date().toJSON()\r\n    },\r\n    {\r\n        employeeId: 4,\r\n        employeeName: 'Jan Kowalski',\r\n        employeePosition: `${employeePositionsData[3].employeePositionName}`,\r\n        employeeStatus: false,\r\n        employeeCode: 3209,\r\n        additionalInformation: 'Lorem, ipsum dolor sit amet consectetur adipisicing elit. Magnam placeat, aspernatur vel, molestiae ad iste id doloremque quod delectus officiis iusto soluta, exercitationem facere deserunt eos sed ipsum blanditiis nesciunt dolore animi commodi explicabo aut? Ab eligendi ratione voluptatem vitae inventore nobis quis omnis animi aspernatur nisi, consequuntur, nemo tempora laboriosam, perferendis nesciunt et iusto ea debitis cupiditate quam quibusdam.',\r\n        dateAdded: new Date(2022, 9, 1, 12, 45, 0).toJSON(),\r\n        modificationDate: null\r\n    },\r\n    {\r\n        employeeId: 5,\r\n        employeeName: 'Adam Nowak',\r\n        employeePosition: `${employeePositionsData[2].employeePositionName}`,\r\n        employeeStatus: true,\r\n        employeeCode: 1142,\r\n        additionalInformation: 'Lorem, ipsum dolor sit amet consectetur adipisicing elit. Magnam placeat, aspernatur vel, molestiae ad iste id doloremque quod delectus officiis iusto soluta, exercitationem facere deserunt eos sed ipsum blanditiis nesciunt dolore animi commodi explicabo aut? Ab eligendi ratione voluptatem vitae inventore nobis quis omnis animi aspernatur nisi, consequuntur, nemo tempora laboriosam, perferendis nesciunt et iusto ea debitis cupiditate quam quibusdam.',\r\n        dateAdded: new Date(2022, 9, 1, 12, 45, 0).toJSON(),\r\n        modificationDate: new Date().toJSON()\r\n    },\r\n    {\r\n        employeeId: 6,\r\n        employeeName: 'Jan Wiśniewski',\r\n        employeePosition: `${employeePositionsData[5].employeePositionName}`,\r\n        employeeStatus: true,\r\n        employeeCode: 8472,\r\n        additionalInformation: 'Lorem, ipsum dolor sit amet consectetur adipisicing elit. Magnam placeat, aspernatur vel, molestiae ad iste id doloremque quod delectus officiis iusto soluta, exercitationem facere deserunt eos sed ipsum blanditiis nesciunt dolore animi commodi explicabo aut? Ab eligendi ratione voluptatem vitae inventore nobis quis omnis animi aspernatur nisi, consequuntur, nemo tempora laboriosam, perferendis nesciunt et iusto ea debitis cupiditate quam quibusdam.',\r\n        dateAdded: new Date(2022, 9, 1, 12, 45, 0).toJSON(),\r\n        modificationDate: null\r\n    },\r\n    {\r\n        employeeId: 7,\r\n        employeeName: 'Anna Wiśniewska',\r\n        employeePosition: `${employeePositionsData[7].employeePositionName}`,\r\n        employeeStatus: false,\r\n        employeeCode: 3472,\r\n        additionalInformation: 'Lorem, ipsum dolor sit amet consectetur adipisicing elit. Magnam placeat, aspernatur vel, molestiae ad iste id doloremque quod delectus officiis iusto soluta, exercitationem facere deserunt eos sed ipsum blanditiis nesciunt dolore animi commodi explicabo aut? Ab eligendi ratione voluptatem vitae inventore nobis quis omnis animi aspernatur nisi, consequuntur, nemo tempora laboriosam, perferendis nesciunt et iusto ea debitis cupiditate quam quibusdam.',\r\n        dateAdded: new Date(2022, 9, 1, 12, 45, 0).toJSON(),\r\n        modificationDate: new Date().toJSON()\r\n    },\r\n    {\r\n        employeeId: 8,\r\n        employeeName: 'Adam Kowalski',\r\n        employeePosition: `${employeePositionsData[6].employeePositionName}`,\r\n        employeeStatus: false,\r\n        employeeCode: 2593,\r\n        additionalInformation: 'Lorem, ipsum dolor sit amet consectetur adipisicing elit. Magnam placeat, aspernatur vel, molestiae ad iste id doloremque quod delectus officiis iusto soluta, exercitationem facere deserunt eos sed ipsum blanditiis nesciunt dolore animi commodi explicabo aut? Ab eligendi ratione voluptatem vitae inventore nobis quis omnis animi aspernatur nisi, consequuntur, nemo tempora laboriosam, perferendis nesciunt et iusto ea debitis cupiditate quam quibusdam.',\r\n        dateAdded: new Date(2022, 9, 1, 12, 45, 0).toJSON(),\r\n        modificationDate: new Date().toJSON()\r\n    }\r\n];","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\r\nimport { employeeresExampleData } from '../../data/employeeresExampleData';\r\nimport { EMPLOYEERES_LSTORAGE_NAME } from '../../data/staticPlatformData';\r\nimport { employeeDataType } from '../../types/employeeDataType';\r\nimport { employeeresPageSliceType } from '../../types/slices/employeeresPageSliceTypes';\r\n\r\nexport const getEmployeeresData = createAsyncThunk(\r\n    'employeeresPage/getEmployeeresData',\r\n    async () => {\r\n        const promise = new Promise<employeeDataType[]>((resolve, reject) => {\r\n            setTimeout(() => {\r\n                const getDataFromLocalstorage = localStorage.getItem(EMPLOYEERES_LSTORAGE_NAME)\r\n                \r\n                if (getDataFromLocalstorage != null) {\r\n                    resolve(JSON.parse(getDataFromLocalstorage))\r\n                    \r\n                } else {\r\n                    resolve(employeeresExampleData)\r\n                }\r\n            }, 2250)\r\n        });\r\n        return promise\r\n    }\r\n);\r\n\r\nconst initialState: employeeresPageSliceType = {\r\n    loading: true,\r\n    value: [],\r\n    error: null,\r\n    pageData: {\r\n        searchValue: '',\r\n        filterValue: 'default',\r\n        sortValue: 'default'\r\n    }\r\n};\r\n\r\nexport const employeeresPageSlice = createSlice({\r\n    name: 'employeeresPage',\r\n    initialState,\r\n    reducers: {\r\n        ADD_EMPLOYEE: (state, action) => {\r\n            state.value.push(action.payload);\r\n        },\r\n        UPDATE_EMPLOYEE: (state, action) => {\r\n            const data = state.value;\r\n            data[action.payload.index] = action.payload.value;\r\n            state.value = data;\r\n        },\r\n        REMOVE_EMPLOYEE: (state, action) => {\r\n            const data = state.value;\r\n            data.splice(action.payload, 1);\r\n            state.value = data;\r\n        },\r\n        SET_EMPLOYEERES_SERACH_VALUE: (state, action) => {\r\n            state.pageData.searchValue = action.payload;\r\n        },\r\n        SET_EMPLOYEERES_FILTER_VALUE: (state, action) => {\r\n            state.pageData.filterValue = action.payload;\r\n        },\r\n        SET_EMPLOYEERES_SORT_VALUE: (state, action) => {\r\n            state.pageData.sortValue = action.payload;\r\n        }\r\n    },\r\n    extraReducers: (builder) => {\r\n        builder.addCase(getEmployeeresData.pending, (state) => {\r\n            state.loading = true;\r\n        }),\r\n        builder.addCase(getEmployeeresData.fulfilled, (state, action) => {\r\n            state.loading = false;\r\n            state.value = action.payload;\r\n        }),\r\n        builder.addCase(getEmployeeresData.rejected, (state) => {\r\n            state.loading = false;\r\n            state.error = 'Błąd ładowania danych';\r\n        })\r\n    }\r\n});\r\n\r\nexport const {ADD_EMPLOYEE, UPDATE_EMPLOYEE, REMOVE_EMPLOYEE, SET_EMPLOYEERES_SERACH_VALUE, SET_EMPLOYEERES_FILTER_VALUE, SET_EMPLOYEERES_SORT_VALUE} = employeeresPageSlice.actions;\r\n\r\nexport const workersPage = (state: {employeeresPage: employeeresPageSliceType}) => state.employeeresPage.value;\r\n\r\nexport default employeeresPageSlice.reducer;","import { roomTypeDataType } from \"../types/roomTypeDataType\";\r\n\r\nexport const roomTypesData: roomTypeDataType[] = [\r\n    {\r\n        roomTypeId: 1,\r\n        roomTypeName: 'Sala konferencyjna (mała)'\r\n    },\r\n    {\r\n        roomTypeId: 2,\r\n        roomTypeName: 'Sala konferencyjna (duża)'\r\n    },\r\n    {\r\n        roomTypeId: 3,\r\n        roomTypeName: 'Sala szkoleniowa (mała)'\r\n    },\r\n    {\r\n        roomTypeId: 4,\r\n        roomTypeName: 'Sala szkoleniowa (duża)'\r\n    },\r\n    {\r\n        roomTypeId: 5,\r\n        roomTypeName: 'Sala ogólna'\r\n    },\r\n    {\r\n        roomTypeId: 6,\r\n        roomTypeName: 'Inne'\r\n    }\r\n];","import { roomDataType } from \"../types/roomDataType\";\r\nimport { roomTypesData } from \"./roomTypesData\";\r\n\r\nexport const roomsExampleData: roomDataType[] = [\r\n    {\r\n        roomId: 1,\r\n        roomName: 'Pomieszczenie Lorem Ipsum 1',\r\n        roomNumber: '001',\r\n        minimumRoomPeople: 1,\r\n        maximumRoomPeople: 35,\r\n        roomStatus: true,\r\n        roomType: `${roomTypesData[1].roomTypeName}`,\r\n        additionalInformation: 'Lorem, ipsum dolor sit amet consectetur adipisicing elit. Magnam placeat, aspernatur vel, molestiae ad iste id doloremque quod delectus officiis iusto soluta, exercitationem facere deserunt eos sed ipsum blanditiis nesciunt dolore animi commodi explicabo aut? Ab eligendi ratione voluptatem vitae inventore nobis quis omnis animi aspernatur nisi, consequuntur, nemo tempora laboriosam, perferendis nesciunt et iusto ea debitis cupiditate quam quibusdam.',\r\n        dateAdded: new Date(2022, 9, 1, 12, 45, 0).toJSON(),\r\n        modificationDate: null\r\n    },\r\n    {\r\n        roomId: 2,\r\n        roomName: 'Pomieszczenie Lorem Ipsum 2',\r\n        roomNumber: '002',\r\n        minimumRoomPeople: 8,\r\n        maximumRoomPeople: 40,\r\n        roomStatus: true,\r\n        roomType: `${roomTypesData[3].roomTypeName}`,\r\n        additionalInformation: 'Lorem, ipsum dolor sit amet consectetur adipisicing elit. Magnam placeat, aspernatur vel, molestiae ad iste id doloremque quod delectus officiis iusto soluta, exercitationem facere deserunt eos sed ipsum blanditiis nesciunt dolore animi commodi explicabo aut? Ab eligendi ratione voluptatem vitae inventore nobis quis omnis animi aspernatur nisi, consequuntur, nemo tempora laboriosam, perferendis nesciunt et iusto ea debitis cupiditate quam quibusdam.',\r\n        dateAdded: new Date(2022, 9, 1, 12, 45, 0).toJSON(),\r\n        modificationDate: new Date().toJSON()\r\n    },\r\n    {\r\n        roomId: 3,\r\n        roomName: 'Pomieszczenie Lorem Ipsum 3',\r\n        roomNumber: '003',\r\n        minimumRoomPeople: 1,\r\n        maximumRoomPeople: 16,\r\n        roomStatus: true,\r\n        roomType: `${roomTypesData[0].roomTypeName}`,\r\n        additionalInformation: 'Lorem, ipsum dolor sit amet consectetur adipisicing elit. Magnam placeat, aspernatur vel, molestiae ad iste id doloremque quod delectus officiis iusto soluta, exercitationem facere deserunt eos sed ipsum blanditiis nesciunt dolore animi commodi explicabo aut? Ab eligendi ratione voluptatem vitae inventore nobis quis omnis animi aspernatur nisi, consequuntur, nemo tempora laboriosam, perferendis nesciunt et iusto ea debitis cupiditate quam quibusdam.',\r\n        dateAdded: new Date(2022, 9, 1, 12, 45, 0).toJSON(),\r\n        modificationDate: new Date().toJSON()\r\n    },\r\n    {\r\n        roomId: 4,\r\n        roomName: 'Pomieszczenie Lorem Ipsum 4',\r\n        roomNumber: '004',\r\n        minimumRoomPeople: 1,\r\n        maximumRoomPeople: 25,\r\n        roomStatus: false,\r\n        roomType: `${roomTypesData[2].roomTypeName}`,\r\n        additionalInformation: 'Lorem, ipsum dolor sit amet consectetur adipisicing elit. Magnam placeat, aspernatur vel, molestiae ad iste id doloremque quod delectus officiis iusto soluta, exercitationem facere deserunt eos sed ipsum blanditiis nesciunt dolore animi commodi explicabo aut? Ab eligendi ratione voluptatem vitae inventore nobis quis omnis animi aspernatur nisi, consequuntur, nemo tempora laboriosam, perferendis nesciunt et iusto ea debitis cupiditate quam quibusdam.',\r\n        dateAdded: new Date(2022, 9, 1, 12, 45, 0).toJSON(),\r\n        modificationDate: null\r\n    },\r\n    {\r\n        roomId: 5,\r\n        roomName: 'Pomieszczenie Lorem Ipsum 5',\r\n        roomNumber: '005',\r\n        minimumRoomPeople: 5,\r\n        maximumRoomPeople: 15,\r\n        roomStatus: false,\r\n        roomType: `${roomTypesData[5].roomTypeName}`,\r\n        additionalInformation: 'Lorem, ipsum dolor sit amet consectetur adipisicing elit. Magnam placeat, aspernatur vel, molestiae ad iste id doloremque quod delectus officiis iusto soluta, exercitationem facere deserunt eos sed ipsum blanditiis nesciunt dolore animi commodi explicabo aut? Ab eligendi ratione voluptatem vitae inventore nobis quis omnis animi aspernatur nisi, consequuntur, nemo tempora laboriosam, perferendis nesciunt et iusto ea debitis cupiditate quam quibusdam.',\r\n        dateAdded: new Date(2022, 9, 1, 12, 45, 0).toJSON(),\r\n        modificationDate: new Date().toJSON()\r\n    },\r\n    {\r\n        roomId: 6,\r\n        roomName: 'Pomieszczenie Lorem Ipsum 6',\r\n        roomNumber: '006',\r\n        minimumRoomPeople: 1,\r\n        maximumRoomPeople: 45,\r\n        roomStatus: true,\r\n        roomType: `${roomTypesData[4].roomTypeName}`,\r\n        additionalInformation: 'Lorem, ipsum dolor sit amet consectetur adipisicing elit. Magnam placeat, aspernatur vel, molestiae ad iste id doloremque quod delectus officiis iusto soluta, exercitationem facere deserunt eos sed ipsum blanditiis nesciunt dolore animi commodi explicabo aut? Ab eligendi ratione voluptatem vitae inventore nobis quis omnis animi aspernatur nisi, consequuntur, nemo tempora laboriosam, perferendis nesciunt et iusto ea debitis cupiditate quam quibusdam.',\r\n        dateAdded: new Date(2022, 9, 1, 12, 45, 0).toJSON(),\r\n        modificationDate: null\r\n    }\r\n];","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\r\nimport { roomsExampleData } from '../../data/roomsExampleData';\r\nimport { ROOMS_LSTORAGE_NAME } from '../../data/staticPlatformData';\r\nimport { roomDataType } from '../../types/roomDataType';\r\nimport { roomsPageSliceType } from '../../types/slices/roomsPageSliceTypes';\r\n\r\nexport const getRoomsData = createAsyncThunk(\r\n    'roomsPage/getRoomsData',\r\n    async () => {\r\n        const promise = new Promise<roomDataType[]>((resolve, reject) => {\r\n            setTimeout(() => {\r\n                const getDataFromLocalstorage = localStorage.getItem(ROOMS_LSTORAGE_NAME)\r\n                \r\n                if (getDataFromLocalstorage != null) {\r\n                    resolve(JSON.parse(getDataFromLocalstorage))\r\n                    \r\n                } else {\r\n                    resolve(roomsExampleData)\r\n                }\r\n            }, 2000)\r\n        });\r\n        return promise\r\n    }\r\n);\r\n\r\nconst initialState: roomsPageSliceType = {\r\n    loading: true,\r\n    value: [],\r\n    error: null,\r\n    pageData: {\r\n        searchValue: '',\r\n        filterValue: 'default',\r\n        sortValue: 'default'\r\n    }\r\n};\r\n\r\nexport const roomsPageSlice = createSlice({\r\n    name: 'roomsPage',\r\n    initialState,\r\n    reducers: {\r\n        ADD_ROOM: (state, action) => {\r\n            state.value.push(action.payload);\r\n        },\r\n        UPDATE_ROOM: (state, action) => {\r\n            const data = state.value;\r\n            data[action.payload.index] = action.payload.value;\r\n            state.value = data;\r\n        },\r\n        REMOVE_ROOM: (state, action) => {\r\n            const data = state.value;\r\n            data.splice(action.payload, 1);\r\n            state.value = data;\r\n        },\r\n        SET_ROOMS_SERACH_VALUE: (state, action) => {\r\n            state.pageData.searchValue = action.payload;\r\n        },\r\n        SET_ROOMS_FILTER_VALUE: (state, action) => {\r\n            state.pageData.filterValue = action.payload;\r\n        },\r\n        SET_ROOMS_SORT_VALUE: (state, action) => {\r\n            state.pageData.sortValue = action.payload;\r\n        }\r\n    },\r\n    extraReducers: (builder) => {\r\n        builder.addCase(getRoomsData.pending, (state) => {\r\n            state.loading = true;\r\n        }),\r\n        builder.addCase(getRoomsData.fulfilled, (state, action) => {\r\n            state.loading = false;\r\n            state.value = action.payload;\r\n        }),\r\n        builder.addCase(getRoomsData.rejected, (state) => {\r\n            state.loading = false;\r\n            state.error = 'Błąd ładowania danych';\r\n        })\r\n    }\r\n});\r\n\r\nexport const {ADD_ROOM, UPDATE_ROOM, REMOVE_ROOM, SET_ROOMS_SERACH_VALUE, SET_ROOMS_FILTER_VALUE, SET_ROOMS_SORT_VALUE} = roomsPageSlice.actions;\r\n\r\nexport const roomsPage = (state: {roomsPage: roomsPageSliceType}) => state.roomsPage.value;\r\n\r\nexport default roomsPageSlice.reducer;","import { meetingCategoryDataType } from \"../types/meetingCategoryDataType\";\r\n\r\nexport const meetingsCategoriesData: meetingCategoryDataType[] = [\r\n    {\r\n        meetingCategoryId: 1,\r\n        meetingCategoryName: 'Spotkanie biznesowe'\r\n    },\r\n    {\r\n        meetingCategoryId: 2,\r\n        meetingCategoryName: 'Spotkanie szkoleniowe'\r\n    },\r\n    {\r\n        meetingCategoryId: 3,\r\n        meetingCategoryName: 'Spotkanie organizacyjne'\r\n    },\r\n    {\r\n        meetingCategoryId: 4,\r\n        meetingCategoryName: 'Spotkanie projektowe'\r\n    },\r\n    {\r\n        meetingCategoryId: 5,\r\n        meetingCategoryName: 'Spotkanie ogólne'\r\n    },\r\n    {\r\n        meetingCategoryId: 6,\r\n        meetingCategoryName: 'Inne'\r\n    }\r\n];","import { meetingDataType } from \"../types/meetingDataType\";\r\nimport { employeeresExampleData } from \"./employeeresExampleData\";\r\nimport { meetingsCategoriesData } from \"./meetingsCategoriesData\";\r\nimport { roomsExampleData } from \"./roomsExampleData\";\r\n\r\nexport const meetingsExampleData: meetingDataType[] = [\r\n    {\r\n        meetingId: 1,\r\n        meetingName: 'Spotkanie Lorem Ipsum 1',\r\n        meetingCategory: `${meetingsCategoriesData[5].meetingCategoryName}`,\r\n        roomName: `${roomsExampleData[0].roomName}`,\r\n        employeeName: `${employeeresExampleData[0].employeeName}`,\r\n        meetingPeopleNumber: 25,\r\n        meetingDate: new Date().toJSON(),\r\n        meetingTimeStart: '08:00',\r\n        meetingTimeEnd: '10:30',\r\n        additionalInformation: 'Lorem, ipsum dolor sit amet consectetur adipisicing elit. Magnam placeat, aspernatur vel, molestiae ad iste id doloremque quod delectus officiis iusto soluta, exercitationem facere deserunt eos sed ipsum blanditiis nesciunt dolore animi commodi explicabo aut? Ab eligendi ratione voluptatem vitae inventore nobis quis omnis animi aspernatur nisi, consequuntur, nemo tempora laboriosam, perferendis nesciunt et iusto ea debitis cupiditate quam quibusdam.',\r\n        dateAdded: new Date(new Date().setDate(new Date().getDate() - 8)).toJSON(),\r\n        modificationDate: null\r\n    },\r\n    {\r\n        meetingId: 2,\r\n        meetingName: 'Spotkanie Lorem Ipsum 2',\r\n        meetingCategory: `${meetingsCategoriesData[4].meetingCategoryName}`,\r\n        roomName: `${roomsExampleData[0].roomName}`,\r\n        employeeName: `${employeeresExampleData[1].employeeName}`,\r\n        meetingPeopleNumber: 21,\r\n        meetingDate: new Date().toJSON(),\r\n        meetingTimeStart: '10:45',\r\n        meetingTimeEnd: '14:00',\r\n        additionalInformation: 'Lorem, ipsum dolor sit amet consectetur adipisicing elit. Magnam placeat, aspernatur vel, molestiae ad iste id doloremque quod delectus officiis iusto soluta, exercitationem facere deserunt eos sed ipsum blanditiis nesciunt dolore animi commodi explicabo aut? Ab eligendi ratione voluptatem vitae inventore nobis quis omnis animi aspernatur nisi, consequuntur, nemo tempora laboriosam, perferendis nesciunt et iusto ea debitis cupiditate quam quibusdam.',\r\n        dateAdded: new Date(new Date().setDate(new Date().getDate() - 4)).toJSON(),\r\n        modificationDate: null\r\n    },\r\n    {\r\n        meetingId: 3,\r\n        meetingName: 'Spotkanie Lorem Ipsum 3',\r\n        meetingCategory: `${meetingsCategoriesData[1].meetingCategoryName}`,\r\n        roomName: `${roomsExampleData[0].roomName}`,\r\n        employeeName: `${employeeresExampleData[0].employeeName}`,\r\n        meetingPeopleNumber: 14,\r\n        meetingDate: new Date().toJSON(),\r\n        meetingTimeStart: '14:25',\r\n        meetingTimeEnd: '18:00',\r\n        additionalInformation: 'Lorem, ipsum dolor sit amet consectetur adipisicing elit. Magnam placeat, aspernatur vel, molestiae ad iste id doloremque quod delectus officiis iusto soluta, exercitationem facere deserunt eos sed ipsum blanditiis nesciunt dolore animi commodi explicabo aut? Ab eligendi ratione voluptatem vitae inventore nobis quis omnis animi aspernatur nisi, consequuntur, nemo tempora laboriosam, perferendis nesciunt et iusto ea debitis cupiditate quam quibusdam.',\r\n        dateAdded: new Date(new Date().setDate(new Date().getDate() - 3)).toJSON(),\r\n        modificationDate: null\r\n    },\r\n    {\r\n        meetingId: 4,\r\n        meetingName: 'Spotkanie Lorem Ipsum 4',\r\n        meetingCategory: `${meetingsCategoriesData[0].meetingCategoryName}`,\r\n        roomName: `${roomsExampleData[0].roomName}`,\r\n        employeeName: `${employeeresExampleData[0].employeeName}`,\r\n        meetingPeopleNumber: 18,\r\n        meetingDate: new Date().toJSON(),\r\n        meetingTimeStart: '18:10',\r\n        meetingTimeEnd: '20:00',\r\n        additionalInformation: 'Lorem, ipsum dolor sit amet consectetur adipisicing elit. Magnam placeat, aspernatur vel, molestiae ad iste id doloremque quod delectus officiis iusto soluta, exercitationem facere deserunt eos sed ipsum blanditiis nesciunt dolore animi commodi explicabo aut? Ab eligendi ratione voluptatem vitae inventore nobis quis omnis animi aspernatur nisi, consequuntur, nemo tempora laboriosam, perferendis nesciunt et iusto ea debitis cupiditate quam quibusdam.',\r\n        dateAdded: new Date(new Date().setDate(new Date().getDate() - 6)).toJSON(),\r\n        modificationDate: null\r\n    },\r\n    {\r\n        meetingId: 5,\r\n        meetingName: 'Spotkanie Lorem Ipsum 5',\r\n        meetingCategory: `${meetingsCategoriesData[3].meetingCategoryName}`,\r\n        roomName: `${roomsExampleData[1].roomName}`,\r\n        employeeName: `${employeeresExampleData[2].employeeName}`,\r\n        meetingPeopleNumber: 32,\r\n        meetingDate: new Date(2022, 9, 14, 0, 0, 0).toJSON(),\r\n        meetingTimeStart: '13:00',\r\n        meetingTimeEnd: '18:00',\r\n        additionalInformation: 'Lorem, ipsum dolor sit amet consectetur adipisicing elit. Magnam placeat, aspernatur vel, molestiae ad iste id doloremque quod delectus officiis iusto soluta, exercitationem facere deserunt eos sed ipsum blanditiis nesciunt dolore animi commodi explicabo aut? Ab eligendi ratione voluptatem vitae inventore nobis quis omnis animi aspernatur nisi, consequuntur, nemo tempora laboriosam, perferendis nesciunt et iusto ea debitis cupiditate quam quibusdam.',\r\n        dateAdded: new Date(2022, 9, 1, 12, 45, 0).toJSON(),\r\n        modificationDate: null\r\n    },\r\n    {\r\n        meetingId: 6,\r\n        meetingName: 'Spotkanie Lorem Ipsum 6',\r\n        meetingCategory: `${meetingsCategoriesData[2].meetingCategoryName}`,\r\n        roomName: `${roomsExampleData[0].roomName}`,\r\n        employeeName: `${employeeresExampleData[5].employeeName}`,\r\n        meetingPeopleNumber: 25,\r\n        meetingDate: new Date(2023, 9, 24, 0, 0, 0).toJSON(),\r\n        meetingTimeStart: '12:00',\r\n        meetingTimeEnd: '16:00',\r\n        additionalInformation: 'Lorem, ipsum dolor sit amet consectetur adipisicing elit. Magnam placeat, aspernatur vel, molestiae ad iste id doloremque quod delectus officiis iusto soluta, exercitationem facere deserunt eos sed ipsum blanditiis nesciunt dolore animi commodi explicabo aut? Ab eligendi ratione voluptatem vitae inventore nobis quis omnis animi aspernatur nisi, consequuntur, nemo tempora laboriosam, perferendis nesciunt et iusto ea debitis cupiditate quam quibusdam.',\r\n        dateAdded: new Date(new Date().setDate(new Date().getDate() - 12)).toJSON(),\r\n        modificationDate: null\r\n    },\r\n    {\r\n        meetingId: 7,\r\n        meetingName: 'Spotkanie Lorem Ipsum 7',\r\n        meetingCategory: `${meetingsCategoriesData[4].meetingCategoryName}`,\r\n        roomName: `${roomsExampleData[5].roomName}`,\r\n        employeeName: `${employeeresExampleData[5].employeeName}`,\r\n        meetingPeopleNumber: 26,\r\n        meetingDate: new Date(2022, 9, 25, 0, 0, 0).toJSON(),\r\n        meetingTimeStart: '14:00',\r\n        meetingTimeEnd: '16:00',\r\n        additionalInformation: 'Lorem, ipsum dolor sit amet consectetur adipisicing elit. Magnam placeat, aspernatur vel, molestiae ad iste id doloremque quod delectus officiis iusto soluta, exercitationem facere deserunt eos sed ipsum blanditiis nesciunt dolore animi commodi explicabo aut? Ab eligendi ratione voluptatem vitae inventore nobis quis omnis animi aspernatur nisi, consequuntur, nemo tempora laboriosam, perferendis nesciunt et iusto ea debitis cupiditate quam quibusdam.',\r\n        dateAdded: new Date(2022, 9, 1, 12, 45, 0).toJSON(),\r\n        modificationDate: null\r\n    },\r\n    {\r\n        meetingId: 8,\r\n        meetingName: 'Spotkanie Lorem Ipsum 8',\r\n        meetingCategory: `${meetingsCategoriesData[1].meetingCategoryName}`,\r\n        roomName: `${roomsExampleData[0].roomName}`,\r\n        employeeName: `${employeeresExampleData[1].employeeName}`,\r\n        meetingPeopleNumber: 19,\r\n        meetingDate: new Date(2023, 9, 28, 0, 0, 0).toJSON(),\r\n        meetingTimeStart: '08:00',\r\n        meetingTimeEnd: '10:30',\r\n        additionalInformation: 'Lorem, ipsum dolor sit amet consectetur adipisicing elit. Magnam placeat, aspernatur vel, molestiae ad iste id doloremque quod delectus officiis iusto soluta, exercitationem facere deserunt eos sed ipsum blanditiis nesciunt dolore animi commodi explicabo aut? Ab eligendi ratione voluptatem vitae inventore nobis quis omnis animi aspernatur nisi, consequuntur, nemo tempora laboriosam, perferendis nesciunt et iusto ea debitis cupiditate quam quibusdam.',\r\n        dateAdded: new Date(2022, 9, 1, 12, 45, 0).toJSON(),\r\n        modificationDate: null\r\n    },\r\n    {\r\n        meetingId: 9,\r\n        meetingName: 'Spotkanie Lorem Ipsum 9',\r\n        meetingCategory: `${meetingsCategoriesData[2].meetingCategoryName}`,\r\n        roomName: `${roomsExampleData[5].roomName}`,\r\n        employeeName: `${employeeresExampleData[0].employeeName}`,\r\n        meetingPeopleNumber: 40,\r\n        meetingDate: new Date(2022, 10, 20, 0, 0, 0).toJSON(),\r\n        meetingTimeStart: '11:30',\r\n        meetingTimeEnd: '14:30',\r\n        additionalInformation: 'Lorem, ipsum dolor sit amet consectetur adipisicing elit. Magnam placeat, aspernatur vel, molestiae ad iste id doloremque quod delectus officiis iusto soluta, exercitationem facere deserunt eos sed ipsum blanditiis nesciunt dolore animi commodi explicabo aut? Ab eligendi ratione voluptatem vitae inventore nobis quis omnis animi aspernatur nisi, consequuntur, nemo tempora laboriosam, perferendis nesciunt et iusto ea debitis cupiditate quam quibusdam.',\r\n        dateAdded: new Date(2022, 9, 1, 12, 45, 0).toJSON(),\r\n        modificationDate: null\r\n    },\r\n    {\r\n        meetingId: 10,\r\n        meetingName: 'Spotkanie Lorem Ipsum 10',\r\n        meetingCategory: `${meetingsCategoriesData[0].meetingCategoryName}`,\r\n        roomName: `${roomsExampleData[1].roomName}`,\r\n        employeeName: `${employeeresExampleData[2].employeeName}`,\r\n        meetingPeopleNumber: 29,\r\n        meetingDate: new Date(2023, 10, 21, 0, 0, 0).toJSON(),\r\n        meetingTimeStart: '13:00',\r\n        meetingTimeEnd: '16:30',\r\n        additionalInformation: 'Lorem, ipsum dolor sit amet consectetur adipisicing elit. Magnam placeat, aspernatur vel, molestiae ad iste id doloremque quod delectus officiis iusto soluta, exercitationem facere deserunt eos sed ipsum blanditiis nesciunt dolore animi commodi explicabo aut? Ab eligendi ratione voluptatem vitae inventore nobis quis omnis animi aspernatur nisi, consequuntur, nemo tempora laboriosam, perferendis nesciunt et iusto ea debitis cupiditate quam quibusdam.',\r\n        dateAdded: new Date(2022, 9, 1, 12, 45, 0).toJSON(),\r\n        modificationDate: null\r\n    },\r\n    {\r\n        meetingId: 11,\r\n        meetingName: 'Spotkanie Lorem Ipsum 11',\r\n        meetingCategory: `${meetingsCategoriesData[3].meetingCategoryName}`,\r\n        roomName: `${roomsExampleData[1].roomName}`,\r\n        employeeName: `${employeeresExampleData[2].employeeName}`,\r\n        meetingPeopleNumber: 33,\r\n        meetingDate: new Date(2023, 12, 12, 0, 0, 0).toJSON(),\r\n        meetingTimeStart: '09:00',\r\n        meetingTimeEnd: '13:00',\r\n        additionalInformation: 'Lorem, ipsum dolor sit amet consectetur adipisicing elit. Magnam placeat, aspernatur vel, molestiae ad iste id doloremque quod delectus officiis iusto soluta, exercitationem facere deserunt eos sed ipsum blanditiis nesciunt dolore animi commodi explicabo aut? Ab eligendi ratione voluptatem vitae inventore nobis quis omnis animi aspernatur nisi, consequuntur, nemo tempora laboriosam, perferendis nesciunt et iusto ea debitis cupiditate quam quibusdam.',\r\n        dateAdded: new Date(2022, 9, 1, 12, 45, 0).toJSON(),\r\n        modificationDate: null\r\n    },\r\n    {\r\n        meetingId: 12,\r\n        meetingName: 'Spotkanie Lorem Ipsum 12',\r\n        meetingCategory: `${meetingsCategoriesData[5].meetingCategoryName}`,\r\n        roomName: `${roomsExampleData[1].roomName}`,\r\n        employeeName: `${employeeresExampleData[0].employeeName}`,\r\n        meetingPeopleNumber: 16,\r\n        meetingDate: new Date(2022, 12, 10, 0, 0, 0).toJSON(),\r\n        meetingTimeStart: '08:00',\r\n        meetingTimeEnd: '14:00',\r\n        additionalInformation: 'Lorem, ipsum dolor sit amet consectetur adipisicing elit. Magnam placeat, aspernatur vel, molestiae ad iste id doloremque quod delectus officiis iusto soluta, exercitationem facere deserunt eos sed ipsum blanditiis nesciunt dolore animi commodi explicabo aut? Ab eligendi ratione voluptatem vitae inventore nobis quis omnis animi aspernatur nisi, consequuntur, nemo tempora laboriosam, perferendis nesciunt et iusto ea debitis cupiditate quam quibusdam.',\r\n        dateAdded: new Date(2022, 9, 1, 12, 45, 0).toJSON(),\r\n        modificationDate: null\r\n    },\r\n];","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\r\nimport { meetingsExampleData } from '../../data/meetingsExampleData';\r\nimport { MEETINGS_LSTORAGE_NAME } from '../../data/staticPlatformData';\r\nimport { meetingDataType } from '../../types/meetingDataType';\r\nimport { meetingsPageSliceType } from '../../types/slices/meetingsPageSliceTypes';\r\n\r\nexport const getMeetingsData = createAsyncThunk(\r\n    'meetingsPage/getMeetingsData',\r\n    async () => {\r\n        const promise = new Promise<meetingDataType[]>((resolve, reject) => {\r\n            setTimeout(() => {\r\n                const getDataFromLocalstorage = localStorage.getItem(MEETINGS_LSTORAGE_NAME)\r\n                \r\n                if (getDataFromLocalstorage != null) {\r\n                    resolve(JSON.parse(getDataFromLocalstorage))\r\n                    \r\n                } else {\r\n                    resolve(meetingsExampleData)\r\n                }\r\n            }, 2500)\r\n        });\r\n        return promise\r\n    }\r\n);\r\n\r\nconst initialState: meetingsPageSliceType = {\r\n    loading: true,\r\n    value: [],\r\n    error: null,\r\n    pageData: {\r\n        searchValue: '',\r\n        filterValue: 'default',\r\n        sortValue: 'default'\r\n    }\r\n};\r\n\r\nexport const meetingsPageSlice = createSlice({\r\n    name: 'meetingsPage',\r\n    initialState,\r\n    reducers: {\r\n        ADD_MEETING: (state, action) => {\r\n            state.value.push(action.payload);\r\n        },\r\n        UPDATE_MEETING: (state, action) => {\r\n            const data = state.value;\r\n            data[action.payload.index] = action.payload.value;\r\n            state.value = data;\r\n        },\r\n        REMOVE_MEETING: (state, action) => {\r\n            const data = state.value;\r\n            data.splice(action.payload, 1);\r\n            state.value = data;\r\n        },\r\n        SET_MEETINGS_SERACH_VALUE: (state, action) => {\r\n            state.pageData.searchValue = action.payload;\r\n        },\r\n        SET_MEETINGS_FILTER_VALUE: (state, action) => {\r\n            state.pageData.filterValue = action.payload;\r\n        },\r\n        SET_MEETINGS_SORT_VALUE: (state, action) => {\r\n            state.pageData.sortValue = action.payload;\r\n        }\r\n    },\r\n    extraReducers: (builder) => {\r\n        builder.addCase(getMeetingsData.pending, (state) => {\r\n            state.loading = true;\r\n        }),\r\n        builder.addCase(getMeetingsData.fulfilled, (state, action) => {\r\n            state.loading = false;\r\n            state.value = action.payload;\r\n        }),\r\n        builder.addCase(getMeetingsData.rejected, (state) => {\r\n            state.loading = false;\r\n            state.error = 'Błąd ładowania danych';\r\n        })\r\n    }\r\n});\r\n\r\nexport const {ADD_MEETING, UPDATE_MEETING, REMOVE_MEETING, SET_MEETINGS_SERACH_VALUE, SET_MEETINGS_FILTER_VALUE, SET_MEETINGS_SORT_VALUE} = meetingsPageSlice.actions;\r\n\r\nexport const meetingsPage = (state: {meetingsPage: meetingsPageSliceType}) => state.meetingsPage.value;\r\n\r\nexport default meetingsPageSlice.reducer;","import { screenDataType } from \"../types/screenDataType\";\r\n\r\nexport const screensExampleData: screenDataType[] = [\r\n    {\r\n        screenId: 1,\r\n        screenName: 'Ekran Lorem Ipsum 1',\r\n        roomName: 'Pomieszczenie Lorem Ipsum 1',\r\n        screenLocation: 'Budynek Lorem Ipsum, Piętro 1',\r\n        screenStatus: true,\r\n        screenType: 'horizontal',\r\n        additionalInformation: 'Lorem, ipsum dolor sit amet consectetur adipisicing elit. Magnam placeat, aspernatur vel, molestiae ad iste id doloremque quod delectus officiis iusto soluta, exercitationem facere deserunt eos sed ipsum blanditiis nesciunt dolore animi commodi explicabo aut? Ab eligendi ratione voluptatem vitae inventore nobis quis omnis animi aspernatur nisi, consequuntur, nemo tempora laboriosam, perferendis nesciunt et iusto ea debitis cupiditate quam quibusdam.',\r\n        dateAdded: new Date(2022, 9, 1, 12, 45, 0).toJSON(),\r\n        modificationDate: null\r\n    },\r\n    {\r\n        screenId: 2,\r\n        screenName: 'Ekran Lorem Ipsum 2',\r\n        roomName: 'Pomieszczenie Lorem Ipsum 4',\r\n        screenLocation: 'Budynek Lorem Ipsum, Piętro 1',\r\n        screenStatus: true,\r\n        screenType: 'horizontal',\r\n        additionalInformation: 'Lorem, ipsum dolor sit amet consectetur adipisicing elit. Magnam placeat, aspernatur vel, molestiae ad iste id doloremque quod delectus officiis iusto soluta, exercitationem facere deserunt eos sed ipsum blanditiis nesciunt dolore animi commodi explicabo aut? Ab eligendi ratione voluptatem vitae inventore nobis quis omnis animi aspernatur nisi, consequuntur, nemo tempora laboriosam, perferendis nesciunt et iusto ea debitis cupiditate quam quibusdam.',\r\n        dateAdded: new Date(2022, 9, 1, 12, 45, 0).toJSON(),\r\n        modificationDate: new Date().toJSON()\r\n    },\r\n    {\r\n        screenId: 3,\r\n        screenName: 'Ekran Lorem Ipsum 3',\r\n        roomName: 'Pomieszczenie Lorem Ipsum 2',\r\n        screenLocation: 'Budynek Lorem Ipsum, Piętro 2',\r\n        screenStatus: false,\r\n        screenType: 'vertical',\r\n        additionalInformation: 'Lorem, ipsum dolor sit amet consectetur adipisicing elit. Magnam placeat, aspernatur vel, molestiae ad iste id doloremque quod delectus officiis iusto soluta, exercitationem facere deserunt eos sed ipsum blanditiis nesciunt dolore animi commodi explicabo aut? Ab eligendi ratione voluptatem vitae inventore nobis quis omnis animi aspernatur nisi, consequuntur, nemo tempora laboriosam, perferendis nesciunt et iusto ea debitis cupiditate quam quibusdam.',\r\n        dateAdded: new Date(2022, 9, 1, 12, 45, 0).toJSON(),\r\n        modificationDate: null\r\n    },\r\n    {\r\n        screenId: 4,\r\n        screenName: 'Ekran Lorem Ipsum 4',\r\n        roomName: 'Pomieszczenie Lorem Ipsum 5',\r\n        screenLocation: 'Budynek Lorem Ipsum, Piętro 2',\r\n        screenStatus: false,\r\n        screenType: 'vertical',\r\n        additionalInformation: 'Lorem, ipsum dolor sit amet consectetur adipisicing elit. Magnam placeat, aspernatur vel, molestiae ad iste id doloremque quod delectus officiis iusto soluta, exercitationem facere deserunt eos sed ipsum blanditiis nesciunt dolore animi commodi explicabo aut? Ab eligendi ratione voluptatem vitae inventore nobis quis omnis animi aspernatur nisi, consequuntur, nemo tempora laboriosam, perferendis nesciunt et iusto ea debitis cupiditate quam quibusdam.',\r\n        dateAdded: new Date(2022, 9, 1, 12, 45, 0).toJSON(),\r\n        modificationDate: new Date().toJSON()\r\n    },\r\n    {\r\n        screenId: 5,\r\n        screenName: 'Ekran Lorem Ipsum 5',\r\n        roomName: 'Pomieszczenie Lorem Ipsum 6',\r\n        screenLocation: 'Budynek Lorem Ipsum, Piętro 1',\r\n        screenStatus: true,\r\n        screenType: 'vertical',\r\n        additionalInformation: 'Lorem, ipsum dolor sit amet consectetur adipisicing elit. Magnam placeat, aspernatur vel, molestiae ad iste id doloremque quod delectus officiis iusto soluta, exercitationem facere deserunt eos sed ipsum blanditiis nesciunt dolore animi commodi explicabo aut? Ab eligendi ratione voluptatem vitae inventore nobis quis omnis animi aspernatur nisi, consequuntur, nemo tempora laboriosam, perferendis nesciunt et iusto ea debitis cupiditate quam quibusdam.',\r\n        dateAdded: new Date(2022, 9, 1, 12, 45, 0).toJSON(),\r\n        modificationDate: null\r\n    },\r\n    {\r\n        screenId: 6,\r\n        screenName: 'Ekran Lorem Ipsum 6',\r\n        roomName: 'Pomieszczenie Lorem Ipsum 3',\r\n        screenLocation: 'Budynek Lorem Ipsum, Piętro 2',\r\n        screenStatus: true,\r\n        screenType: 'horizontal',\r\n        additionalInformation: 'Lorem, ipsum dolor sit amet consectetur adipisicing elit. Magnam placeat, aspernatur vel, molestiae ad iste id doloremque quod delectus officiis iusto soluta, exercitationem facere deserunt eos sed ipsum blanditiis nesciunt dolore animi commodi explicabo aut? Ab eligendi ratione voluptatem vitae inventore nobis quis omnis animi aspernatur nisi, consequuntur, nemo tempora laboriosam, perferendis nesciunt et iusto ea debitis cupiditate quam quibusdam.',\r\n        dateAdded: new Date(2022, 9, 1, 12, 45, 0).toJSON(),\r\n        modificationDate: new Date().toJSON()\r\n    }\r\n];","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\r\nimport { screensExampleData } from '../../data/screensExampleData';\r\nimport { SCREENS_LSTORAGE_NAME } from '../../data/staticPlatformData';\r\nimport { screenDataType } from '../../types/screenDataType';\r\nimport { screensPageSliceType } from '../../types/slices/screensPageSliceTypes';\r\n\r\nexport const getScreensData = createAsyncThunk(\r\n    'screensPage/getScreensData',\r\n    async () => {\r\n        const promise = new Promise<screenDataType[]>((resolve, reject) => {\r\n            setTimeout(() => {\r\n                const getDataFromLocalstorage = localStorage.getItem(SCREENS_LSTORAGE_NAME)\r\n                \r\n                if (getDataFromLocalstorage != null) {\r\n                    resolve(JSON.parse(getDataFromLocalstorage))\r\n                    \r\n                } else {\r\n                    resolve(screensExampleData)\r\n                }\r\n            }, 2850)\r\n        });\r\n        return promise\r\n    }\r\n);\r\n\r\nconst initialState: screensPageSliceType = {\r\n    loading: true,\r\n    value: [],\r\n    error: null,\r\n    pageData: {\r\n        searchValue: '',\r\n        filterValue: 'default',\r\n        sortValue: 'default'\r\n    }\r\n};\r\n\r\nexport const screensPageSlice = createSlice({\r\n    name: 'screensPage',\r\n    initialState,\r\n    reducers: {\r\n        ADD_SCREEN: (state, action) => {\r\n            state.value.push(action.payload);\r\n        },\r\n        UPDATE_SCREEN: (state, action) => {\r\n            const data = state.value;\r\n            data[action.payload.index] = action.payload.value;\r\n            state.value = data;\r\n        },\r\n        REMOVE_SCREEN: (state, action) => {\r\n            const data = state.value;\r\n            data.splice(action.payload, 1);\r\n            state.value = data;\r\n        },\r\n        SET_SCREENS_SERACH_VALUE: (state, action) => {\r\n            state.pageData.searchValue = action.payload;\r\n        },\r\n        SET_SCREENS_FILTER_VALUE: (state, action) => {\r\n            state.pageData.filterValue = action.payload;\r\n        },\r\n        SET_SCREENS_SORT_VALUE: (state, action) => {\r\n            state.pageData.sortValue = action.payload;\r\n        }\r\n    },\r\n    extraReducers: (builder) => {\r\n        builder.addCase(getScreensData.pending, (state) => {\r\n            state.loading = true;\r\n        }),\r\n        builder.addCase(getScreensData.fulfilled, (state, action) => {\r\n            state.loading = false;\r\n            state.value = action.payload;\r\n        }),\r\n        builder.addCase(getScreensData.rejected, (state) => {\r\n            state.loading = false;\r\n            state.error = 'Błąd ładowania danych';\r\n        })\r\n    }\r\n});\r\n\r\nexport const {ADD_SCREEN, UPDATE_SCREEN, REMOVE_SCREEN, SET_SCREENS_SERACH_VALUE, SET_SCREENS_FILTER_VALUE, SET_SCREENS_SORT_VALUE} = screensPageSlice.actions;\r\n\r\nexport const screensPage = (state: {screensPage: screensPageSliceType}) => state.screensPage.value;\r\n\r\nexport default screensPageSlice.reducer;","import React from 'react';\r\nimport \"../../sass/components/LoadingSpinner/LoadingSpinner.css\";\r\n\r\nfunction LoadingSpinner() {\r\n  return (\r\n    <div className=\"loading-spinner\"></div>\r\n  )\r\n}\r\n\r\nexport default LoadingSpinner;","import React, { useEffect } from \"react\";\r\nimport { useAppDispatch, useAppSelector } from \"../../hooks/redux-hooks\";\r\nimport { getEmployeeresData } from \"../../redux/slices/employeeresPageSlice\";\r\nimport { getRoomsData } from \"../../redux/slices/roomsPageSlice\";\r\nimport { getMeetingsData } from \"../../redux/slices/meetingsPageSlice\";\r\nimport { getScreensData } from \"../../redux/slices/screensPageSlice\";\r\nimport \"../../sass/pages/DashboardPage/DashboardPage.css\";\r\nimport LoadingSpinner from \"../../components/LoadingSpinner/LoadingSpinner\";\r\nimport { AppDispatch, RootState } from \"../../redux/store\";\r\nimport { screenDataType } from \"../../types/screenDataType\";\r\nimport { meetingDataType } from \"../../types/meetingDataType\";\r\nimport { PLATFORM_NAME } from \"../../data/staticPlatformData\";\r\nimport { roomsPageSliceType } from \"../../types/slices/roomsPageSliceTypes\";\r\nimport { meetingsPageSliceType } from \"../../types/slices/meetingsPageSliceTypes\";\r\nimport { screensPageSliceType } from \"../../types/slices/screensPageSliceTypes\";\r\nimport { employeeresPageSliceType } from \"../../types/slices/employeeresPageSliceTypes\";\r\n\r\nfunction DashboardPage() {\r\n  const roomsData: roomsPageSliceType = useAppSelector((state: RootState) => state.roomsPage);\r\n  const meetingsData: meetingsPageSliceType = useAppSelector((state: RootState) => state.meetingsPage);\r\n  const screensData: screensPageSliceType = useAppSelector((state: RootState) => state.screensPage);\r\n  const employeeresData: employeeresPageSliceType = useAppSelector((state: RootState) => state.employeeresPage);\r\n\r\n  const dispatch: AppDispatch = useAppDispatch();\r\n\r\n  const currentDate: Date = new Date(new Date().getFullYear(), new Date().getMonth(), new Date().getDate(), 23, 59, 59);\r\n  const dayCurrentDate: number = new Date().getDay();\r\n\r\n  const lastTwoWeeksDate: Date = new Date(new Date().getFullYear(), new Date().getMonth(), new Date().getDate() - 14, 0, 0, 0);\r\n\r\n  const currentWeekDateStart: Date = dayCurrentDate > 0\r\n    ? new Date(new Date().setDate(currentDate.getDate() - dayCurrentDate + 1))\r\n    : new Date(new Date().setDate(currentDate.getDate() - 6))\r\n\r\n  const weekDateStart = new Date(currentWeekDateStart.getFullYear(), currentWeekDateStart.getMonth(), currentWeekDateStart.getDate(), 0, 0, 0);\r\n\r\n  const currentWeekDateEnd: Date = dayCurrentDate > 0\r\n    ? new Date(new Date().setDate(currentDate.getDate() + 7 - dayCurrentDate))\r\n    : new Date(new Date().setDate(currentDate.getDate() + 6))\r\n\r\n  const weekDateEnd: Date = new Date(currentWeekDateEnd.getFullYear(), currentWeekDateEnd.getMonth(), currentWeekDateEnd.getDate(), 23, 59, 59);\r\n\r\n\r\n  const meetingsStatistics: number = meetingsData.value.length;\r\n  const roomsStatistics: number = roomsData.value.length;\r\n  const employeeresStatistics: number = employeeresData.value.length;\r\n\r\n  const meetingsCreateLastTwoWeeksStatistics: number = meetingsData.value.filter((e: meetingDataType) => new Date(e.dateAdded).getTime() >= lastTwoWeeksDate.getTime() && new Date(e.dateAdded).getTime() <= currentDate.getTime()).length;\r\n\r\n  const meetingsCurrentWeekStatistics: number = meetingsData.value.filter((e: meetingDataType) => new Date(e.meetingDate).getTime() >= weekDateStart.getTime() && new Date(e.meetingDate).getTime() <= weekDateEnd.getTime()).length;\r\n\r\n  const activeScreensStatistics: number = screensData.value.filter((e: screenDataType) => e.screenStatus === true).length;\r\n\r\n  useEffect((): void => {\r\n    dispatch(getRoomsData());\r\n    dispatch(getMeetingsData());\r\n    dispatch(getScreensData());\r\n    dispatch(getEmployeeresData());\r\n    document.title = `${PLATFORM_NAME}`;\r\n  }, []);\r\n\r\n  return (\r\n      <main className=\"main-dashboard-page\">\r\n        <div className=\"main-dashboard-page__element main-dashboard-page__element--1\">\r\n          <div className=\"element__title\">\r\n            Platforma do zarządzania rezerwacją pomieszczeń oraz Digital Signage System\r\n          </div>\r\n          <div className=\"element__description\">\r\n            Lorem ipsum dolor sit amet consectetur adipisicing elit. Rem velit quisquam exercitationem! Id similique alias tempore repellat voluptatum incidunt officiis doloribus porro obcaecati, hic animi laudantium. Eveniet ipsum, ut ex corrupti exercitationem, quidem quo officia aliquam magni, esse ullam? Laboriosam ut cum expedita est deleniti! Lorem ipsum dolor sit, amet consectetur adipisicing elit. Similique, fugiat dolore officia tempora dolorem id placeat quae architecto error enim, non magnam nisi omnis repudiandae accusamus quasi, quos sunt repellendus eos neque tenetur facere sapiente!\r\n          </div>\r\n          <span className=\"material-symbols-outlined\">groups</span>\r\n        </div>\r\n        <div className=\"main-dashboard-page__element main-dashboard-page__element--2\">\r\n          {\r\n            meetingsData.loading\r\n              ? <LoadingSpinner/>\r\n              : meetingsData.error != null \r\n                ? meetingsData.error\r\n                : (\r\n                  <>\r\n                  <div className=\"element__stats-value\">{meetingsStatistics}</div>\r\n                  <div className=\"element__stats-title\">Spotkań</div>\r\n                  <div className=\"element__stats-description\">\r\n                    Lorem ipsum dolor sit amet, consectetur adipisicing elit. Voluptate exercitationem quisquam at sint blanditiis quam pariatur nostrum sapiente veniam iure.\r\n                  </div>\r\n                </>\r\n                )\r\n          }\r\n        </div>\r\n        <div className=\"main-dashboard-page__element main-dashboard-page__element--3\">\r\n          {\r\n            roomsData.loading\r\n              ? <LoadingSpinner/>\r\n              : roomsData.error != null\r\n                ? roomsData.error\r\n                : (\r\n                  <>\r\n                    <div className=\"element__stats-value\">{roomsStatistics}</div>\r\n                    <div className=\"element__stats-title\">Pomieszczeń</div>\r\n                    <div className=\"element__stats-description\">\r\n                      Lorem ipsum dolor sit amet, consectetur adipisicing elit. Voluptate exercitationem quisquam at sint blanditiis quam pariatur nostrum sapiente veniam iure.\r\n                    </div>\r\n                  </>\r\n                )\r\n          }\r\n        </div>\r\n        <div className=\"main-dashboard-page__element main-dashboard-page__element--4\">\r\n          {\r\n            employeeresData.loading\r\n              ? <LoadingSpinner/>\r\n              : employeeresData.error != null\r\n                ? employeeresData.error\r\n                : (\r\n                  <>\r\n                    <div className=\"element__stats-value\">{employeeresStatistics}</div>\r\n                    <div className=\"element__stats-title\">Pracowników</div>\r\n                    <div className=\"element__stats-description\">\r\n                      Lorem ipsum dolor sit amet, consectetur adipisicing elit. Voluptate exercitationem quisquam at sint blanditiis quam pariatur nostrum sapiente veniam iure.\r\n                    </div>\r\n                  </>\r\n                )\r\n          }\r\n        </div>\r\n        <div className=\"main-dashboard-page__element main-dashboard-page__element--5\">\r\n          {\r\n            meetingsData.loading\r\n              ? <LoadingSpinner/>\r\n              : meetingsData.error != null\r\n                ? meetingsData.error\r\n                : (\r\n                  <>\r\n                    <div className=\"element__stats-value\">{meetingsCreateLastTwoWeeksStatistics}</div>\r\n                    <div className=\"element__stats-title\">Spotkań utworzonych w ostatnich dwóch tygodniach</div>\r\n                    <div className=\"element__stats-description\">\r\n                      Lorem {lastTwoWeeksDate.toLocaleDateString()} - {currentDate.toLocaleDateString()} ipsum dolor sit amet, consectetur adipisicing elit. Voluptate exercitationem quisquam at sint blanditiis quam pariatur nostrum sapiente veniam iure. Lorem ipsum dolor sit amet, consectetur adipisicing elit. Facere iure vitae sapiente, dicta itaque doloremque? Natus dolor excepturi quasi similique itaque beatae. Iure repellat itaque est culpa, enim nemo neque.\r\n                    </div>\r\n                  </>\r\n                )\r\n\r\n          }\r\n        </div>\r\n        <div className=\"main-dashboard-page__element main-dashboard-page__element--6\">\r\n          {\r\n            meetingsData.loading\r\n              ? <LoadingSpinner/>\r\n              : meetingsData.error != null\r\n                ? meetingsData.error\r\n                : (\r\n                  <>\r\n                    <div className=\"element__stats-value\">{meetingsCurrentWeekStatistics}</div>\r\n                    <div className=\"element__stats-title\">Spotkań w aktualnym tygodniu</div>\r\n                    <div className=\"element__stats-description\">\r\n                      Lorem {weekDateStart.toLocaleDateString()} - {weekDateEnd.toLocaleDateString()} ipsum dolor sit amet, consectetur adipisicing elit. Voluptate exercitationem quisquam at sint apiente veniam iure. Lorem ipsum dolor sit amet consectetur adipisicing elit. Ea voluptas aut reiciendis nisi, assumenda facere.\r\n                    </div>\r\n                  </>\r\n                )\r\n          }\r\n        </div>\r\n        <div className=\"main-dashboard-page__element main-dashboard-page__element--7\">\r\n          {\r\n            screensData.loading\r\n              ? <LoadingSpinner/>\r\n              : screensData.error != null\r\n                ? screensData.error\r\n                : (\r\n                  <>\r\n                    <div className=\"element__stats-value\">{activeScreensStatistics}</div>\r\n                    <div className=\"element__stats-title\">Aktywnych ekranów</div>\r\n                    <div className=\"element__stats-description\">\r\n                      Lorem ipsum dolor sit amet, consectetur adipisicing elit. Voluptate exercitationem quisquam at sint blanditiis quam pariatur nostrum sapiente veniam iure. Lorem ipsum dolor sit amet consectetur adipisicing elit. Soluta quae cum illo eaque consequuntur velit?\r\n                    </div>\r\n                    <span className=\"material-symbols-outlined\">monitor</span>\r\n                  </>\r\n                )\r\n          }\r\n        </div>\r\n      </main>\r\n  );\r\n}\r\n\r\nexport default DashboardPage;\r\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\r\nimport { roomTypesData } from '../../data/roomTypesData';\r\nimport { ROOM_TYPES_LSTORAGE_NAME } from '../../data/staticPlatformData';\r\nimport { roomTypeDataType } from '../../types/roomTypeDataType';\r\nimport { roomTypesSliceType } from '../../types/slices/roomTypesSliceTypes';\r\n\r\nexport const getRoomTypesData = createAsyncThunk(\r\n    'roomTypes/getRoomTypesData',\r\n    async () => {\r\n        const promise = new Promise<roomTypeDataType[]>((resolve, reject) => {\r\n            setTimeout(() => {\r\n                const getDataFromLocalstorage = localStorage.getItem(ROOM_TYPES_LSTORAGE_NAME)\r\n                \r\n                if (getDataFromLocalstorage != null) {\r\n                    resolve(JSON.parse(getDataFromLocalstorage))\r\n                    \r\n                } else {\r\n                    resolve(roomTypesData)\r\n                }\r\n            }, 2350)\r\n        });\r\n        return promise\r\n    }\r\n);\r\n\r\nconst initialState: roomTypesSliceType = {\r\n    loading: true,\r\n    value: [],\r\n    error: null,\r\n};\r\n\r\nexport const roomTypesSlice = createSlice({\r\n    name: 'roomTypes',\r\n    initialState,\r\n    reducers: {\r\n        ADD_TYPE: (state, action) => {\r\n            state.value.push(action.payload);\r\n        },\r\n        UPDATE_TYPE: (state, action) => {\r\n            const data = state.value;\r\n            data[action.payload.index] = action.payload.value;\r\n            state.value = data;\r\n        },\r\n        REMOVE_TYPE: (state, action) => {\r\n            const data = state.value;\r\n            data.splice(action.payload, 1);\r\n            state.value = data;\r\n        }\r\n    },\r\n    extraReducers: (builder) => {\r\n        builder.addCase(getRoomTypesData.pending, (state) => {\r\n            state.loading = true;\r\n        }),\r\n        builder.addCase(getRoomTypesData.fulfilled, (state, action) => {\r\n            state.loading = false;\r\n            state.value = action.payload;\r\n        }),\r\n        builder.addCase(getRoomTypesData.rejected, (state) => {\r\n            state.loading = false;\r\n            state.error = 'Błąd ładowania danych';\r\n        })\r\n    }\r\n});\r\n\r\nexport const {ADD_TYPE, UPDATE_TYPE, REMOVE_TYPE} = roomTypesSlice.actions;\r\n\r\nexport const roomTypes = (state: {roomTypes: roomTypesSliceType}) => state.roomTypes.value;\r\n\r\nexport default roomTypesSlice.reducer;","import React, { useEffect, useState } from 'react';\r\nimport { useAppDispatch } from '../../../hooks/redux-hooks';\r\nimport { SET_ROOMS_FILTER_VALUE, SET_ROOMS_SERACH_VALUE, SET_ROOMS_SORT_VALUE } from '../../../redux/slices/roomsPageSlice';\r\nimport { AppDispatch } from '../../../redux/store';\r\n\r\nfunction RoomsContentHeader() {\r\n  const dispatch: AppDispatch = useAppDispatch();\r\n\r\n  const [searchValue, setSearchValue] = useState<string>();\r\n\r\n  const selectSearchValue = (): void => {\r\n    dispatch(SET_ROOMS_SERACH_VALUE(searchValue));\r\n  };\r\n\r\n  const selectFilterValue = (e: React.ChangeEvent<HTMLSelectElement>): void => {\r\n    dispatch(SET_ROOMS_FILTER_VALUE(e.target.value));\r\n  };\r\n\r\n  const selectSortValue = (e: React.ChangeEvent<HTMLSelectElement>): void => {\r\n    dispatch(SET_ROOMS_SORT_VALUE(e.target.value));\r\n  };\r\n\r\n  useEffect((): void => {\r\n    if (searchValue == '') {\r\n      dispatch(SET_ROOMS_SERACH_VALUE(''));\r\n    }\r\n  }, [searchValue]);\r\n\r\n  useEffect((): void => {\r\n    setSearchValue('');\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"main-content__header\">\r\n      <div className=\"header__group\">\r\n        <div className=\"group__element-with-icon\">\r\n          <input type=\"text\" className=\"group__input\" placeholder=\"Szukaj...\" onChange={(e) => {setSearchValue(e.target.value)}}/>\r\n          <span className=\"material-symbols-outlined\">search</span>\r\n        </div>\r\n        <input type=\"button\" className=\"group__button\" value=\"Szukaj\" onClick={() => {selectSearchValue()}}/>\r\n      </div>\r\n      <div className=\"header__group\">\r\n        <label className=\"group__label\">\r\n          Filtrowanie widoku\r\n          <div className=\"group__element-with-icon\">\r\n            <select className=\"group__select\" onChange={(e) => {selectFilterValue(e)}}>\r\n              <option value=\"default\">Domyślnie</option>\r\n              <option value=\"active-rooms\">Aktywne pomieszczenia</option>\r\n              <option value=\"inactive-rooms\">Nieaktywne pomieszczenia</option>\r\n            </select>\r\n            <span className=\"material-symbols-outlined\">arrow_drop_down</span>\r\n          </div>\r\n        </label>\r\n        <label className=\"group__label\">\r\n          Sortowanie widoku\r\n          <div className=\"group__element-with-icon\">\r\n            <select className=\"group__select\" onChange={(e) => {selectSortValue(e)}}>   \r\n              <option value=\"default\">Domyślnie</option>\r\n              <option value=\"name-room-sort-up\">Nazwa pomieszczenia (rosnąco)</option>\r\n              <option value=\"name-room-sort-down\">Nazwa pomieszczenia (malejąco)</option>\r\n              <option value=\"smallest-number-people-room\">Od największej liczby osób w pomieszczeniu</option>\r\n              <option value=\"largest-number-people-room\">Od najmniejszej liczby osób w pomieszczeniu</option>\r\n              <option value=\"oldest-date-added\">Od najstarszej daty dodania</option>\r\n              <option value=\"latest-date-added\">Od najnowszej daty dodania</option>\r\n            </select>\r\n            <span className=\"material-symbols-outlined\">arrow_drop_down</span>\r\n          </div>\r\n        </label>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default RoomsContentHeader;","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\r\nimport { NOTIFICATION_LSTORAGE_NAME } from '../../data/staticPlatformData';\r\nimport { globalSettingsSliceType } from '../../types/slices/globalSettingsSliceTypes';\r\n\r\nexport const getNotificationsData = createAsyncThunk(\r\n    'globalSettings/getNotificationsData',\r\n    async () => {\r\n        const promise = new Promise<[]>((resolve, reject) => {\r\n            const getDataFromLocalstorage = localStorage.getItem(NOTIFICATION_LSTORAGE_NAME)\r\n\r\n            if (getDataFromLocalstorage != null) {\r\n                resolve(JSON.parse(getDataFromLocalstorage))\r\n            } else {\r\n                resolve([])\r\n            }\r\n        })\r\n        return promise\r\n    }\r\n);\r\n\r\nconst initialState: globalSettingsSliceType = {\r\n    viewSidebar: false,\r\n    viewModalWindow: false,\r\n    typeOfModalWindow: null,\r\n    editMeetingElement: null,\r\n    editRoomElement: null,\r\n    editEmployeeElement: null,\r\n    editScreenElement: null,\r\n    agreementIndexElement: null,\r\n    agreementDataType: null,\r\n    notification: {\r\n        notificationsData: []\r\n    }\r\n};\r\n\r\nexport const globalSettingsSlice = createSlice({\r\n    name: 'globalSettings',\r\n    initialState,\r\n    reducers: {\r\n        OPEN_SIDEBAR: (state) => {\r\n            state.viewSidebar = true;\r\n        },\r\n        CLOSE_SIDEBAR: (state) => {\r\n            state.viewSidebar = false;\r\n        },\r\n        OPEN_MODAL_WINDOW: (state, action) => {\r\n            state.viewModalWindow = true;\r\n            state.typeOfModalWindow = action.payload;\r\n        },\r\n        OPEN_EDIT_MODAL_WINDOW: (state, action) => {\r\n            state.viewModalWindow = true;\r\n            state.typeOfModalWindow = action.payload.type;\r\n            switch (action.payload.type) {\r\n                case \"edit-employee\":\r\n                    state.editEmployeeElement = action.payload.element;\r\n                    break;\r\n\r\n                case \"edit-meeting\":\r\n                    state.editMeetingElement = action.payload.element;\r\n                    break;\r\n\r\n                case \"edit-room\":\r\n                    state.editRoomElement = action.payload.element;\r\n                    break;\r\n\r\n                case \"edit-screen\":\r\n                    state.editScreenElement = action.payload.element;\r\n                    break;\r\n            }\r\n        },\r\n        OPEN_ARGEEMENT_MODAL_WINDOW: (state, action) => {\r\n            state.viewModalWindow = true;\r\n            state.typeOfModalWindow = action.payload.type;\r\n            state.agreementIndexElement = action.payload.index;\r\n            state.agreementDataType = action.payload.dataType;\r\n        },\r\n        CLOSE_MODAL_WINDOW: (state) => {\r\n            state.viewModalWindow = false;\r\n            state.typeOfModalWindow = null;\r\n            state.editMeetingElement = null;\r\n            state.editRoomElement = null;\r\n            state.editEmployeeElement = null;\r\n            state.editScreenElement = null;\r\n            state.agreementIndexElement = null;\r\n        },\r\n        ADD_NOTIFICATION: (state, action) => {\r\n            let [newId] = state.notification.notificationsData.map((e) => e.notificationId).sort((a, b) => b - a)\r\n\r\n            if (newId) {\r\n                ++newId;\r\n            } else {\r\n                newId = 1;\r\n            }\r\n\r\n            state.notification.notificationsData.push({notificationId: newId, ...action.payload})\r\n        },\r\n        SET_NOTIFICATION_READ_STATUS: (state, action) => {\r\n            const data = state.notification.notificationsData\r\n            data[action.payload].seenNotification = !data[action.payload].seenNotification\r\n            \r\n            state.notification.notificationsData = data\r\n        },\r\n        CLEAR_NOTIFICATIONS_DATA: (state) => {\r\n            state.notification.notificationsData = []\r\n        }\r\n    }, extraReducers: (builder) => {\r\n        builder.addCase(getNotificationsData.pending, (state) => {\r\n            state.notification.notificationsData = [];\r\n        }),\r\n        builder.addCase(getNotificationsData.fulfilled, (state, action) => {\r\n            state.notification.notificationsData = action.payload;\r\n        }),\r\n        builder.addCase(getNotificationsData.rejected, (state) => {\r\n            state.notification.notificationsData = [];\r\n        })\r\n    }\r\n});\r\n\r\nexport const {OPEN_SIDEBAR, CLOSE_SIDEBAR, OPEN_MODAL_WINDOW, OPEN_EDIT_MODAL_WINDOW, OPEN_ARGEEMENT_MODAL_WINDOW, CLOSE_MODAL_WINDOW, ADD_NOTIFICATION, SET_NOTIFICATION_READ_STATUS, CLEAR_NOTIFICATIONS_DATA} = globalSettingsSlice.actions;\r\n\r\nexport const settingsPage = (state: {globalSettings: {value: globalSettingsSliceType}}) => state.globalSettings.value;\r\n\r\nexport default globalSettingsSlice.reducer;","export const dateStringToDateLocalString = (date: string): string => {\r\n  return new Date(date).toLocaleDateString();\r\n};\r\n","export const saveToLocalstorage = (name: string, value: any): void => {\r\n  localStorage.setItem(name, JSON.stringify(value));\r\n};\r\n","export const shortenedTextFormat = (value: string | null, count: number = 15): string | null => {\r\n  if (value) {\r\n    const words: string[] = value.split(\" \");\r\n\r\n    if (words.length <= count) {\r\n      return value;\r\n    } else {\r\n      let newText: string[] = [];\r\n\r\n      for (let i = 0; i < count; i++) {\r\n        newText.push(words[i]);\r\n      }\r\n\r\n      const result: string = `${newText.join(\" \")}...`;\r\n      return result;\r\n    }\r\n  } else {\r\n    return null;\r\n  }\r\n};\r\n","import React, { useEffect } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { ROOMS_LSTORAGE_NAME } from '../../../data/staticPlatformData';\r\nimport { useAppDispatch, useAppSelector } from '../../../hooks/redux-hooks';\r\nimport { OPEN_ARGEEMENT_MODAL_WINDOW, OPEN_EDIT_MODAL_WINDOW } from '../../../redux/slices/globalSettingsSlice';\r\nimport { AppDispatch, RootState } from '../../../redux/store';\r\nimport { roomDataType } from '../../../types/roomDataType';\r\nimport { roomsFilterValueType, roomsSortValueType } from '../../../types/slices/roomsPageSliceTypes';\r\nimport { dateStringToDateLocalString } from '../../../utils/dateStringToDateLocalString';\r\nimport { saveToLocalstorage } from '../../../utils/saveToLocalStorage';\r\nimport { shortenedTextFormat } from '../../../utils/shortenedTextFormat';\r\n\r\nfunction RoomsContentTable() {\r\n  const roomsData = useAppSelector((state: RootState) => state.roomsPage);\r\n\r\n  const roomsPageSearchValue: string = roomsData.pageData.searchValue;\r\n  const roomsPageFilterValue: roomsFilterValueType = roomsData.pageData.filterValue;\r\n  const roomsPageSortValue: roomsSortValueType = roomsData.pageData.sortValue;\r\n\r\n  const dispatch: AppDispatch = useAppDispatch();\r\n\r\n  const editSelectedRoom = (roomElement: roomDataType): void => {\r\n    dispatch(OPEN_EDIT_MODAL_WINDOW({type: 'edit-room', element: roomElement}));\r\n  };\r\n\r\n  const deleteSelectedRoom = (roomId: number): void => {\r\n    const [roomElement]: roomDataType[] = roomsData.value.filter((e: roomDataType) => e.roomId === roomId);\r\n    const roomElementIndex: number = roomsData.value.indexOf(roomElement);\r\n    dispatch(OPEN_ARGEEMENT_MODAL_WINDOW({type: 'delete-agreement', dataType: 'roomsData', index: (roomElementIndex)}));\r\n  };\r\n\r\n  const getDataViewSearchValue = (data: roomDataType[]) => {\r\n    const newData: roomDataType[] = data.filter((e: roomDataType) => e.roomName.toUpperCase().includes(roomsPageSearchValue.toUpperCase()));\r\n    return newData\r\n  };\r\n\r\n  const getDataViewFitlering = (data: roomDataType[]) => {\r\n    switch (roomsPageFilterValue) {\r\n      case \"active-rooms\":\r\n        const dataActiveRooms: roomDataType[] = data.filter((e: roomDataType) => e.roomStatus === true);\r\n        return dataActiveRooms\r\n\r\n      case \"inactive-rooms\":\r\n        const dataInactiveRooms: roomDataType[] = data.filter((e: roomDataType) => e.roomStatus === false);\r\n        return dataInactiveRooms\r\n\r\n      default:\r\n        return data\r\n    }\r\n  };\r\n\r\n  const getDataViewSort = (data: roomDataType[]) => {\r\n    switch (roomsPageSortValue) {\r\n      case \"name-room-sort-up\":\r\n        const dataNameRoomSortUp: roomDataType[] = data.sort((a, b) => a.roomName.localeCompare(b.roomName));\r\n        return dataNameRoomSortUp\r\n\r\n      case \"name-room-sort-down\":\r\n        const dataNameRoomSortDown: roomDataType[] = data.sort((a, b) => b.roomName.localeCompare(a.roomName));\r\n        return dataNameRoomSortDown\r\n      \r\n      case \"smallest-number-people-room\":\r\n        const dataSmallestNumberPeopleRoom: roomDataType[] = data.sort((a, b) => b.maximumRoomPeople - a.maximumRoomPeople);\r\n        return dataSmallestNumberPeopleRoom\r\n\r\n      case \"largest-number-people-room\":\r\n        const dataLargestNumberPeopleRoom: roomDataType[] = data.sort((a, b) => a.maximumRoomPeople - b.maximumRoomPeople);\r\n        return dataLargestNumberPeopleRoom\r\n\r\n      case \"oldest-date-added\":\r\n        const dataOldestDateAdded: roomDataType[] = data.sort((a, b) => Date.parse(a.dateAdded) - Date.parse(b.dateAdded));\r\n        return dataOldestDateAdded\r\n\r\n      case \"latest-date-added\":\r\n        const dataLatestDateAdded: roomDataType[] = data.sort((a, b) => Date.parse(b.dateAdded) - Date.parse(a.dateAdded));\r\n        return dataLatestDateAdded\r\n\r\n      default:\r\n        const activeRooms: roomDataType[] = data.filter((e: roomDataType) => e.roomStatus === true);\r\n        const inactiveRooms: roomDataType[] = data.filter((e: roomDataType) => e.roomStatus === false);\r\n        const defaultSortData: roomDataType[] = [...activeRooms, ...inactiveRooms];\r\n        return defaultSortData\r\n    }    \r\n  };\r\n\r\n  const getRoomsList = (): roomDataType[] => {\r\n    let data: roomDataType[];\r\n    data = getDataViewSearchValue(roomsData.value);\r\n    data = getDataViewFitlering(data);\r\n    data = getDataViewSort(data);\r\n\r\n    return data;\r\n  };\r\n\r\n  const data: roomDataType[] = getRoomsList();\r\n\r\n  const roomsDataTable = data.map((e: roomDataType): JSX.Element => {\r\n    return (\r\n            <tr key={e.roomId} className=\"table-tr\">\r\n            <td className=\"table-td\">{e.roomId}</td>\r\n            <td className=\"table-td\">\r\n              <div className={e.roomStatus ? 'td__status-active' : 'td__status-inactive'}>\r\n                {e.roomStatus ? 'Aktywne' : 'Nieaktywne'}\r\n              </div>\r\n            </td>\r\n            <td className=\"table-td table-td--primary-style\">{e.roomName}</td>\r\n            <td className=\"table-td\">{e.roomNumber}</td>\r\n            <td className=\"table-td\">{e.roomType}</td>\r\n            <td className=\"table-td\">{e.minimumRoomPeople} - {e.maximumRoomPeople}</td>\r\n            <td className=\"table-td table-td--long-text-primary table-td--secondary-style\">{shortenedTextFormat(e.additionalInformation)}\r\n            </td>\r\n            <td className=\"table-td\">{dateStringToDateLocalString(e.dateAdded)}</td>\r\n            <td className=\"table-td\">\r\n              <div className=\"table__buttons-container\">\r\n              <NavLink to={`/platform/rooms/room/${e.roomId}`}>\r\n                <div className=\"table-button\">\r\n                  <span className=\"material-symbols-outlined\">visibility</span>\r\n                </div>\r\n              </NavLink>\r\n              <div className=\"table-button\" onClick={() => {editSelectedRoom(e)}}>\r\n                <span className=\"material-symbols-outlined\">edit</span>\r\n              </div>\r\n              <div className=\"table-button\" onClick={() => {deleteSelectedRoom\r\n                (e.roomId)}}>\r\n                <span className=\"material-symbols-outlined\">delete</span>\r\n              </div>\r\n              </div>\r\n            </td>\r\n          </tr>\r\n    )\r\n  });\r\n\r\n  useEffect((): void => {\r\n      getRoomsList();\r\n  }, [roomsPageSearchValue, roomsPageFilterValue, roomsPageSortValue])\r\n\r\n  useEffect((): void => {\r\n    if (!roomsData.loading) {\r\n    saveToLocalstorage(ROOMS_LSTORAGE_NAME, roomsData.value);\r\n    } \r\n  }, [roomsData.value]);\r\n  \r\n  return (\r\n    <div className=\"main-content__table-container\">\r\n      <table className=\"table-container__table\">\r\n        <thead>\r\n          <tr>\r\n            <th className=\"table-th\">ID</th>\r\n            <th className=\"table-th\">Status</th>\r\n            <th className=\"table-th\">Nazwa pomieszczenia</th>\r\n            <th className=\"table-th\">Numer pomieszczenia</th>\r\n            <th className=\"table-th\">Rodzaj pomieszczenia</th>\r\n            <th className=\"table-th\">Ilość osób w pomieszczeniu</th>\r\n            <th className=\"table-th\">Dodatkowe informacje</th>\r\n            <th className=\"table-th\">Data dodania</th>\r\n            <th className=\"table-th\">Opcje</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {roomsDataTable}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default RoomsContentTable;","import React from 'react'\r\n\r\nconst printPage = (): void => {\r\n  window.print();\r\n};\r\n\r\nfunction PrintButton() {\r\n  return (\r\n    <button className=\"nav__button\" onClick={() => printPage()}>\r\n        <span className=\"material-symbols-outlined\">print</span>\r\n        Drukuj listę\r\n    </button>\r\n  )\r\n}\r\n\r\nexport default PrintButton","import React from 'react';\r\nimport PrintButton from '../../../components/PrintButton/PrintButton';\r\nimport { useAppDispatch } from '../../../hooks/redux-hooks';\r\nimport { OPEN_MODAL_WINDOW } from '../../../redux/slices/globalSettingsSlice';\r\nimport { AppDispatch } from '../../../redux/store';\r\n\r\nfunction RoomsHeader() {\r\n  const dispatch: AppDispatch = useAppDispatch();\r\n\r\n  const addRoom = (): void => {\r\n    dispatch(OPEN_MODAL_WINDOW('add-room'));\r\n  };\r\n\r\n  return (\r\n    <div className=\"main-rooms-page__header\">\r\n        <div className=\"header__title\">\r\n          <span className=\"material-symbols-outlined\">meeting_room</span>\r\n          Pomieszczenia\r\n        </div>\r\n        <div className=\"header__nav\">\r\n          <button className=\"nav__button\" onClick={() => {addRoom()}}>\r\n            <span className=\"material-symbols-outlined\">add_circle</span>\r\n            Dodaj pomieszczenie\r\n          </button>\r\n          <PrintButton/>\r\n      </div>\r\n      <div className=\"header__text\">\r\n        Lorem ipsum dolor, sit amet consectetur adipisicing elit. Temporibus\r\n        nam, ducimus quae deleniti recusandae sed corrupti dicta ullam autem\r\n        cupiditate? Quae ex aliquam dignissimos fuga, mollitia repudiandae\r\n        quaerat tempore rem cum explicabo fugiat cupiditate perferendis possimus\r\n        voluptatibus temporibus laudantium libero incidunt tempora minus\r\n        praesentium facilis saepe illo quidem. Consectetur est distinctio\r\n        voluptatum iure iste molestiae mollitia doloremque et repellendus alias\r\n        autem unde, magni inventore quae id illum. Facere est blanditiis enim,\r\n        laudantium eos nostrum iusto, quas odit corporis corrupti fugit totam et\r\n        sunt impedit nihil ducimus recusandae veniam ipsa commodi.\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default RoomsHeader;","import React, { useEffect } from \"react\";\r\nimport LoadingSpinner from \"../../components/LoadingSpinner/LoadingSpinner\";\r\nimport { PLATFORM_NAME } from \"../../data/staticPlatformData\";\r\nimport { useAppDispatch, useAppSelector } from \"../../hooks/redux-hooks\";\r\nimport { getRoomsData, SET_ROOMS_FILTER_VALUE, SET_ROOMS_SERACH_VALUE, SET_ROOMS_SORT_VALUE } from \"../../redux/slices/roomsPageSlice\";\r\nimport { getRoomTypesData } from \"../../redux/slices/roomTypesSlice\";\r\nimport { AppDispatch, RootState } from \"../../redux/store\";\r\nimport \"../../sass/pages/RoomsPage/RoomsPage.css\";\r\nimport { roomsPageSliceType } from \"../../types/slices/roomsPageSliceTypes\";\r\nimport { roomTypesSliceType } from \"../../types/slices/roomTypesSliceTypes\";\r\nimport RoomsContentHeader from \"./components/RoomsContentHeader\";\r\nimport RoomsContentTable from \"./components/RoomsContentTable\";\r\nimport RoomsHeader from \"./components/RoomsHeader\";\r\n\r\nfunction RoomsPage() {\r\n  const roomsData: roomsPageSliceType = useAppSelector((state: RootState) => state.roomsPage);\r\n  const roomTypesData: roomTypesSliceType = useAppSelector((state: RootState) => state.roomTypes);\r\n\r\n  const dispatch: AppDispatch = useAppDispatch();\r\n\r\n  useEffect((): void => {\r\n    dispatch(SET_ROOMS_SERACH_VALUE(''));\r\n    dispatch(SET_ROOMS_FILTER_VALUE(''));\r\n    dispatch(SET_ROOMS_SORT_VALUE(''));\r\n    dispatch(getRoomsData());\r\n    dispatch(getRoomTypesData());\r\n    document.title = `${PLATFORM_NAME} - Pomieszczenia`;\r\n  }, []);\r\n\r\n  return (\r\n    <main\r\n      className={\r\n        roomsData.loading || roomsData.error != null || roomTypesData.loading || roomTypesData.error != null\r\n          ? \"main-rooms-page main-rooms-page--content-center\"\r\n          : \"main-rooms-page\"\r\n      }\r\n    >\r\n      {roomsData.loading || roomTypesData.loading ? (\r\n        <LoadingSpinner />\r\n      ) : roomsData.error != null || roomTypesData.error != null ? (\r\n        roomsData.error || roomTypesData.error\r\n      ) : (\r\n        <>\r\n          <RoomsHeader />\r\n          <div className=\"main-rooms-page__main-content\">\r\n            <RoomsContentHeader />\r\n            <RoomsContentTable />\r\n          </div>\r\n        </>\r\n      )}\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default RoomsPage;\r\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\r\nimport { meetingsCategoriesData } from '../../data/meetingsCategoriesData';\r\nimport { MEETING_CATEGORIES_LSTORAGE_NAME } from '../../data/staticPlatformData';\r\nimport { meetingCategoryDataType } from '../../types/meetingCategoryDataType';\r\nimport { meetingCategoriesSliceType } from '../../types/slices/meetingCategoriesSliceTypes';\r\n\r\nexport const getMeetingCategoriesData = createAsyncThunk(\r\n    'meetingsCategories/getMeetingsCategoriesData',\r\n    async () => {\r\n        const promise = new Promise<meetingCategoryDataType[]>((resolve, reject) => {\r\n            setTimeout(() => {\r\n                const getDataFromLocalstorage = localStorage.getItem(MEETING_CATEGORIES_LSTORAGE_NAME)\r\n                \r\n                if (getDataFromLocalstorage != null) {\r\n                    resolve(JSON.parse(getDataFromLocalstorage))\r\n                    \r\n                } else {\r\n                    resolve(meetingsCategoriesData)\r\n                }\r\n            }, 2250)\r\n        });\r\n        return promise\r\n    }\r\n);\r\n\r\nconst initialState: meetingCategoriesSliceType = {\r\n    loading: true,\r\n    value: [],\r\n    error: null,\r\n};\r\n\r\nexport const meetingCategoriesSlice = createSlice({\r\n    name: 'meetingsCategories',\r\n    initialState,\r\n    reducers: {\r\n        ADD_CATEGORY: (state, action) => {\r\n            state.value.push(action.payload);\r\n        },\r\n        UPDATE_CATEGORY: (state, action) => {\r\n            const data = state.value;\r\n            data[action.payload.index] = action.payload.value;\r\n            state.value = data;\r\n        },\r\n        REMOVE_CATEGORY: (state, action) => {\r\n            const data = state.value;\r\n            data.splice(action.payload, 1);\r\n            state.value = data;\r\n        }\r\n    },\r\n    extraReducers: (builder) => {\r\n        builder.addCase(getMeetingCategoriesData.pending, (state) => {\r\n            state.loading = true;\r\n        }),\r\n        builder.addCase(getMeetingCategoriesData.fulfilled, (state, action) => {\r\n            state.loading = false;\r\n            state.value = action.payload;\r\n        }),\r\n        builder.addCase(getMeetingCategoriesData.rejected, (state) => {\r\n            state.loading = false;\r\n            state.error = 'Błąd ładowania danych';\r\n        })\r\n    }\r\n});\r\n\r\nexport const {ADD_CATEGORY, UPDATE_CATEGORY, REMOVE_CATEGORY} = meetingCategoriesSlice.actions;\r\n\r\nexport const meetingsCategories = (state: {meetingsCategories: meetingCategoriesSliceType}) => state.meetingsCategories.value;\r\n\r\nexport default meetingCategoriesSlice.reducer;","import React, { useEffect, useState } from \"react\";\r\nimport { useAppDispatch, useAppSelector } from \"../../../hooks/redux-hooks\";\r\nimport { SET_MEETINGS_FILTER_VALUE, SET_MEETINGS_SERACH_VALUE, SET_MEETINGS_SORT_VALUE } from \"../../../redux/slices/meetingsPageSlice\";\r\nimport { AppDispatch, RootState } from \"../../../redux/store\";\r\nimport { meetingsPageSliceType } from \"../../../types/slices/meetingsPageSliceTypes\";\r\n\r\nfunction MeetingsContentHeader() {\r\n  const meetingsData: meetingsPageSliceType = useAppSelector((state: RootState) => state.meetingsPage);\r\n  \r\n  const dispatch: AppDispatch = useAppDispatch();\r\n\r\n  const [searchValue, setSearchValue] = useState<string>(meetingsData.pageData.searchValue);\r\n\r\n  const selectSearchValue = (): void => {\r\n    dispatch(SET_MEETINGS_SERACH_VALUE(searchValue));\r\n  };\r\n\r\n  const selectFilterValue = (e: React.ChangeEvent<HTMLSelectElement>): void => {\r\n    dispatch(SET_MEETINGS_FILTER_VALUE(e.target.value));\r\n  };\r\n\r\n  const selectSortValue = (e: React.ChangeEvent<HTMLSelectElement>): void => {\r\n    dispatch(SET_MEETINGS_SORT_VALUE(e.target.value));\r\n  };\r\n\r\n  useEffect((): void => {\r\n    if (searchValue == '') {\r\n      dispatch(SET_MEETINGS_SERACH_VALUE(''))\r\n    }\r\n  }, [searchValue]);\r\n\r\n  useEffect((): void => {\r\n    setSearchValue(meetingsData.pageData.searchValue)\r\n  }, [meetingsData.pageData.searchValue]);\r\n\r\n  return (\r\n    <div className=\"main-content__header\">\r\n      <div className=\"header__group\">\r\n        <div className=\"group__element-with-icon\">\r\n          <input type=\"text\" className=\"group__input\" placeholder=\"Szukaj...\" value={searchValue} onChange={(e) => {setSearchValue(e.target.value)}}/>\r\n          <span className=\"material-symbols-outlined\">search</span>\r\n        </div>\r\n        <input type=\"button\" className=\"group__button\" value=\"Szukaj\" onClick={() => {selectSearchValue()}}/>\r\n      </div>\r\n\r\n      <div className=\"header__group\">\r\n        <label className=\"group__label\">\r\n          Filtrowanie widoku\r\n          <div className=\"group__element-with-icon\">\r\n            <select className=\"group__select\" onChange={(e) => {selectFilterValue(e)}}>\r\n              <option value=\"default\">Domyślnie</option>\r\n              <option value=\"meetings-active\">Spotkania w dniu dzisiejszym</option>\r\n              <option value=\"meetings-planned\">Spotkania zaplanowane</option>\r\n              <option value=\"meetings-ended\">Spotkania zakończone</option>\r\n            </select>\r\n            <span className=\"material-symbols-outlined\">arrow_drop_down</span>\r\n          </div>\r\n        </label>\r\n        <label className=\"group__label\">\r\n          Sortowanie widoku\r\n          <div className=\"group__element-with-icon\">\r\n            <select className=\"group__select\" onChange={(e) => {selectSortValue(e)}}>\r\n              <option value=\"default\">Domyślnie</option>\r\n              <option value=\"name-meeting-sort-up\">Nazwa spotkania (rosnąco)</option>\r\n              <option value=\"name-meeting-sort-down\">Nazwa spotkania (malejąco)</option>\r\n              <option value=\"oldest-meetings\">Od najstarszej daty spotkania</option>\r\n              <option value=\"latest-meetings\">Od najnowszej daty spotkania</option>\r\n            </select>\r\n            <span className=\"material-symbols-outlined\">arrow_drop_down</span>\r\n          </div>\r\n        </label>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MeetingsContentHeader;\r\n","export const convertDateAndTimeStringToMiliseconds = (\r\n  date: string | Date,\r\n  time: string\r\n): number => {\r\n  const hoursValue: string = time.slice(0, 2);\r\n  const minutesValue: string = time.slice(3, 5);\r\n  const secondsValue: string = time.slice(6, 8);\r\n\r\n  const dateValue: Date = new Date(date);\r\n  dateValue.setHours(parseInt(hoursValue));\r\n  dateValue.setMinutes(parseInt(minutesValue));\r\n  dateValue.setSeconds(secondsValue.length > 0 ? parseInt(secondsValue) : 0);\r\n  dateValue.setMilliseconds(0);\r\n\r\n  return dateValue.getTime();\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { MEETINGS_LSTORAGE_NAME } from \"../../../data/staticPlatformData\";\r\nimport { useAppDispatch, useAppSelector } from \"../../../hooks/redux-hooks\";\r\nimport { OPEN_ARGEEMENT_MODAL_WINDOW, OPEN_EDIT_MODAL_WINDOW } from \"../../../redux/slices/globalSettingsSlice\";\r\nimport { AppDispatch, RootState } from \"../../../redux/store\";\r\nimport { meetingDataType } from \"../../../types/meetingDataType\";\r\nimport { meetingsFilterValueType, meetingsPageSliceType, meetingsSortValueType } from \"../../../types/slices/meetingsPageSliceTypes\";\r\nimport { convertDateAndTimeStringToMiliseconds } from \"../../../utils/convertDateAndTimeStringToMiliseconds\";\r\nimport { dateStringToDateLocalString } from \"../../../utils/dateStringToDateLocalString\";\r\nimport { saveToLocalstorage } from \"../../../utils/saveToLocalStorage\";\r\nimport { shortenedTextFormat } from \"../../../utils/shortenedTextFormat\";\r\n\r\nfunction MeetingsContentTable() {\r\n  const meetingsData: meetingsPageSliceType = useAppSelector((state: RootState) => state.meetingsPage);\r\n\r\n  const meetingsPageSearchValue: string = meetingsData.pageData.searchValue;\r\n  const meetingsPageFilterValue: meetingsFilterValueType = meetingsData.pageData.filterValue;\r\n  const meetingsPageSortValue: meetingsSortValueType = meetingsData.pageData.sortValue;\r\n\r\n  const dispatch: AppDispatch = useAppDispatch();\r\n\r\n  const [currentDate, setCurrentDate] = useState(new Date());\r\n\r\n  const checkMeetingStatus = (meetingDate: string, meetingTimeStart: string, meetingTimeEnd: string): string => {\r\n    const startMeetingMiliseconds: number = convertDateAndTimeStringToMiliseconds(meetingDate, meetingTimeStart);\r\n    const endMeetingMiliseconds: number = convertDateAndTimeStringToMiliseconds(meetingDate, meetingTimeEnd);\r\n\r\n    const startCurrentDateMiliseconds: number = convertDateAndTimeStringToMiliseconds(new Date(), \"00:00:00\");\r\n    const currentDateMiliseconds: number = currentDate.getTime();\r\n    const endCurrentDateMiliseconds: number = convertDateAndTimeStringToMiliseconds(new Date(), \"23:59:59\");\r\n\r\n    if (endMeetingMiliseconds < startCurrentDateMiliseconds) {\r\n      return `Zakończone`\r\n\r\n    } else if (startMeetingMiliseconds >= startCurrentDateMiliseconds && endMeetingMiliseconds <= endCurrentDateMiliseconds) {\r\n      if (endMeetingMiliseconds < currentDateMiliseconds) {\r\n        return `Zakończone (dziś ${meetingTimeEnd})`\r\n\r\n      } else if (startMeetingMiliseconds > currentDateMiliseconds && endMeetingMiliseconds > currentDateMiliseconds) {\r\n        return `Zaplanowane (dziś ${meetingTimeStart})`\r\n        \r\n      } else {\r\n        return `W trakcie trwania`\r\n      }\r\n    } else {\r\n      return `Zaplanowane`\r\n    }\r\n  }\r\n\r\n  const checkMeetingStatusStyle = (meetingDate: string, meetingTimeStart: string, meetingTimeEnd: string): string => {\r\n    const startMeetingMiliseconds: number = convertDateAndTimeStringToMiliseconds(meetingDate, meetingTimeStart);\r\n    const endMeetingMiliseconds: number = convertDateAndTimeStringToMiliseconds(meetingDate, meetingTimeEnd);\r\n\r\n    const startCurrentDateMiliseconds: number = convertDateAndTimeStringToMiliseconds(new Date(), \"00:00:00\");\r\n    const currentDateMiliseconds: number = currentDate.getTime();\r\n    const endCurrentDateMiliseconds: number = convertDateAndTimeStringToMiliseconds(new Date(), \"23:59:59\");\r\n\r\n    if (endMeetingMiliseconds < startCurrentDateMiliseconds) {\r\n      return 'td__status-inactive'\r\n\r\n    } else if (startMeetingMiliseconds >= startCurrentDateMiliseconds && endMeetingMiliseconds <= endCurrentDateMiliseconds) {\r\n      if (endMeetingMiliseconds < currentDateMiliseconds) {\r\n        return 'td__status-inactive'\r\n\r\n      } else if (startMeetingMiliseconds > currentDateMiliseconds && endMeetingMiliseconds > currentDateMiliseconds) {\r\n        return 'td__status-inactive'\r\n        \r\n      } else {\r\n        return 'td__status-active'\r\n      }\r\n    } else {\r\n      return 'td__status-inactive'\r\n    }\r\n  };\r\n\r\n  const editSelectedMeeting = (meetingElement: meetingDataType): void => {\r\n    dispatch(OPEN_EDIT_MODAL_WINDOW({type: 'edit-meeting', element: meetingElement}));\r\n  };\r\n\r\n  const deleteSelectedMeeting = (meetingId: number): void => {\r\n    const [meetingElement]: meetingDataType[] = meetingsData.value.filter((e: meetingDataType) => e.meetingId === meetingId);\r\n    const meetingElementIndex: number = meetingsData.value.indexOf(meetingElement);\r\n    dispatch(OPEN_ARGEEMENT_MODAL_WINDOW({type: 'delete-agreement', dataType: 'meetingsData', index: (meetingElementIndex)}));\r\n  };\r\n\r\n  const getDataViewSearchValue = (data: meetingDataType[]): meetingDataType[] => {\r\n    const newData: meetingDataType[] = data.filter((e: meetingDataType) => e.meetingName.toUpperCase().includes(meetingsPageSearchValue.toUpperCase()));\r\n    return newData;\r\n  };\r\n\r\n  const getDataViewFitlering = (data: meetingDataType[]): meetingDataType[] => {\r\n    switch (meetingsPageFilterValue) {\r\n      case \"meetings-active\":\r\n        const dataMeetingsActive: meetingDataType[] = data.filter((e: meetingDataType) => new Date(e.meetingDate).toDateString() === new Date().toDateString());\r\n        return dataMeetingsActive\r\n\r\n      case \"meetings-planned\":\r\n        const dataMeetingsPlanned: meetingDataType[] = data.filter((e: meetingDataType) => new Date(e.meetingDate) > new Date());\r\n        return dataMeetingsPlanned\r\n      \r\n      case \"meetings-ended\":\r\n        const dataMeetingsEnded: meetingDataType[] = data.filter((e: meetingDataType) => new Date(e.meetingDate) < new Date(new Date().setDate(new Date().getDate() - 1)));\r\n        return dataMeetingsEnded\r\n\r\n      default:\r\n        return data\r\n    }\r\n  };\r\n\r\n  const currentDateTimeStart: Date = new Date();\r\n  currentDateTimeStart.setHours(0);\r\n  currentDateTimeStart.setMinutes(0);\r\n  currentDateTimeStart.setSeconds(0);\r\n\r\n  const currentDateTimeEnd: Date = new Date();\r\n  currentDateTimeEnd.setHours(23);\r\n  currentDateTimeEnd.setMinutes(59);\r\n  currentDateTimeEnd.setMilliseconds(59);\r\n\r\n  const getDataViewSort = (data: meetingDataType[]): meetingDataType[] => {\r\n    switch (meetingsPageSortValue) {\r\n      case \"name-meeting-sort-up\":\r\n        const dataNameMeetingsSortUp: meetingDataType[] = data.sort((a, b) => a.meetingName.localeCompare(b.meetingName));\r\n        return dataNameMeetingsSortUp\r\n\r\n      case \"name-meeting-sort-down\":\r\n        const dataNameMeetingsSortDown: meetingDataType[] = data.sort((a, b) => b.meetingName.localeCompare(a.meetingName));\r\n        return dataNameMeetingsSortDown\r\n\r\n      case \"oldest-meetings\":\r\n        const dataOldestMeetings: meetingDataType[] = data.sort((a, b) => Date.parse(a.meetingDate) - Date.parse(b.meetingDate));\r\n        return dataOldestMeetings\r\n\r\n      case \"latest-meetings\":\r\n        const dataLatestMeetings: meetingDataType[] = data.sort((a, b) => Date.parse(b.meetingDate) - Date.parse(a.meetingDate));\r\n        return dataLatestMeetings\r\n\r\n      default:\r\n        const currentDayActiveMeetings: meetingDataType[] = data.filter((e: meetingDataType) => new Date(e.meetingDate).toDateString() === new Date().toDateString() && convertDateAndTimeStringToMiliseconds(e.meetingDate, e.meetingTimeStart) <= new Date().getTime() && convertDateAndTimeStringToMiliseconds(e.meetingDate, e.meetingTimeEnd) >= new Date().getTime());\r\n\r\n        const currentDayOtherMeetings: meetingDataType[] = data.filter((e: meetingDataType) => new Date(e.meetingDate).toDateString() === new Date().toDateString() && !(currentDayActiveMeetings.includes(e)))\r\n\r\n        const plannedMeetings: meetingDataType[] = data.filter((e: meetingDataType) => new Date(e.meetingDate).getTime() > currentDateTimeEnd.getTime());\r\n\r\n        const endedMeetings: meetingDataType[] = data.filter((e: meetingDataType) => new Date(e.meetingDate).getTime() < currentDateTimeStart.getTime());\r\n        \r\n        const defaultSortData: meetingDataType[] = [...currentDayActiveMeetings, ...currentDayOtherMeetings, ...plannedMeetings, ...endedMeetings];\r\n        return defaultSortData\r\n    }    \r\n  };\r\n\r\n  const getMeetingsList = (): meetingDataType[] => {\r\n    let data: meetingDataType[];\r\n    data = getDataViewSearchValue(meetingsData.value);\r\n    data = getDataViewFitlering(data);\r\n    data = getDataViewSort(data);\r\n\r\n    return data\r\n  };\r\n\r\n  const data: meetingDataType[] = getMeetingsList();\r\n\r\n  const meetingsDataTable = data.map((e: meetingDataType): JSX.Element => {\r\n    return (\r\n      <tr className=\"table-tr\" key={e.meetingId}>\r\n      <td className=\"table-td\">{e.meetingId}</td>\r\n      <td className=\"table-td\">\r\n        <div className={checkMeetingStatusStyle(e.meetingDate, e.meetingTimeStart, e.meetingTimeEnd)}>\r\n          {checkMeetingStatus(e.meetingDate, e.meetingTimeStart, e.meetingTimeEnd)}\r\n        </div>\r\n      </td>\r\n      <td className=\"table-td table-td--long-text-secondary table-td--primary-style\">{e.meetingName}</td>\r\n      <td className=\"table-td\">{e.meetingCategory}</td>\r\n      <td className=\"table-td table-td--long-text-secondary\">{e.roomName}</td>\r\n      <td className=\"table-td\">{dateStringToDateLocalString(e.meetingDate)}</td>\r\n      <td className=\"table-td\">{e.meetingTimeStart} - {e.meetingTimeEnd}</td>\r\n      <td className=\"table-td\">{e.meetingPeopleNumber}</td>\r\n      <td className=\"table-td\">{e.employeeName}</td>\r\n      <td className=\"table-td table-td--long-text-primary table-td--secondary-style\">{shortenedTextFormat(e.additionalInformation)}\r\n      </td>\r\n      <td className=\"table-td\">{dateStringToDateLocalString(e.dateAdded)}</td>\r\n      <td className=\"table-td\">\r\n        <div className=\"table__buttons-container\">\r\n          <NavLink to={`/platform/meetings/meeting/${e.meetingId}`}>\r\n            <div className=\"table-button\">\r\n              <span className=\"material-symbols-outlined\">visibility</span>\r\n            </div>\r\n          </NavLink>\r\n          <div className=\"table-button\" onClick={() => {editSelectedMeeting(e)}}>\r\n            <span className=\"material-symbols-outlined\">edit</span>\r\n          </div>\r\n          <div className=\"table-button\" onClick={() => {deleteSelectedMeeting(e.meetingId)}}>\r\n            <span className=\"material-symbols-outlined\">delete</span>\r\n          </div>\r\n        </div>\r\n      </td>\r\n    </tr>\r\n    )\r\n  });\r\n\r\n  useEffect((): void => {\r\n      getMeetingsList()\r\n  }, [meetingsPageSearchValue, meetingsPageFilterValue, meetingsPageSortValue]);\r\n\r\n  useEffect((): void => {\r\n    if (!meetingsData.loading) {\r\n    saveToLocalstorage(MEETINGS_LSTORAGE_NAME, meetingsData.value);\r\n    } \r\n  }, [meetingsData.value]);\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      setCurrentDate(new Date())\r\n    }, 1000);\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"main-content__table-container\">\r\n      <table className=\"table-container__table\">\r\n        <thead>\r\n          <tr>\r\n            <th className=\"table-th\">ID</th>\r\n            <th className=\"table-th\">Status</th>\r\n            <th className=\"table-th\">Nazwa spotkania</th>\r\n            <th className=\"table-th\">Rodzaj spotkania</th>\r\n            <th className=\"table-th\">Pomieszczenie</th>\r\n            <th className=\"table-th\">Data spotkania</th>\r\n            <th className=\"table-th\">Godzina spotkania</th>\r\n            <th className=\"table-th\">Ilość osób</th>\r\n            <th className=\"table-th\">Organizator</th>\r\n            <th className=\"table-th\">Dodatkowe informacje</th>\r\n            <th className=\"table-th\">Data dodania</th>\r\n            <th className=\"table-th\">Opcje</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {meetingsDataTable}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MeetingsContentTable;\r\n","import React from \"react\";\r\nimport PrintButton from \"../../../components/PrintButton/PrintButton\";\r\nimport { useAppDispatch } from \"../../../hooks/redux-hooks\";\r\nimport { OPEN_MODAL_WINDOW } from \"../../../redux/slices/globalSettingsSlice\";\r\nimport { AppDispatch } from \"../../../redux/store\";\r\n\r\nfunction MeetingsHeader() {\r\n  const dispatch: AppDispatch = useAppDispatch();\r\n\r\n  const addMeeting = (): void => {\r\n    dispatch(OPEN_MODAL_WINDOW('add-meeting'));\r\n  };\r\n\r\n  return (\r\n    <div className=\"main-meetings-page__header\">\r\n      <div className=\"header__title\">\r\n        <span className=\"material-symbols-outlined\">groups</span>\r\n        Spotkania\r\n      </div>\r\n      <div className=\"header__nav\">\r\n        <button className=\"nav__button\" onClick={() => {addMeeting()}}>\r\n          <span className=\"material-symbols-outlined\">add_circle</span>\r\n          Dodaj spotkanie\r\n        </button>\r\n        <PrintButton/>\r\n      </div>\r\n      <div className=\"header__text\">\r\n        Lorem ipsum dolor, sit amet consectetur adipisicing elit. Temporibus\r\n        nam, ducimus quae deleniti recusandae sed corrupti dicta ullam autem\r\n        cupiditate? Quae ex aliquam dignissimos fuga, mollitia repudiandae\r\n        quaerat tempore rem cum explicabo fugiat cupiditate perferendis possimus\r\n        voluptatibus temporibus laudantium libero incidunt tempora minus\r\n        praesentium facilis saepe illo quidem. Consectetur est distinctio\r\n        voluptatum iure iste molestiae mollitia doloremque et repellendus alias\r\n        autem unde, magni inventore quae id illum. Facere est blanditiis enim,\r\n        laudantium eos nostrum iusto, quas odit corporis corrupti fugit totam et\r\n        sunt impedit nihil ducimus recusandae veniam ipsa commodi.\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MeetingsHeader;\r\n","import React, { useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport LoadingSpinner from \"../../components/LoadingSpinner/LoadingSpinner\";\r\nimport { PLATFORM_NAME } from \"../../data/staticPlatformData\";\r\nimport { useAppDispatch, useAppSelector } from \"../../hooks/redux-hooks\";\r\nimport { getEmployeeresData } from \"../../redux/slices/employeeresPageSlice\";\r\nimport { getMeetingCategoriesData } from \"../../redux/slices/meetingCategoriesSlice\";\r\nimport { getMeetingsData, SET_MEETINGS_FILTER_VALUE, SET_MEETINGS_SERACH_VALUE, SET_MEETINGS_SORT_VALUE } from \"../../redux/slices/meetingsPageSlice\";\r\nimport { getRoomsData } from \"../../redux/slices/roomsPageSlice\";\r\nimport { AppDispatch, RootState } from \"../../redux/store\";\r\nimport \"../../sass/pages/MeetingsPage/MeetingsPage.css\";\r\nimport { employeeresPageSliceType } from \"../../types/slices/employeeresPageSliceTypes\";\r\nimport { meetingCategoriesSliceType } from \"../../types/slices/meetingCategoriesSliceTypes\";\r\nimport { meetingsPageSliceType } from \"../../types/slices/meetingsPageSliceTypes\";\r\nimport { roomsPageSliceType } from \"../../types/slices/roomsPageSliceTypes\";\r\nimport MeetingsContentHeader from \"./components/MeetingsContentHeader\";\r\nimport MeetingsContentTable from \"./components/MeetingsContentTable\";\r\nimport MeetingsHeader from \"./components/MeetingsHeader\";\r\n\r\nfunction MeetingsPage() {\r\n  const { value } = useParams();\r\n\r\n  const meetingsData: meetingsPageSliceType = useAppSelector((state: RootState) => state.meetingsPage);\r\n  const meetingCategoriesData: meetingCategoriesSliceType = useAppSelector((state: RootState) => state.meetingCategories);\r\n  const roomsData: roomsPageSliceType = useAppSelector((state: RootState) => state.roomsPage);\r\n  const employeeresData: employeeresPageSliceType = useAppSelector((state: RootState) => state.employeeresPage);\r\n\r\n  const dispatch: AppDispatch = useAppDispatch();\r\n\r\n  useEffect((): void => {\r\n    dispatch(SET_MEETINGS_SERACH_VALUE(''));\r\n    dispatch(SET_MEETINGS_FILTER_VALUE('default'));\r\n    dispatch(SET_MEETINGS_SORT_VALUE('default'));\r\n    dispatch(getMeetingsData());\r\n    dispatch(getRoomsData());\r\n    dispatch(getEmployeeresData());\r\n    dispatch(getMeetingCategoriesData());\r\n\r\n    if (value) dispatch(SET_MEETINGS_SERACH_VALUE(value))\r\n\r\n    document.title = `${PLATFORM_NAME} - Spotkania`;\r\n  }, []);\r\n\r\n  return (\r\n    <main\r\n      className={\r\n        meetingsData.loading || meetingsData.error != null || \r\n        roomsData.loading || roomsData.error != null || \r\n        employeeresData.loading || employeeresData.error != null || meetingCategoriesData.loading || meetingCategoriesData.error != null\r\n          ? \"main-meetings-page main-meetings-page--content-center\"\r\n          : \"main-meetings-page\"\r\n      }\r\n    >\r\n      {meetingsData.loading || \r\n      roomsData.loading || \r\n      employeeresData.loading || meetingCategoriesData.loading ? (\r\n        <LoadingSpinner />\r\n      ) : meetingsData.error != null || \r\n      roomsData.error != null || \r\n      employeeresData.error != null || meetingCategoriesData.error != null  ? (\r\n        meetingsData.error || \r\n        roomsData.error || \r\n        employeeresData.error || meetingCategoriesData.error\r\n      ) : (\r\n        <>\r\n          <MeetingsHeader />\r\n          <div className=\"main-meetings-page__main-content\">\r\n            <MeetingsContentHeader />\r\n            <MeetingsContentTable />\r\n          </div>\r\n        </>\r\n      )}\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default MeetingsPage;\r\n","export const dateStringToLocalString = (date: string): string => {\r\n  return new Date(date).toLocaleString();\r\n};\r\n","import React from 'react';\r\nimport { screenDataType } from '../../../types/screenDataType';\r\nimport { dateStringToLocalString } from '../../../utils/dateStringToLocalString';\r\n\r\nfunction ScreenInfoContent(props: {selectedScreenData: screenDataType | null}) {\r\n\r\n    return (\r\n        <div className=\"main-screen-info-page__content\">\r\n          <div className=\"content__element content__element--three-width\">\r\n            <div className=\"element__title\">ID | Nazwa</div>\r\n            <div className=\"element__value\">{props.selectedScreenData != null ? `${props.selectedScreenData.screenId} | ${props.selectedScreenData.screenName}` : ''}</div>\r\n          </div>\r\n          <div className={props.selectedScreenData != null ? props.selectedScreenData.screenStatus ? 'content__element content__element--active' : 'content__element content__element--inactive' : 'content__element'}>\r\n            <div className=\"element__title\">Status ekranu</div>\r\n            <div className=\"element__value\">{props.selectedScreenData != null ? props.selectedScreenData.screenStatus ? 'Aktywny' : 'Nieaktywny' : ''}</div>\r\n        </div>  \r\n        <div className=\"content__element\">\r\n            <div className=\"element__title\">Rodzaj ekranu</div>\r\n            <div className=\"element__value\">{props.selectedScreenData != null ? props.selectedScreenData.screenType == \"horizontal\" ? 'Poziomo' : 'Pionowo' : ''}</div>\r\n        </div>  \r\n        <div className=\"content__element content__element--two-width\">\r\n            <div className=\"element__title\">Lokalizacja ekranu</div>\r\n            <div className=\"element__value\">{props.selectedScreenData != null ? props.selectedScreenData.screenLocation : ''}</div>\r\n        </div>  \r\n          <div className=\"content__element\">\r\n            <div className=\"element__title\">Nazwa pomieszczenia</div>\r\n            <div className=\"element__value\">{props.selectedScreenData != null ? props.selectedScreenData.roomName : ''}</div>\r\n        </div>  \r\n          <div className=\"content__element content__element--two-width\">\r\n            <div className=\"element__title\">Dodatkowe informacje</div>\r\n            <div className=\"element__value\">{props.selectedScreenData != null ? props.selectedScreenData.additionalInformation : ''}</div>\r\n        </div>          \r\n          <div className=\"content__element\">\r\n            <div className=\"element__title\">Data dodania</div>\r\n            <div className=\"element__value\">{props.selectedScreenData != null ? dateStringToLocalString(props.selectedScreenData.dateAdded) : ''}</div>\r\n        </div>\r\n        <div className=\"content__element\">\r\n            <div className=\"element__title\">Data modyfikacji</div>\r\n            <div className=\"element__value\">{props.selectedScreenData != null ? props.selectedScreenData.modificationDate != null ? dateStringToLocalString(props.selectedScreenData.modificationDate) : '' : ''}</div>\r\n        </div>\r\n        </div>\r\n      )\r\n}\r\n\r\nexport default ScreenInfoContent;","import React from 'react';\r\nimport { NavigateFunction, useNavigate } from 'react-router-dom';\r\nimport { useAppDispatch, useAppSelector } from '../../../hooks/redux-hooks';\r\nimport { OPEN_ARGEEMENT_MODAL_WINDOW, OPEN_EDIT_MODAL_WINDOW } from '../../../redux/slices/globalSettingsSlice';\r\nimport { AppDispatch, RootState } from '../../../redux/store';\r\nimport { screenDataType } from '../../../types/screenDataType';\r\n\r\nfunction ScreenInfoHeader(props: {selectedScreenData: screenDataType | null}) {\r\n    const navigate: NavigateFunction = useNavigate()\r\n\r\n    const screensData = useAppSelector((state: RootState) => state.screensPage);\r\n    const dispatch: AppDispatch = useAppDispatch();\r\n    \r\n    const editSelectedScreen = (screenElement: screenDataType): void => {\r\n      dispatch(OPEN_EDIT_MODAL_WINDOW({type: 'edit-screen', element: screenElement}));\r\n    };\r\n  \r\n    const deleteSelectedScreen = (currentScreenId: number): void => {\r\n      const [screenElement]: screenDataType[] = screensData.value.filter((e: screenDataType) => e.screenId === currentScreenId);\r\n      const screenElementIndex: number = screensData.value.indexOf(screenElement);\r\n      dispatch(OPEN_ARGEEMENT_MODAL_WINDOW({type: 'delete-agreement', dataType: 'screensData', index: (screenElementIndex)}));\r\n    };\r\n  \r\n    return (\r\n      <div className=\"main-screen-info-page__header\">\r\n        <div className=\"header__group\">\r\n          <div className=\"group__title\">\r\n            <span className=\"material-symbols-outlined\">groups</span>\r\n            Ekran - {props.selectedScreenData != null ? props.selectedScreenData.screenName : ''}\r\n          </div>\r\n          <div className=\"group__nav\">\r\n            <button className=\"nav__button\" onClick={() => {editSelectedScreen(props.selectedScreenData!)}}>\r\n              <span className=\"material-symbols-outlined\">edit</span>\r\n              Edytuj\r\n            </button>\r\n            <button className=\"nav__button\" onClick={() => {deleteSelectedScreen(props.selectedScreenData!.screenId)}}>\r\n              <span className=\"material-symbols-outlined\">delete</span>\r\n              Usuń\r\n            </button>\r\n            <button className=\"nav__button\" onClick={() => {navigate('/platform/screens')}}>\r\n              <span className=\"material-symbols-outlined\">settings</span>\r\n              Wróć\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div className=\"header__text\">\r\n          Lorem ipsum dolor, sit amet consectetur adipisicing elit. Temporibus\r\n          nam, ducimus quae deleniti recusandae sed corrupti dicta ullam autem\r\n          cupiditate? Quae ex aliquam dignissimos fuga, mollitia repudiandae\r\n          quaerat tempore rem cum explicabo fugiat cupiditate perferendis possimus\r\n          voluptatibus temporibus laudantium libero incidunt tempora minus\r\n          praesentium facilis saepe illo quidem. Consectetur est distinctio\r\n          voluptatum iure iste molestiae mollitia doloremque et repellendus alias\r\n          autem unde, magni inventore quae id illum. Facere est blanditiis enim,\r\n          laudantium eos nostrum iusto, quas odit corporis corrupti fugit totam et\r\n          sunt impedit nihil ducimus recusandae veniam ipsa commodi.\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\nexport default ScreenInfoHeader;","import React, { useEffect, useState } from 'react';\r\nimport { NavigateFunction, useNavigate, useParams } from 'react-router-dom';\r\nimport LoadingSpinner from '../../components/LoadingSpinner/LoadingSpinner';\r\nimport { PLATFORM_NAME } from '../../data/staticPlatformData';\r\nimport { useAppDispatch, useAppSelector } from '../../hooks/redux-hooks';\r\nimport { getScreensData } from '../../redux/slices/screensPageSlice';\r\nimport { AppDispatch, RootState } from '../../redux/store';\r\nimport '../../sass/pages/ScreenInfoPage/ScreenInfoPage.css';\r\nimport { screenDataType } from '../../types/screenDataType';\r\nimport { screensPageSliceType } from '../../types/slices/screensPageSliceTypes';\r\nimport ScreenInfoContent from './components/ScreenInfoContent';\r\nimport ScreenInfoHeader from './components/ScreenInfoHeader';\r\n\r\nfunction ScreenInfoPage() {\r\n  const { id } = useParams();\r\n  const navigate: NavigateFunction = useNavigate();\r\n\r\n  const screensData: screensPageSliceType = useAppSelector((state: RootState) => state.screensPage);\r\n  const dispatch: AppDispatch = useAppDispatch();\r\n\r\n  const [selectedScreenData, setSelectedScreenData] = useState<screenDataType | null>(null);\r\n\r\n  useEffect((): void => {\r\n    if (screensData.loading == false && screensData.value.length > 0) {\r\n      if (id != undefined) {\r\n        const [selectedScreenDataElement]: screenDataType[] = screensData.value.filter((e: screenDataType) => e.screenId == parseInt(id));\r\n\r\n        if (selectedScreenDataElement) {\r\n          setSelectedScreenData(selectedScreenDataElement);\r\n        } else {\r\n          navigate(\"/platform/error\");\r\n        }\r\n      } else {\r\n        navigate(\"/platform/error\");\r\n      }\r\n    } else {\r\n    }\r\n  }, [screensData.value]);\r\n\r\n  useEffect((): void => {\r\n    dispatch(getScreensData());\r\n    document.title = `${PLATFORM_NAME} - Informacje o ekranie`;\r\n  }, []);\r\n\r\n  return (\r\n    <main className={screensData.loading || screensData.error != null\r\n      ? \"main-screen-info-page main-screen-info-page--content-center\"\r\n      : \"main-screen-info-page\"}>\r\n      {screensData.loading ? (\r\n        <LoadingSpinner />\r\n      ) : screensData.error != null ? (\r\n        screensData.error\r\n      ) : (\r\n        <>\r\n          <ScreenInfoHeader selectedScreenData={selectedScreenData}/>\r\n          <ScreenInfoContent selectedScreenData={selectedScreenData}/>\r\n        </>\r\n      )}\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default ScreenInfoPage;","import React from \"react\";\r\nimport { meetingDataType } from \"../../../types/meetingDataType\";\r\nimport { roomDataType } from \"../../../types/roomDataType\";\r\nimport { screenDataType } from \"../../../types/screenDataType\";\r\n\r\nfunction ScreenMeetingReservation(props: {\r\n  loadingContent: boolean;\r\n  roomsData: roomDataType[];\r\n  screensData: screenDataType[];\r\n  meetingsData: meetingDataType[];\r\n  paramScreenId: number;\r\n}) {\r\n  const [roomFromScreenId]: screenDataType[] = props.screensData.filter((e: screenDataType) => e.screenId === props.paramScreenId);\r\n  const roomName: string = roomFromScreenId ? roomFromScreenId.roomName : \"\";\r\n\r\n  const [roomData]: roomDataType[] = props.roomsData.filter((e: roomDataType) => e.roomName === roomName);\r\n\r\n  return (\r\n    <div\r\n      className={\r\n        props.loadingContent\r\n          ? \"screen-page__meeting-reservation content-loading\"\r\n          : \"screen-page__meeting-reservation content-loaded\"\r\n      }\r\n    >\r\n      {props.loadingContent === false ? (\r\n        <>\r\n          <div className=\"meeting-reservation__title\">Jak zarezerwować pomieszczenie o nazwie '{roomData ? roomData.roomName : ''}'?</div>\r\n          <div className=\"meeting-reservation__text\">\r\n            {`${roomData ? roomData.roomName : ''} to pomieszczenie kategorii '${roomData ? roomData.roomType : ''}' które może pomieścić od ${roomData ? roomData.minimumRoomPeople : ''} do ${roomData ? roomData.maximumRoomPeople : ''} osób, aby zarezerwować dane pomieszczenie zgłoś się do Administratora platformy zarządzącej rezerwacją pomieszczeń.`}\r\n          </div>\r\n        </>\r\n      ) : ''}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ScreenMeetingReservation;\r\n","export const convertDateAndTimeStringToDate = (\r\n  date: string,\r\n  time: string\r\n): Date => {\r\n  const hours = time.slice(0, 2);\r\n  const minutes = time.slice(3, 5);\r\n\r\n  const dateValue = new Date(date);\r\n  dateValue.setHours(parseInt(hours));\r\n  dateValue.setMinutes(parseInt(minutes));\r\n  dateValue.setSeconds(0);\r\n  dateValue.setMilliseconds(0);\r\n\r\n  return dateValue;\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { meetingDataType } from \"../../../types/meetingDataType\";\r\nimport { roomDataType } from \"../../../types/roomDataType\";\r\nimport { screenDataType } from \"../../../types/screenDataType\";\r\nimport { convertDateAndTimeStringToDate } from \"../../../utils/convertDateAndTimeStringToDate\";\r\nimport { shortenedTextFormat } from \"../../../utils/shortenedTextFormat\";\r\n\r\nfunction ScreenMeetingsList(props: { loadingContent: boolean; roomsData: roomDataType[]; screensData: screenDataType[]; meetingsData: meetingDataType[]; paramScreenId: number}) {\r\n\r\n  const [dateTimeUpdate, setDateTimeUpdate] = useState({\r\n    meetingStartISOString: '',\r\n    meetingEndISOString: ''\r\n  });\r\n\r\n  const [roomMeetingsData, setRoomsMeetingsData] = useState<meetingDataType[]>([]);\r\n\r\n  const [roomFromScreenId]: screenDataType[] = props.screensData.filter((e: screenDataType) => e.screenId === props.paramScreenId);\r\n  const roomName: string = roomFromScreenId ? roomFromScreenId.roomName : \"\";\r\n\r\n  const getRoomMeetingsData = (): void => {\r\n    const roomMeetingsData: meetingDataType[] = props.meetingsData.filter((e: meetingDataType) => e.roomName === roomName);\r\n    \r\n    const currentMeetingsData: meetingDataType[] = roomMeetingsData.filter((e: meetingDataType) => (new Date(e.meetingDate).toLocaleDateString() === new Date().toLocaleDateString() && convertDateAndTimeStringToDate(e.meetingDate, e.meetingTimeStart).getTime() <= new Date().getTime()) && convertDateAndTimeStringToDate(e.meetingDate, e.meetingTimeEnd).getTime() >= new Date().getTime());\r\n\r\n    const plannedMeetingsData: meetingDataType[] = roomMeetingsData.filter((e: meetingDataType) => convertDateAndTimeStringToDate(e.meetingDate, e.meetingTimeStart).getTime() >= new Date().getTime());\r\n\r\n    const data: meetingDataType[] = [...currentMeetingsData, ...plannedMeetingsData];\r\n\r\n    data.sort((a, b) => convertDateAndTimeStringToDate(a.meetingDate, a.meetingTimeStart).getTime() - convertDateAndTimeStringToDate(b.meetingDate, b.meetingTimeStart).getTime());\r\n\r\n    if (data.length > 0) {\r\n\r\n      const [meetingElement]: meetingDataType[] = data;\r\n\r\n      const currentMeetingStartISOString: string = convertDateAndTimeStringToDate(meetingElement.meetingDate, meetingElement.meetingTimeStart).toISOString();\r\n      const currentMeetingEndISOString: string = convertDateAndTimeStringToDate(meetingElement.meetingDate, meetingElement.meetingTimeEnd).toISOString();\r\n\r\n      setDateTimeUpdate(\r\n        {\r\n          meetingStartISOString: currentMeetingStartISOString, \r\n          meetingEndISOString: currentMeetingEndISOString\r\n        }\r\n      );\r\n      setRoomsMeetingsData(data);\r\n\r\n    } else {\r\n      setDateTimeUpdate(\r\n        {\r\n          meetingStartISOString: '',\r\n          meetingEndISOString: ''\r\n        }\r\n      );\r\n      setRoomsMeetingsData(data);\r\n    }\r\n  }\r\n\r\n  const statusMeeting = (meetingDate: string, meetingTimeStart: string, meetingTimeEnd: string): boolean => {\r\n    const meetingDateTimeStart: Date = convertDateAndTimeStringToDate(meetingDate, meetingTimeStart);\r\n    const meetingDateTimeEnd: Date = convertDateAndTimeStringToDate(meetingDate, meetingTimeEnd);\r\n\r\n    if (new Date().getTime() >= meetingDateTimeStart.getTime() && new Date().getTime() <= meetingDateTimeEnd.getTime()) {\r\n      return true\r\n    } else {\r\n      return false\r\n    }\r\n\r\n  }\r\n\r\n  const data = roomMeetingsData.map((e: meetingDataType): JSX.Element => (\r\n    <div key={e.meetingId} className={statusMeeting(e.meetingDate, e.meetingTimeStart, e.meetingTimeEnd) ? 'meetings-list__meeting meetings-list__meeting--active' : 'meetings-list__meeting'}>\r\n          <div className=\"meeting__group\">\r\n            {\r\n              statusMeeting(e.meetingDate, e.meetingTimeStart, e.meetingTimeEnd) ? (<div className=\"group__status\">Aktualnie</div>) : null\r\n            }\r\n            <div className=\"group__name\">{e.meetingName}</div>\r\n            <div className=\"group__description\">{shortenedTextFormat(e.additionalInformation)}</div>  \r\n          </div>\r\n          <div className=\"meeting__category\">{e.meetingCategory}</div>\r\n          <div className=\"meeting__date\">{new Date(e.meetingDate).toLocaleDateString()}</div>\r\n          <div className=\"meeting__time\">{e.meetingTimeStart} - {e.meetingTimeEnd}</div>\r\n          <div className=\"meeting__employee\">{e.employeeName}</div>\r\n      </div>\r\n  ))\r\n\r\n  useEffect((): void => {\r\n    getRoomMeetingsData();\r\n  }, [props.loadingContent, props.paramScreenId]);\r\n\r\n  useEffect(() => {\r\n    const timeInterval = setInterval(() => {\r\n      const currentDateTimeValue = new Date();\r\n      currentDateTimeValue.setMilliseconds(0);\r\n      \r\n      if (currentDateTimeValue.toISOString() == dateTimeUpdate.meetingStartISOString || currentDateTimeValue.toISOString() == dateTimeUpdate.meetingEndISOString) {\r\n        getRoomMeetingsData();\r\n      }\r\n\r\n    }, 1000);\r\n\r\n    return () => clearInterval(timeInterval);\r\n  }, [dateTimeUpdate]);\r\n\r\n  return (\r\n    <div\r\n      className={\r\n        props.loadingContent\r\n          ? \"screen-page__meetings-list content-loading\"\r\n          : \"screen-page__meetings-list content-loaded\"\r\n      }\r\n    >\r\n      {roomMeetingsData.length > 0 && props.meetingsData.length > 0\r\n        ?   <>\r\n                <div className=\"meetings-list__title\">Najbliższe spotkania</div>\r\n                {data}\r\n            </> \r\n        : props.loadingContent ? '' : <div className=\"meetings-list__error\">Brak danych do wyświetlenia</div> }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ScreenMeetingsList;\r\n","import React from \"react\";\r\nimport { roomDataType } from \"../../../types/roomDataType\";\r\nimport { screenDataType } from \"../../../types/screenDataType\";\r\n\r\nfunction ScreenRoomName(props: {\r\n  loadingContent: boolean;\r\n  roomsData: roomDataType[];\r\n  screensData: screenDataType[];\r\n  paramScreenId: number;\r\n}) {\r\n  const [roomFromScreenId]: screenDataType[] = props.screensData.filter((e: screenDataType) => e.screenId === props.paramScreenId);\r\n  const roomName: string = roomFromScreenId ? roomFromScreenId.roomName : \"\";\r\n\r\n  return (\r\n    <div\r\n      className={\r\n        props.loadingContent\r\n          ? \"screen-page__room-name content-loading\"\r\n          : \"screen-page__room-name content-loaded\"\r\n      }\r\n    >\r\n      {roomName}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ScreenRoomName;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { meetingDataType } from \"../../../types/meetingDataType\";\r\nimport { roomDataType } from \"../../../types/roomDataType\";\r\nimport { screenDataType } from \"../../../types/screenDataType\";\r\nimport { convertDateAndTimeStringToDate } from \"../../../utils/convertDateAndTimeStringToDate\";\r\nimport { shortenedTextFormat } from \"../../../utils/shortenedTextFormat\";\r\n\r\nfunction ScreenRoomStatus(props: {loadingContent: boolean, roomsData: roomDataType[], screensData: screenDataType[], meetingsData: meetingDataType[], paramScreenId: number;}) {\r\n\r\n  const [roomFromScreenId]: screenDataType[] = props.screensData.filter((e: screenDataType) => e.screenId === props.paramScreenId);\r\n  const roomName: string = roomFromScreenId ? roomFromScreenId.roomName : \"\";\r\n\r\n  interface dateTimeUpdate {\r\n    meetingStartISOString: string;\r\n    meetingEndISOString: string;\r\n  }\r\n\r\n  const [dateTimeUpdate, setDateTimeUpdate] = useState<dateTimeUpdate>({\r\n    meetingStartISOString: '',\r\n    meetingEndISOString: ''\r\n  });\r\n\r\n  const [meetingElement, setMeetingElement] = useState<any>({});\r\n  const [currentDateTimeValue, setCurrentDateTime] = useState(new Date());\r\n\r\n  const getCurrentMeetingElement = (): void => {\r\n    const roomMeetingsData: meetingDataType[] = props.meetingsData.filter((e: meetingDataType) => e.roomName === roomName);\r\n    \r\n    const currentMeetingsData: meetingDataType[] = roomMeetingsData.filter((e: meetingDataType) => (new Date(e.meetingDate).toLocaleDateString() === new Date().toLocaleDateString() && convertDateAndTimeStringToDate(e.meetingDate, e.meetingTimeStart).getTime() <= new Date().getTime()) && convertDateAndTimeStringToDate(e.meetingDate, e.meetingTimeEnd).getTime() >= new Date().getTime());\r\n\r\n    currentMeetingsData.sort((a, b) => convertDateAndTimeStringToDate(a.meetingDate, a.meetingTimeStart).getTime() - convertDateAndTimeStringToDate(b.meetingDate, b.meetingTimeStart).getTime());\r\n\r\n    const plannedMeetingsData: meetingDataType[] = roomMeetingsData.filter((e: meetingDataType) => convertDateAndTimeStringToDate(e.meetingDate, e.meetingTimeStart).getTime() >= new Date().getTime());\r\n\r\n    plannedMeetingsData.sort((a, b) => convertDateAndTimeStringToDate(a.meetingDate, a.meetingTimeStart).getTime() - convertDateAndTimeStringToDate(b.meetingDate, b.meetingTimeStart).getTime());\r\n\r\n    if (currentMeetingsData.length > 0) {\r\n      const [currentMeetingElement]: meetingDataType[] = currentMeetingsData;\r\n\r\n      setDateTimeUpdate(\r\n        {\r\n          meetingStartISOString: convertDateAndTimeStringToDate(currentMeetingElement.meetingDate, currentMeetingElement.meetingTimeStart).toISOString(),\r\n          meetingEndISOString: convertDateAndTimeStringToDate(currentMeetingElement.meetingDate, currentMeetingElement.meetingTimeEnd).toISOString()\r\n        }\r\n      );\r\n      setMeetingElement(currentMeetingElement);\r\n\r\n    } else {\r\n      \r\n      if (plannedMeetingsData.length > 0) {\r\n        const [plannedMeetingElement]: meetingDataType[] = plannedMeetingsData;\r\n\r\n        const currentMeetingStartISOString: string = convertDateAndTimeStringToDate(plannedMeetingElement.meetingDate, plannedMeetingElement.meetingTimeStart).toISOString();\r\n        const currentMeetingEndISOString: string = convertDateAndTimeStringToDate(plannedMeetingElement.meetingDate, plannedMeetingElement.meetingTimeEnd).toISOString();\r\n\r\n        setDateTimeUpdate(\r\n          {\r\n            meetingStartISOString: currentMeetingStartISOString,\r\n            meetingEndISOString: currentMeetingEndISOString\r\n          }\r\n        );\r\n        setMeetingElement({});\r\n        \r\n      } else {\r\n        setDateTimeUpdate(\r\n          {\r\n            meetingStartISOString: '',\r\n            meetingEndISOString: ''\r\n          }\r\n        );\r\n        setMeetingElement({});\r\n      }\r\n    }\r\n  }\r\n\r\n  const convertMilisecondsToTime = (value: number): string => {\r\n    const ms: number = value % 1000;\r\n    value = (value - ms) / 1000;\r\n    const sec: number = value % 60;\r\n    value = (value - sec) / 60;\r\n    const min: number = value % 60;\r\n    const hr: number = (value - min) / 60;\r\n\r\n    return hr + 'h ' + min + 'm ' + sec + 's';\r\n  }\r\n\r\n  const percentToEnd = (): number | string => {\r\n    if (Object.keys(meetingElement).length > 0) {\r\n      const startDateValue: Date = convertDateAndTimeStringToDate(meetingElement.meetingDate, meetingElement.meetingTimeStart);\r\n      const endDateValue: Date = convertDateAndTimeStringToDate(meetingElement.meetingDate, meetingElement.meetingTimeEnd);\r\n\r\n      const currentTimeMiliseconds: number = currentDateTimeValue.getHours() * 1000 * 60 * 60 + currentDateTimeValue.getMinutes() * 1000 * 60 + currentDateTimeValue.getSeconds() * 1000;\r\n      const startTimeMiliseconds: number = startDateValue.getHours() * 1000 * 60 * 60 + startDateValue.getMinutes() * 1000 * 60 + startDateValue.getSeconds() * 1000;\r\n      const endTimeMiliseconds: number = endDateValue.getHours() * 1000 * 60 * 60 + endDateValue.getMinutes() * 1000 * 60 + endDateValue.getSeconds() * 1000 ;\r\n\r\n      const result = (((currentTimeMiliseconds - startTimeMiliseconds) / (endTimeMiliseconds - startTimeMiliseconds)) * 100);\r\n\r\n      return result > 100 ? 100 : result\r\n    } else {\r\n      return 0\r\n    }\r\n  }\r\n\r\n  const countDownTime = () => {\r\n    if (Object.keys(meetingElement).length > 0) {\r\n      let result: number = convertDateAndTimeStringToDate(meetingElement.meetingDate, meetingElement.meetingTimeEnd).getTime() - currentDateTimeValue.getTime();\r\n      result = result < 0 ? 0 : result;\r\n\r\n      return convertMilisecondsToTime(result)\r\n    } else {\r\n      return 0\r\n    }\r\n  }\r\n\r\n  useEffect((): void => {\r\n    getCurrentMeetingElement();\r\n  }, [props.loadingContent, props.paramScreenId]);\r\n\r\n  useEffect(() => {\r\n    const timeInterval = setInterval(() => {\r\n      setCurrentDateTime(new Date());\r\n\r\n      const currentDateTimeValue = new Date();\r\n      currentDateTimeValue.setMilliseconds(0);\r\n\r\n      if (currentDateTimeValue.toISOString() == dateTimeUpdate.meetingStartISOString || currentDateTimeValue.toISOString() == dateTimeUpdate.meetingEndISOString) {\r\n        getCurrentMeetingElement();\r\n      }\r\n    }, 1000);\r\n\r\n    return () => clearInterval(timeInterval);\r\n  }, [dateTimeUpdate]);\r\n\r\n  return (\r\n    <div\r\n      className={\r\n        props.loadingContent\r\n          ? \"screen-page__room-status content-loading\"\r\n          : \"screen-page__room-status content-loaded\"\r\n      }\r\n    >\r\n      \r\n      {\r\n        props.loadingContent\r\n          ? ''\r\n          : Object.keys(meetingElement).length > 0\r\n            ? <div className=\"room-status__block room-status__block--busy\">\r\n              <div className=\"block__text block__text--busy\">ZAJĘTE</div>\r\n              <div className=\"block__name\">{meetingElement.meetingName}</div>\r\n              <div className=\"block__description\">{shortenedTextFormat(meetingElement.additionalInformation, 45)}</div>\r\n              <div className=\"block__group\">\r\n                <div className=\"group__element\">Data spotkania: {new Date(meetingElement.meetingDate).toLocaleDateString()}</div>\r\n                <div className=\"group__element\">Kategoria: {meetingElement.meetingCategory}</div>\r\n                <div className=\"group__element\">Ilość osób: {meetingElement.meetingPeopleNumber}</div>\r\n                <div className=\"group__element\">Organizator: {meetingElement.employeeName}</div>\r\n              </div>\r\n              <div className=\"block__progress-bar\">\r\n                <div className=\"progress-bar__time-start\">{meetingElement.meetingTimeStart}</div>\r\n                <div className=\"progress-bar__value\" style={{width: percentToEnd() + \"%\"}}></div>\r\n                <div className=\"progress-bar__time-end\">{meetingElement.meetingTimeEnd}</div>\r\n              </div>\r\n              <div className=\"block__countdown\">\r\n                <div className=\"countdown__text\">Do końca spotkania pozostało</div>\r\n                <div className=\"coutdown__value\">{countDownTime()}</div>\r\n              </div>            \r\n            </div>\r\n            : <div className=\"room-status__block room-status__block--free\">\r\n                <div className=\"block__text block__text--free\">WOLNE</div>\r\n              </div>\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ScreenRoomStatus;\r\n","export const valueLessThanTen = (value: number): string | number => {\r\n  if (value < 10) {\r\n    return \"0\" + value;\r\n  } else {\r\n    return value;\r\n  }\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useAppDispatch, useAppSelector } from \"../../hooks/redux-hooks\";\r\nimport { getEmployeeresData } from \"../../redux/slices/employeeresPageSlice\";\r\nimport { getMeetingsData } from \"../../redux/slices/meetingsPageSlice\";\r\nimport { getRoomsData } from \"../../redux/slices/roomsPageSlice\";\r\nimport { getScreensData } from \"../../redux/slices/screensPageSlice\";\r\nimport ScreenMeetingReservation from \"./components/ScreenMeetingReservation\";\r\nimport ScreenMeetingsList from \"./components/ScreenMeetingsList\";\r\nimport ScreenRoomName from \"./components/ScreenRoomName\";\r\nimport ScreenRoomStatus from \"./components/ScreenRoomStatus\";\r\nimport \"../../sass/pages/ScreenPage/ScreenPage.css\";\r\nimport { screenDataType } from \"../../types/screenDataType\";\r\nimport { valueLessThanTen } from \"../../utils/valueLessThanTenFormat\";\r\nimport { AppDispatch, RootState } from \"../../redux/store\";\r\nimport { PLATFORM_NAME } from \"../../data/staticPlatformData\";\r\nimport { meetingsPageSliceType } from \"../../types/slices/meetingsPageSliceTypes\";\r\nimport { roomsPageSliceType } from \"../../types/slices/roomsPageSliceTypes\";\r\nimport { screensPageSliceType } from \"../../types/slices/screensPageSliceTypes\";\r\nimport { employeeresPageSliceType } from \"../../types/slices/employeeresPageSliceTypes\";\r\n\r\nfunction ScreenPage() {\r\n  const meetingsData: meetingsPageSliceType = useAppSelector((state: RootState) => state.meetingsPage);\r\n  const roomsData: roomsPageSliceType = useAppSelector((state: RootState) => state.roomsPage);\r\n  const screensData: screensPageSliceType = useAppSelector((state: RootState) => state.screensPage);\r\n  const employeeresData: employeeresPageSliceType = useAppSelector((state: RootState) => state.employeeresPage);\r\n\r\n  const dispatch: AppDispatch = useAppDispatch();\r\n\r\n  const { id } = useParams();\r\n\r\n  const [paramId, setParamId] = useState<number>(0);\r\n  const [screenIdError, setScreenIdError] = useState<boolean>(false);\r\n  const [countdownTime, setCountdownTime] = useState<string>(\"\");\r\n  const [screenSizeValidation, setScreenSizeValidation] = useState<boolean>(true);\r\n\r\n  const timeUpdate: number = new Date(new Date().setMinutes(new Date().getMinutes() + 5)).getTime()\r\n\r\n  const loadingContent: boolean =\r\n    meetingsData.loading ||\r\n    roomsData.loading ||\r\n    screensData.loading ||\r\n    employeeresData.loading;\r\n\r\n  const countDownToUpdate = (): void => {\r\n    let result: number = timeUpdate - new Date().getTime();\r\n\r\n    let ms: number = result % 1000;\r\n    result = (result - ms) / 1000;\r\n    let sec: number = result % 60;\r\n    result = (result - sec) / 60;\r\n    let min: number = result % 60;\r\n    let hours: number = (result - min) / 60;\r\n\r\n    if (hours < 0) hours = 0\r\n    if (min < 0) min = 0\r\n    if (sec < 0) sec = 0\r\n\r\n    hours == 0 && min == 0 && sec == 0 ? document.location.reload() : null;\r\n\r\n    setCountdownTime(`${valueLessThanTen(min)}:${valueLessThanTen(sec)}`);\r\n  };\r\n\r\n  const checkScreenId = (id: string): void => {\r\n    const [filteredScreensData]: screenDataType[] = screensData.value.filter((e: screenDataType) => e.screenId === parseInt(id));\r\n\r\n    if (Object.keys(filteredScreensData).length > 0 && filteredScreensData.screenStatus) {\r\n      setParamId(parseInt(id));\r\n      setScreenIdError(false);\r\n    } else {\r\n      setScreenIdError(true);\r\n    }\r\n  };\r\n\r\n  useEffect((): void => {\r\n    if (screensData.value.length > 0) {\r\n      if (id) {\r\n        checkScreenId(id);\r\n      } else {\r\n        setScreenIdError(true);\r\n      }\r\n    }\r\n  }, [screensData.loading]);\r\n\r\n  useEffect(() => {\r\n    countDownToUpdate();\r\n\r\n    const timeInterval = setInterval(() => {\r\n      countDownToUpdate();\r\n    }, 1000);\r\n\r\n    return () => clearInterval(timeInterval);\r\n  }, []);\r\n\r\n  useEffect((): void => {\r\n    dispatch(getMeetingsData());\r\n    dispatch(getRoomsData());\r\n    dispatch(getScreensData());\r\n    dispatch(getEmployeeresData());\r\n    document.title = `${PLATFORM_NAME}`;\r\n  }, []);\r\n\r\n  useEffect((): void => {\r\n    if (window.screen.height == 1080 && window.screen.width == 1920 &&\r\n        (window.outerHeight + (window.screen.height - window.screen.availHeight)) == 1080 && (window.outerWidth + (window.screen.width - window.screen.availWidth) == 1920) || \r\n        window.screen.height == 1920 && window.screen.width == 1080 &&\r\n        (window.outerHeight + (window.screen.height - window.screen.availHeight) == 1920) && (window.outerWidth + (window.screen.width - window.screen.availWidth) == 1080)) {\r\n      setScreenSizeValidation(true);\r\n    } else {\r\n      setScreenSizeValidation(false);\r\n    }\r\n  }, [window.screen.height, window.screen.width, window.outerHeight, window.outerWidth, window.screen.availHeight, window.screen.availWidth]);\r\n\r\n  return (\r\n    <div className=\"screen-page\">\r\n      {screenIdError ? (\r\n        <div className=\"screen-page__error\">\r\n          <div className=\"error__title\">Błąd ładowania ekranu</div>\r\n          <div className=\"error__description\">Podany adres strony nie istnieje lub ekran jest nieaktywny. Ullam magnam libero nulla sapiente placeat commodi! Nemo sunt laboriosam in ullam dolorem ex, explicabo est. Vero velit, voluptatibus quas in odio iusto excepturi voluptatum, fuga, earum laborum consectetur nobis iure veritatis accusamus suscipit sit iste ipsam?</div>\r\n        </div>\r\n      ) : (\r\n        <>\r\n          <div className=\"screen-page__format-text\" style={{display: screenSizeValidation ? \"none\" : \"flex\"}}>\r\n            Ekran obsługiwany jest na ekranch oraz w oknie w rozdzieczości 1920px x 1080px lub 1080px x 1920px. Quisquam consectetur iste obcaecati numquam architecto reprehenderit tempora quae, commodi sit laborum blanditiis cum, veniam velit, sapiente ullam eius saepe assumenda corporis pariatur veritatis voluptates modi nemo reiciendis. Officia repellat temporibus nulla non. Nisi quo exercitationem a?\r\n          </div>\r\n          <div className=\"screen-page__id\">Screen ID {id}</div>\r\n          <ScreenRoomName\r\n            loadingContent={loadingContent}\r\n            roomsData={roomsData.value}\r\n            screensData={screensData.value}\r\n            paramScreenId={paramId}\r\n          />\r\n          <ScreenRoomStatus\r\n            loadingContent={loadingContent}\r\n            roomsData={roomsData.value}\r\n            screensData={screensData.value}\r\n            meetingsData={meetingsData.value}\r\n            paramScreenId={paramId}\r\n          />\r\n          <ScreenMeetingReservation\r\n            loadingContent={loadingContent}\r\n            roomsData={roomsData.value}\r\n            screensData={screensData.value}\r\n            meetingsData={meetingsData.value}\r\n            paramScreenId={paramId}\r\n          />\r\n          <ScreenMeetingsList\r\n            loadingContent={loadingContent}\r\n            roomsData={roomsData.value}\r\n            screensData={screensData.value}\r\n            meetingsData={meetingsData.value}\r\n            paramScreenId={paramId}\r\n          />\r\n          <div className=\"screen-page__update-countdown\">\r\n            Aktualizacja ekranu za {countdownTime}\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ScreenPage;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useAppDispatch } from '../../../hooks/redux-hooks';\r\nimport { SET_SCREENS_FILTER_VALUE, SET_SCREENS_SERACH_VALUE, SET_SCREENS_SORT_VALUE } from '../../../redux/slices/screensPageSlice';\r\nimport { AppDispatch } from '../../../redux/store';\r\n\r\nfunction ScreensContentHeader() {\r\n  const dispatch: AppDispatch = useAppDispatch();\r\n\r\n  const [searchValue, setSearchValue] = useState<string>();\r\n\r\n  const selectSearchValue = (): void => {\r\n    dispatch(SET_SCREENS_SERACH_VALUE(searchValue));\r\n  };\r\n\r\n  const selectFilterValue = (e: React.ChangeEvent<HTMLSelectElement>): void => {\r\n    dispatch(SET_SCREENS_FILTER_VALUE(e.target.value));\r\n  };\r\n\r\n  const selectSortValue = (e: React.ChangeEvent<HTMLSelectElement>): void => {\r\n    dispatch(SET_SCREENS_SORT_VALUE(e.target.value));\r\n  };\r\n\r\n  useEffect((): void => {\r\n    if (searchValue == '') {\r\n      dispatch(SET_SCREENS_SERACH_VALUE(''));\r\n    }\r\n  }, [searchValue]);\r\n\r\n  useEffect((): void => {\r\n    setSearchValue('');\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"main-content__header\">\r\n      <div className=\"header__group\">\r\n        <div className=\"group__element-with-icon\">\r\n          <input type=\"text\" className=\"group__input\" placeholder=\"Szukaj...\" onChange={(e) => {setSearchValue(e.target.value)}}/>\r\n          <span className=\"material-symbols-outlined\">search</span>\r\n        </div>\r\n        <input type=\"button\" className=\"group__button\" value=\"Szukaj\" onClick={() => {selectSearchValue()}}/>\r\n      </div>\r\n      <div className=\"header__group\">\r\n        <label className=\"group__label\">\r\n          Filtrowanie widoku\r\n          <div className=\"group__element-with-icon\">\r\n            <select className=\"group__select\" onChange={(e) => {selectFilterValue(e)}}>\r\n              <option value=\"defualt\">Domyślnie</option>\r\n              <option value=\"active-screens\">Aktywne ekrany</option>\r\n              <option value=\"inactive-screens\">Nieaktywne ekrany</option>\r\n              <option value=\"horizontal-screens\">Ekrany (format poziomy)</option>\r\n              <option value=\"vertical-screens\">Ekrany (format pionowy)</option>\r\n            </select>\r\n            <span className=\"material-symbols-outlined\">arrow_drop_down</span>\r\n          </div>\r\n        </label>\r\n        <label className=\"group__label\">\r\n          Sortowanie widoku\r\n          <div className=\"group__element-with-icon\">\r\n            <select className=\"group__select\" onChange={(e) => {selectSortValue(e)}}>\r\n              <option value=\"default\">Domyślnie</option>\r\n              <option value=\"name-screen-sort-up\">Nazwa ekranu (rosnąco)</option>\r\n              <option value=\"name-screen-sort-down\">Nazwa ekranu (malejąco)</option>\r\n              <option value=\"oldest-date-added\">Od najstarszej daty dodania</option>\r\n              <option value=\"latest-date-added\">Od najnowszej daty dodania</option>\r\n            </select>\r\n            <span className=\"material-symbols-outlined\">arrow_drop_down</span>\r\n          </div>\r\n        </label>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ScreensContentHeader;","import React, { useEffect } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { SCREENS_LSTORAGE_NAME } from '../../../data/staticPlatformData';\r\nimport { useAppDispatch, useAppSelector } from '../../../hooks/redux-hooks';\r\nimport { OPEN_ARGEEMENT_MODAL_WINDOW, OPEN_EDIT_MODAL_WINDOW } from '../../../redux/slices/globalSettingsSlice';\r\nimport { AppDispatch, RootState } from '../../../redux/store';\r\nimport { screenDataType } from '../../../types/screenDataType';\r\nimport { screensFilterValueType, screensPageSliceType, screensSortValueType } from '../../../types/slices/screensPageSliceTypes';\r\nimport { dateStringToDateLocalString } from '../../../utils/dateStringToDateLocalString';\r\nimport { saveToLocalstorage } from '../../../utils/saveToLocalStorage';\r\nimport { shortenedTextFormat } from '../../../utils/shortenedTextFormat';\r\n\r\nfunction ScreensContentTable() {\r\n  const screensData: screensPageSliceType = useAppSelector((state: RootState) => state.screensPage);\r\n\r\n  const screensPageSearchValue: string = screensData.pageData.searchValue;\r\n  const screensPageFilterValue: screensFilterValueType = screensData.pageData.filterValue;\r\n  const screensPageSortValue: screensSortValueType = screensData.pageData.sortValue;\r\n\r\n  const dispatch: AppDispatch = useAppDispatch();\r\n\r\n  const editSelectedScreen = (screenElement: screenDataType): void => {\r\n    dispatch(OPEN_EDIT_MODAL_WINDOW({type: 'edit-screen', element: screenElement}));\r\n  };\r\n\r\n  const deleteSelectedScreen= (screenId: number): void => {\r\n    const [screenElement]: screenDataType[] = screensData.value.filter((e: screenDataType) => e.screenId === screenId);\r\n    const screenElementIndex: number = screensData.value.indexOf(screenElement);\r\n    dispatch(OPEN_ARGEEMENT_MODAL_WINDOW({type: 'delete-agreement', dataType: 'screensData', index: (screenElementIndex)}));\r\n  };\r\n\r\n  const getDataViewSearchValue = (data: screenDataType[]) => {\r\n    const newData: screenDataType[] = data.filter((e: screenDataType) => e.screenName.toUpperCase().includes(screensPageSearchValue.toUpperCase()))   ;\r\n    return newData\r\n  };\r\n\r\n  const getDataViewFitlering = (data: screenDataType[]) => {\r\n    switch (screensPageFilterValue) {\r\n      case \"active-screens\":\r\n        const dataActiveScreens: screenDataType[] = data.filter((e: screenDataType) => e.screenStatus === true);\r\n        return dataActiveScreens\r\n\r\n      case \"inactive-screens\":\r\n        const dataInactiveScreens: screenDataType[] = data.filter((e: screenDataType) => e.screenStatus === false);\r\n        return dataInactiveScreens\r\n\r\n      case \"horizontal-screens\":\r\n        const dataHorizontalScreens: screenDataType[] = data.filter((e: screenDataType) => e.screenType.includes('horizontal'));\r\n        return dataHorizontalScreens\r\n\r\n      case \"vertical-screens\":\r\n        const dataVerticalScreens: screenDataType[] = data.filter((e: screenDataType) => e.screenType.includes('vertical'));\r\n        return dataVerticalScreens\r\n\r\n      default:\r\n        const activeScreens: screenDataType[] = data.filter((e: screenDataType) => e.screenStatus === true);\r\n        const inactiveScreens: screenDataType[] = data.filter((e: screenDataType) => e.screenStatus === false);\r\n        const defaultSortData: screenDataType[] = [...activeScreens, ...inactiveScreens];\r\n        return defaultSortData\r\n    }\r\n  };\r\n\r\n  const getDataViewSort = (data: screenDataType[]) => {\r\n    switch (screensPageSortValue) {\r\n      case \"name-screen-sort-up\":\r\n        const dataNameScreenSortUp: screenDataType[] = data.sort((a, b) => a.screenName.localeCompare(b.screenName));\r\n        return dataNameScreenSortUp\r\n\r\n      case \"name-screen-sort-down\":\r\n        const dataNameScreenSortDown: screenDataType[] = data.sort((a, b) => b.screenName.localeCompare(a.screenName));\r\n        return dataNameScreenSortDown\r\n      \r\n      case \"oldest-date-added\":\r\n        const dataOldestDateAdded: screenDataType[] = data.sort((a, b) => Date.parse(a.dateAdded) - Date.parse(b.dateAdded));\r\n        return dataOldestDateAdded\r\n\r\n      case \"latest-date-added\":\r\n        const dataLatestDateAdded: screenDataType[] = data.sort((a, b) => Date.parse(b.dateAdded) - Date.parse(a.dateAdded));\r\n        return dataLatestDateAdded\r\n\r\n      default:\r\n        const activeScreens: screenDataType[] = data.filter((e: screenDataType) => e.screenStatus === true);\r\n        const inactiveScreens: screenDataType[] = data.filter((e: screenDataType) => e.screenStatus === false);\r\n        const defaultSortData: screenDataType[] = [...activeScreens, ...inactiveScreens];\r\n        return defaultSortData\r\n    }    \r\n  };\r\n\r\n  const getScreensList = () => {\r\n    let data: screenDataType[];\r\n    data = getDataViewSearchValue(screensData.value);\r\n    data = getDataViewFitlering(data);\r\n    data = getDataViewSort(data);\r\n\r\n    return data\r\n  };\r\n\r\n  const data: screenDataType[] = getScreensList();\r\n\r\n  const screensDataTable = data.map((e: screenDataType): JSX.Element => {\r\n    return (\r\n            <tr key={e.screenId} className=\"table-tr\">\r\n            <td className=\"table-td\">{e.screenId}</td>\r\n            <td className=\"table-td\">\r\n              <div className={e.screenStatus ? 'td__status-active' : 'td__status-inactive'}>\r\n                {e.screenStatus ? 'Aktywny' : 'Nieaktywny'}\r\n              </div>\r\n            </td>\r\n            <td className=\"table-td table-td--primary-style\">{e.screenName}</td>\r\n            <td className=\"table-td\">{e.roomName}</td>\r\n            <td className=\"table-td\">{e.screenLocation}</td>\r\n            <td className=\"table-td\">{e.screenType == 'horizontal' ? 'Poziomo' : 'Pionowo'}</td>\r\n            <td className=\"table-td table-td--long-text-primary table-td--secondary-style\">{shortenedTextFormat(e.additionalInformation)}</td>\r\n            <td className=\"table-td\">{dateStringToDateLocalString(e.dateAdded)}</td>\r\n            <td className=\"table-td\">\r\n              <div className=\"table__buttons-container\">\r\n              <NavLink to={`/screen/${e.screenId}`}>\r\n                <div className=\"table-button\">\r\n                  <span className=\"material-symbols-outlined\">monitor</span>\r\n                </div>\r\n              </NavLink>\r\n              <NavLink to={`/platform/screens/screen/${e.screenId}`}>\r\n                <div className=\"table-button\">\r\n                  <span className=\"material-symbols-outlined\">visibility</span>\r\n                </div>\r\n              </NavLink>\r\n              <div className=\"table-button\" onClick={() => {editSelectedScreen(e)}}>\r\n                <span className=\"material-symbols-outlined\">edit</span>\r\n              </div>\r\n              <div className=\"table-button\" onClick={() => {deleteSelectedScreen\r\n                (e.screenId)}}>\r\n                <span className=\"material-symbols-outlined\">delete</span>\r\n              </div>\r\n              </div>\r\n            </td>\r\n          </tr>\r\n    )\r\n  });\r\n\r\n  useEffect((): void => {\r\n      getScreensList();\r\n  }, [screensPageSearchValue, screensPageFilterValue, screensPageSortValue]);\r\n\r\n  useEffect((): void => {\r\n    if (!screensData.loading) {\r\n    saveToLocalstorage(SCREENS_LSTORAGE_NAME, screensData.value);\r\n    } \r\n  }, [screensData.value]);\r\n  \r\n  return (\r\n    <div className=\"main-content__table-container\">\r\n      <table className=\"table-container__table\">\r\n        <thead>\r\n          <tr>\r\n            <th className=\"table-th\">ID</th>\r\n            <th className=\"table-th\">Status</th>\r\n            <th className=\"table-th\">Nazwa ekranu</th>\r\n            <th className=\"table-th\">Nazwa pomieszczenia</th>\r\n            <th className=\"table-th\">Lokalizacja ekranu</th>\r\n            <th className=\"table-th\">Rodzaj ekranu</th>\r\n            <th className=\"table-th\">Dodatkowe informacje</th>\r\n            <th className=\"table-th\">Data dodania</th>\r\n            <th className=\"table-th\">Opcje</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {screensDataTable}          \r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ScreensContentTable;","import React from 'react';\r\nimport PrintButton from '../../../components/PrintButton/PrintButton';\r\nimport { useAppDispatch } from '../../../hooks/redux-hooks';\r\nimport { OPEN_MODAL_WINDOW } from '../../../redux/slices/globalSettingsSlice';\r\nimport { AppDispatch } from '../../../redux/store';\r\n\r\nfunction ScreensHeader() {\r\n  const dispatch: AppDispatch = useAppDispatch();\r\n\r\n  const addScreen = (): void => {\r\n    dispatch(OPEN_MODAL_WINDOW('add-screen'));\r\n  };\r\n\r\n  return (\r\n    <div className=\"main-screens-page__header\">\r\n        <div className=\"header__title\">\r\n          <span className=\"material-symbols-outlined\">monitor</span>\r\n          Ekrany\r\n        </div>\r\n        <div className=\"header__nav\">\r\n          <button className=\"nav__button\" onClick={() => {addScreen()}}>\r\n            <span className=\"material-symbols-outlined\">add_circle</span>\r\n            Dodaj ekran\r\n          </button>\r\n          <PrintButton/>\r\n        </div>\r\n      <div className=\"header__text\">\r\n        Lorem ipsum dolor, sit amet consectetur adipisicing elit. Temporibus\r\n        nam, ducimus quae deleniti recusandae sed corrupti dicta ullam autem\r\n        cupiditate? Quae ex aliquam dignissimos fuga, mollitia repudiandae\r\n        quaerat tempore rem cum explicabo fugiat cupiditate perferendis possimus\r\n        voluptatibus temporibus laudantium libero incidunt tempora minus\r\n        praesentium facilis saepe illo quidem. Consectetur est distinctio\r\n        voluptatum iure iste molestiae mollitia doloremque et repellendus alias\r\n        autem unde, magni inventore quae id illum. Facere est blanditiis enim,\r\n        laudantium eos nostrum iusto, quas odit corporis corrupti fugit totam et\r\n        sunt impedit nihil ducimus recusandae veniam ipsa commodi.\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ScreensHeader;","import React, { useEffect } from \"react\";\r\nimport LoadingSpinner from \"../../components/LoadingSpinner/LoadingSpinner\";\r\nimport { PLATFORM_NAME } from \"../../data/staticPlatformData\";\r\nimport { useAppDispatch, useAppSelector } from \"../../hooks/redux-hooks\";\r\nimport { getRoomsData } from \"../../redux/slices/roomsPageSlice\";\r\nimport { getScreensData, SET_SCREENS_FILTER_VALUE, SET_SCREENS_SERACH_VALUE, SET_SCREENS_SORT_VALUE } from \"../../redux/slices/screensPageSlice\";\r\nimport { AppDispatch, RootState } from \"../../redux/store\";\r\nimport \"../../sass/pages/ScreensPage/ScreensPage.css\";\r\nimport { roomsPageSliceType } from \"../../types/slices/roomsPageSliceTypes\";\r\nimport { screensPageSliceType } from \"../../types/slices/screensPageSliceTypes\";\r\nimport ScreensContentHeader from \"./components/ScreensContentHeader\";\r\nimport ScreensContentTable from \"./components/ScreensContentTable\";\r\nimport ScreensHeader from \"./components/ScreensHeader\";\r\n\r\nfunction ScreensPage() {\r\n  const screensData: screensPageSliceType = useAppSelector((state: RootState) => state.screensPage);\r\n  const roomsData: roomsPageSliceType = useAppSelector((state: RootState) => state.roomsPage);\r\n\r\n  const dispatch: AppDispatch = useAppDispatch();\r\n\r\n  useEffect((): void => {\r\n    dispatch(SET_SCREENS_SERACH_VALUE(''));\r\n    dispatch(SET_SCREENS_FILTER_VALUE(''));\r\n    dispatch(SET_SCREENS_SORT_VALUE(''));\r\n    dispatch(getScreensData());\r\n    dispatch(getRoomsData());\r\n    document.title = `${PLATFORM_NAME} - Ekrany`;\r\n  }, []);\r\n\r\n  return (\r\n    <main\r\n      className={\r\n        screensData.loading || screensData.error != null || roomsData.loading || roomsData.error != null\r\n          ? \"main-screens-page main-screens-page--content-center\"\r\n          : \"main-screens-page\"\r\n      }\r\n    >\r\n      {screensData.loading || roomsData.loading ? (\r\n        <LoadingSpinner />\r\n      ) : screensData.error != null || roomsData.error != null ? (\r\n        screensData.error || roomsData.error\r\n      ) : (\r\n        <>\r\n          <ScreensHeader />\r\n          <div className=\"main-screens-page__main-content\">\r\n            <ScreensContentHeader />\r\n            <ScreensContentTable />\r\n          </div>\r\n        </>\r\n      )}\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default ScreensPage;\r\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\r\nimport { employeePositionsData } from '../../data/employeePositionsData';\r\nimport { EMPLOYEE_POSITIONS_LSTORAGE_NAME } from '../../data/staticPlatformData';\r\nimport { employeePositionDataType } from '../../types/employeePositionDataType';\r\nimport { employeePositionsSliceType } from '../../types/slices/employeePositionsSliceTypes';\r\n\r\nexport const getEmployeePositionsData = createAsyncThunk(\r\n    'employeePositions/getEmployeePositionsData',\r\n    async () => {\r\n        const promise = new Promise<employeePositionDataType[]>((resolve, reject) => {\r\n            setTimeout(() => {\r\n                const getDataFromLocalstorage = localStorage.getItem(EMPLOYEE_POSITIONS_LSTORAGE_NAME)\r\n                \r\n                if (getDataFromLocalstorage != null) {\r\n                    resolve(JSON.parse(getDataFromLocalstorage))\r\n                    \r\n                } else {\r\n                    resolve(employeePositionsData)\r\n                }\r\n            }, 2150)\r\n        });\r\n        return promise\r\n    }\r\n);\r\n\r\nconst initialState: employeePositionsSliceType = {\r\n    loading: true,\r\n    value: [],\r\n    error: null,\r\n};\r\n\r\nexport const employeePositionsSlice = createSlice({\r\n    name: 'employeePositions',\r\n    initialState,\r\n    reducers: {\r\n        ADD_POSITION: (state, action) => {\r\n            state.value.push(action.payload);\r\n        },\r\n        UPDATE_POSITION: (state, action) => {\r\n            const data = state.value;\r\n            data[action.payload.index] = action.payload.value;\r\n            state.value = data;\r\n        },\r\n        REMOVE_POSITION: (state, action) => {\r\n            const data = state.value;\r\n            data.splice(action.payload, 1);\r\n            state.value = data;\r\n        }\r\n    },\r\n    extraReducers: (builder) => {\r\n        builder.addCase(getEmployeePositionsData.pending, (state) => {\r\n            state.loading = true;\r\n        }),\r\n        builder.addCase(getEmployeePositionsData.fulfilled, (state, action) => {\r\n            state.loading = false;\r\n            state.value = action.payload;\r\n        }),\r\n        builder.addCase(getEmployeePositionsData.rejected, (state) => {\r\n            state.loading = false;\r\n            state.error = 'Błąd ładowania danych';\r\n        })\r\n    }\r\n});\r\n\r\nexport const {ADD_POSITION, UPDATE_POSITION, REMOVE_POSITION} = employeePositionsSlice.actions;\r\n\r\nexport const employeePositions = (state: {employeePositions: employeePositionsSliceType}) => state.employeePositions.value;\r\n\r\nexport default employeePositionsSlice.reducer;","import React, { useState } from \"react\";\r\nimport { useAppDispatch } from \"../../../../hooks/redux-hooks\";\r\nimport { ADD_POSITION, REMOVE_POSITION, UPDATE_POSITION } from \"../../../../redux/slices/employeePositionsSlice\";\r\nimport { ADD_NOTIFICATION } from \"../../../../redux/slices/globalSettingsSlice\";\r\nimport { AppDispatch } from \"../../../../redux/store\";\r\nimport { employeePositionDataType } from \"../../../../types/employeePositionDataType\";\r\n\r\nfunction EmployeePositionsBlock(props: { employeePositionsData: employeePositionDataType[] }) {\r\n  const dispatch: AppDispatch = useAppDispatch();\r\n\r\n  interface settingsFormData {\r\n    validationError: string;\r\n    newValue: string;\r\n    editInput: {\r\n      elementId: number;\r\n      elementValue: string;\r\n      newUpdateValue: string;\r\n    }\r\n  }\r\n\r\n  const initialClearFormElements: settingsFormData = {\r\n    validationError: \"\",\r\n    newValue: \"\",\r\n    editInput: {\r\n      elementId: 0,\r\n      elementValue: \"\",\r\n      newUpdateValue: \"\"\r\n    }\r\n  };\r\n\r\n  const [formElements, setFormElements] = useState<settingsFormData>(initialClearFormElements);\r\n\r\n  const employeePositionNamesData: string[] = props.employeePositionsData.map((e: employeePositionDataType) => e.employeePositionName.toUpperCase());\r\n  const newIdEmployeePositionElement: number = props.employeePositionsData.map((e: employeePositionDataType) => e.employeePositionId).sort((a, b) => b - a)[0] + 1;\r\n\r\n  const addEmployeePosition = (): void => {\r\n    const employeePositionInputValue: string = formElements.newValue;\r\n\r\n    if (employeePositionInputValue == \"\") {\r\n      setFormElements((prevState: settingsFormData) => {return {\r\n        ...prevState,\r\n        validationError: \"Wprowadź wartość do formularza\",\r\n      }});\r\n\r\n    } else if (employeePositionNamesData.includes(employeePositionInputValue.toUpperCase())) {\r\n      setFormElements((prevState: settingsFormData) => {return {\r\n        ...prevState,\r\n        validationError: \"Wprowadzona wartość już istnieje\",\r\n      }});\r\n\r\n    } else {\r\n      dispatch(\r\n        ADD_POSITION({\r\n          employeePositionId: newIdEmployeePositionElement,\r\n          employeePositionName: employeePositionInputValue,\r\n          dateAdded: new Date().toJSON(),\r\n        })\r\n      );\r\n      dispatch(ADD_NOTIFICATION({notificationName: `Dodano nowe stanowisko pracownika o nazwie: ${employeePositionInputValue}`, notificationDate: new Date().toJSON(), seenNotification: false})), \r\n      setFormElements(initialClearFormElements);\r\n    }\r\n  };\r\n\r\n  const editEmployeePosition = (elementId: number): void => {\r\n    const editElementInputValue: string = formElements.editInput.newUpdateValue;\r\n    const editElementValue: string = formElements.editInput.elementValue;\r\n\r\n    if (editElementInputValue == \"\") {\r\n      setFormElements((prevState: settingsFormData) => {return {\r\n        ...prevState,\r\n        validationError: \"Wprowadź wartość do formularza\",\r\n      }});\r\n    } else if (employeePositionNamesData.includes(editElementInputValue.toUpperCase()) && editElementValue.toUpperCase() != editElementInputValue.toUpperCase()){\r\n        setFormElements((prevState: settingsFormData) => {return {\r\n          ...prevState,\r\n          validationError: \"Wprowadzona wartość już istnieje\",\r\n        }});\r\n\r\n    } else {\r\n      const [employeePositionElement]: employeePositionDataType[] = props.employeePositionsData.filter((e: employeePositionDataType) => e.employeePositionId === elementId);\r\n      const employeePositionElementIndex: number = props.employeePositionsData.indexOf(employeePositionElement);\r\n\r\n      dispatch(\r\n        UPDATE_POSITION({\r\n          index: employeePositionElementIndex,\r\n          value: {\r\n            ...employeePositionElement,\r\n            employeePositionName: editElementInputValue,\r\n          },\r\n        })\r\n      );\r\n      dispatch(ADD_NOTIFICATION({notificationName: `Zaktualizowano stanowisko pracownika`, notificationDate: new Date().toJSON(), seenNotification: false})), \r\n\r\n      setFormElements(initialClearFormElements);\r\n    }\r\n  };\r\n\r\n  const removeEmployeePosition = (elementId: number): void => {\r\n    const [employeePositionElement]: employeePositionDataType[] = props.employeePositionsData.filter((e: employeePositionDataType) => e.employeePositionId === elementId);\r\n    const employeePositionElementIndex: number = props.employeePositionsData.indexOf(employeePositionElement);\r\n\r\n    dispatch(ADD_NOTIFICATION({notificationName: `Usunięto stanowisko pracownika o nazwie: ${props.employeePositionsData[employeePositionElementIndex].employeePositionName}`, notificationDate: new Date().toJSON(), seenNotification: false})), \r\n\r\n    dispatch(REMOVE_POSITION(employeePositionElementIndex));\r\n\r\n    setFormElements(initialClearFormElements);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"block__header\">\r\n        <div className=\"header__title\">Rodzaje stanowisk pracowników</div>\r\n        <div className=\"header__stats\">\r\n          Ilosć danych: {props.employeePositionsData.length}\r\n        </div>\r\n      </div>\r\n      <div className=\"block__description\">\r\n        Lorem ipsum dolor sit amet consectetur, adipisicing elit. Necessitatibus minus quam accusantium veniam repellat perferendis architecto non! Necessitatibus adipisci qui ipsum iusto harum recusandae beatae voluptatibus id, nemo nesciunt mollitia sequi eius ut possimus delectus.\r\n      </div>\r\n      <div className=\"block__error\">{formElements.validationError}</div>\r\n      <div className=\"block__content\">\r\n        {props.employeePositionsData.length > 0 ? (\r\n          <table className=\"content__table\">\r\n            <thead>\r\n              <tr className=\"table-tr\">\r\n                <th className=\"table-th\">ID</th>\r\n                <th className=\"table-th\">Nazwa</th>\r\n                <th className=\"table-th\">Opcje</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {props.employeePositionsData.map(\r\n                (e: employeePositionDataType) => (\r\n                  <tr className=\"table-tr\" key={e.employeePositionId}>\r\n                    <td className=\"table-td\">{e.employeePositionId}</td>\r\n                    <td className=\"table-td\">\r\n                      {formElements.editInput.elementId ===\r\n                      e.employeePositionId ? (\r\n                        <input\r\n                          className=\"table-text-input\"\r\n                          type=\"text\"\r\n                          value={formElements.editInput.newUpdateValue}\r\n                          onChange={(e) =>\r\n                            setFormElements((prevState: settingsFormData) => {return {\r\n                              ...prevState,\r\n                              editInput: {\r\n                                ...prevState.editInput,\r\n                                newUpdateValue: e.target.value\r\n                              },\r\n                            }})\r\n                          }\r\n                        />\r\n                      ) : (\r\n                        e.employeePositionName\r\n                      )}\r\n                    </td>\r\n                    <td className=\"table-td\">\r\n                      {formElements.editInput.elementId ===\r\n                      e.employeePositionId ? null : (\r\n                        <button\r\n                          className=\"table-button\"\r\n                          onClick={() =>\r\n                            setFormElements((prevState: settingsFormData) => {return {\r\n                              ...prevState,\r\n                              validationError: '',\r\n                              editInput: {\r\n                                ...prevState.editInput,\r\n                                elementId: e.employeePositionId,\r\n                                elementValue: e.employeePositionName,\r\n                                newUpdateValue: e.employeePositionName\r\n                              },\r\n                            }})\r\n                          }\r\n                        >\r\n                          Edytuj\r\n                        </button>\r\n                      )}\r\n\r\n                      {formElements.editInput.elementId ===\r\n                      e.employeePositionId ? (\r\n                        <button\r\n                          className=\"table-button\"\r\n                          onClick={() =>\r\n                            editEmployeePosition(e.employeePositionId)\r\n                          }\r\n                        >\r\n                          Zaktualizuj\r\n                        </button>\r\n                      ) : null}\r\n\r\n                      {formElements.editInput.elementId ===\r\n                      e.employeePositionId ? null : (\r\n                        <button\r\n                          className=\"table-button\"\r\n                          onClick={() =>\r\n                            removeEmployeePosition(e.employeePositionId)\r\n                          }\r\n                        >\r\n                          Usuń\r\n                        </button>\r\n                      )}\r\n\r\n                      {formElements.editInput.elementId ===\r\n                      e.employeePositionId ? (\r\n                        <button\r\n                          className=\"table-button\"\r\n                          onClick={() =>\r\n                            setFormElements(initialClearFormElements)\r\n                          }\r\n                        >\r\n                          Wróć\r\n                        </button>\r\n                      ) : null}\r\n                    </td>\r\n                  </tr>\r\n                )\r\n              )}\r\n              <tr className=\"table-tr\" key={newIdEmployeePositionElement}>\r\n                <td className=\"table-td\">\r\n                  {newIdEmployeePositionElement}\r\n                </td>\r\n                <td className=\"table-td\">\r\n                  <input\r\n                    className=\"table-text-input\"\r\n                    type=\"text\"\r\n                    value={formElements.newValue}\r\n                    onChange={(e) =>\r\n                      setFormElements((prevState: settingsFormData) => {return {\r\n                        ...prevState,\r\n                        newValue: e.target.value,\r\n                      }})\r\n                    }\r\n                  />\r\n                </td>\r\n                <td className=\"table-td\">\r\n                  <button\r\n                    className=\"table-button\"\r\n                    onClick={() => {\r\n                      addEmployeePosition();\r\n                    }}\r\n                  >\r\n                    Dodaj\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        ) : (\r\n          <div className=\"content__error\">Brak danych do wyświetlenia</div>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default EmployeePositionsBlock;\r\n","import React, { useState } from \"react\";\r\nimport { useAppDispatch } from \"../../../../hooks/redux-hooks\";\r\nimport { ADD_NOTIFICATION } from \"../../../../redux/slices/globalSettingsSlice\";\r\nimport { ADD_CATEGORY, REMOVE_CATEGORY, UPDATE_CATEGORY } from \"../../../../redux/slices/meetingCategoriesSlice\";\r\nimport { AppDispatch } from \"../../../../redux/store\";\r\nimport { meetingCategoryDataType } from \"../../../../types/meetingCategoryDataType\";\r\n\r\nfunction MeetingCategoriesBlock(props: { meetingsCategoriesData: meetingCategoryDataType[] }) {\r\n  const dispatch: AppDispatch = useAppDispatch();\r\n\r\n  interface settingsFormData {\r\n    validationError: string;\r\n    newValue: string;\r\n    editInput: {\r\n      elementId: number;\r\n      elementValue: string;\r\n      newUpdateValue: string;\r\n    }\r\n  }\r\n\r\n  const initialClearFormElements: settingsFormData = {\r\n    validationError: \"\",\r\n    newValue: \"\",\r\n    editInput: {\r\n      elementId: 0,\r\n      elementValue: \"\",\r\n      newUpdateValue: \"\"\r\n    }\r\n  };\r\n\r\n  const [formElements, setFormElements] = useState<settingsFormData>(initialClearFormElements);\r\n\r\n  const meetingCategoryNamesData: string[] = props.meetingsCategoriesData.map((e: meetingCategoryDataType) => e.meetingCategoryName.toUpperCase());\r\n  const newIdMeetingCategoryElement: number = props.meetingsCategoriesData.map((e: meetingCategoryDataType) => e.meetingCategoryId).sort((a, b) => b - a)[0] + 1;\r\n\r\n  const addMeetingCategory = (): void => {\r\n    const meetingCategoryInputValue: string = formElements.newValue;\r\n\r\n    if (meetingCategoryInputValue == \"\") {\r\n      setFormElements((prevState: settingsFormData) => {return {\r\n        ...prevState,\r\n        validationError: \"Wprowadź wartość do formularza\",\r\n      }});\r\n\r\n    } else if (meetingCategoryNamesData.includes(meetingCategoryInputValue.toUpperCase())) {\r\n      setFormElements((prevState: settingsFormData) => {return {\r\n        ...prevState,\r\n        validationError: \"Wprowadzona wartość już istnieje\",\r\n      }});\r\n\r\n    } else {\r\n      dispatch(\r\n        ADD_CATEGORY({\r\n          meetingCategoryId: newIdMeetingCategoryElement,\r\n          meetingCategoryName: meetingCategoryInputValue,\r\n          dateAdded: new Date().toJSON(),\r\n        })\r\n      );\r\n      dispatch(ADD_NOTIFICATION({notificationName: `Dodano nowy rodzaj spotkania o nazwie: ${meetingCategoryInputValue}`, notificationDate: new Date().toJSON(), seenNotification: false})), \r\n      setFormElements(initialClearFormElements);\r\n    }\r\n  };\r\n\r\n  const editMeetingCategory = (elementId: number): void => {\r\n    const editElementInputValue: string = formElements.editInput.newUpdateValue;\r\n    const editElementValue: string = formElements.editInput.elementValue;\r\n\r\n    if (editElementInputValue == \"\") {\r\n      setFormElements((prevState: settingsFormData) => {return {\r\n        ...prevState,\r\n        validationError: \"Wprowadź wartość do formularza\",\r\n      }});\r\n\r\n    } else if (meetingCategoryNamesData.includes(editElementInputValue.toUpperCase()) && editElementValue.toUpperCase() != editElementInputValue.toUpperCase()) {\r\n      setFormElements((prevState: settingsFormData) => {return {\r\n        ...prevState,\r\n        validationError: \"Wprowadzona wartość już istnieje\",\r\n      }});\r\n\r\n    } else {\r\n      const [meetingCategoryElement]: meetingCategoryDataType[] = props.meetingsCategoriesData.filter(\r\n        (e: meetingCategoryDataType) => e.meetingCategoryId === elementId\r\n      );\r\n      const meetingCategoryIndex: number = props.meetingsCategoriesData.indexOf(\r\n        meetingCategoryElement\r\n      );\r\n\r\n      dispatch(\r\n        UPDATE_CATEGORY({\r\n          index: meetingCategoryIndex,\r\n          value: {\r\n            ...meetingCategoryElement,\r\n            meetingCategoryName: editElementInputValue,\r\n          },\r\n        })\r\n      );\r\n      dispatch(ADD_NOTIFICATION({notificationName: `Zaktualizowano rodzaj spotkania`, notificationDate: new Date().toJSON(), seenNotification: false})), \r\n\r\n      setFormElements(initialClearFormElements);\r\n    }\r\n  };\r\n\r\n  const removeMeetingCategory = (elementId: number): void => {\r\n    const [meetingCategoryElement]: meetingCategoryDataType[] = props.meetingsCategoriesData.filter(\r\n      (e: meetingCategoryDataType) => e.meetingCategoryId === elementId\r\n    );\r\n    const meetingCategoryElementIndex: number = props.meetingsCategoriesData.indexOf(\r\n      meetingCategoryElement\r\n    );\r\n\r\n    dispatch(ADD_NOTIFICATION({notificationName: `Usunięto rodzaj spotkania o nazwie: ${props.meetingsCategoriesData[meetingCategoryElementIndex].meetingCategoryName}`, notificationDate: new Date().toJSON(), seenNotification: false})), \r\n\r\n    dispatch(REMOVE_CATEGORY(meetingCategoryElementIndex));\r\n\r\n    setFormElements(initialClearFormElements);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"block__header\">\r\n        <div className=\"header__title\">Kategorie spotkań</div>\r\n        <div className=\"header__stats\">\r\n          Ilosć danych: {props.meetingsCategoriesData.length}\r\n        </div>\r\n      </div>\r\n      <div className=\"block__description\">\r\n        Lorem ipsum dolor sit, amet consectetur adipisicing elit. Accusantium voluptatibus sequi nostrum animi vitae quaerat, dicta consequuntur vel tenetur. Molestiae eaque ab inventore esse veniam dicta, atque omnis autem similique sint laboriosam minus! Nobis, qui.\r\n      </div>\r\n      <div className=\"block__error\">{formElements.validationError}</div>\r\n      <div className=\"block__content\">\r\n        {props.meetingsCategoriesData.length > 0 ? (\r\n          <table className=\"content__table\">\r\n            <thead>\r\n              <tr className=\"table-tr\">\r\n                <th className=\"table-th\">ID</th>\r\n                <th className=\"table-th\">Nazwa</th>\r\n                <th className=\"table-th\">Opcje</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {props.meetingsCategoriesData.map(\r\n                (e: meetingCategoryDataType) => (\r\n                  <tr className=\"table-tr\" key={e.meetingCategoryId}>\r\n                    <td className=\"table-td\">{e.meetingCategoryId}</td>\r\n                    <td className=\"table-td\">\r\n                      {formElements.editInput.elementId ===\r\n                      e.meetingCategoryId ? (\r\n                        <input\r\n                          className=\"table-text-input\"\r\n                          type=\"text\"\r\n                          value={formElements.editInput.newUpdateValue}\r\n                          onChange={(e) =>\r\n                            setFormElements((prevState: settingsFormData) => {return {\r\n                              ...prevState,\r\n                              editInput: {\r\n                                ...prevState.editInput,\r\n                                nweUpdateValue: e.target.value,\r\n                              },\r\n                            }})\r\n                          }\r\n                        />\r\n                      ) : (\r\n                        e.meetingCategoryName\r\n                      )}\r\n                    </td>\r\n                    <td className=\"table-td\">\r\n                      {formElements.editInput.elementId ===\r\n                      e.meetingCategoryId ? null : (\r\n                        <button\r\n                          className=\"table-button\"\r\n                          onClick={() =>\r\n                            setFormElements((prevState: settingsFormData) => {return {\r\n                              ...prevState,\r\n                              validationError: '',\r\n                              editInput: {\r\n                                ...prevState.editInput,\r\n                                elementId: e.meetingCategoryId,\r\n                                elementValue: e.meetingCategoryName,\r\n                                newUpdateValue: e.meetingCategoryName,\r\n                              },\r\n                            }})\r\n                          }\r\n                        >\r\n                          Edytuj\r\n                        </button>\r\n                      )}\r\n\r\n                      {formElements.editInput.elementId ===\r\n                      e.meetingCategoryId ? (\r\n                        <button\r\n                          className=\"table-button\"\r\n                          onClick={() =>\r\n                            editMeetingCategory(e.meetingCategoryId)\r\n                          }\r\n                        >\r\n                          Zaktualizuj\r\n                        </button>\r\n                      ) : null}\r\n\r\n                      {formElements.editInput.elementId ===\r\n                      e.meetingCategoryId ? null : (\r\n                        <button\r\n                          className=\"table-button\"\r\n                          onClick={() =>\r\n                            removeMeetingCategory(e.meetingCategoryId)\r\n                          }\r\n                        >\r\n                          Usuń\r\n                        </button>\r\n                      )}\r\n\r\n                      {formElements.editInput.elementId ===\r\n                      e.meetingCategoryId ? (\r\n                        <button\r\n                          className=\"table-button\"\r\n                          onClick={() =>\r\n                            setFormElements(initialClearFormElements)\r\n                          }\r\n                        >\r\n                          Wróć\r\n                        </button>\r\n                      ) : null}\r\n                    </td>\r\n                  </tr>\r\n                )\r\n              )}\r\n              <tr className=\"table-tr\" key={newIdMeetingCategoryElement}>\r\n                <td className=\"table-td\">\r\n                  {newIdMeetingCategoryElement}\r\n                </td>\r\n                <td className=\"table-td\">\r\n                  <input\r\n                    className=\"table-text-input\"\r\n                    type=\"text\"\r\n                    value={formElements.newValue}\r\n                    onChange={(e) =>\r\n                      setFormElements((prevState: settingsFormData) => {return {\r\n                        ...prevState,\r\n                        newValue: e.target.value,\r\n                      }})\r\n                    }\r\n                  />\r\n                </td>\r\n                <td className=\"table-td\">\r\n                  <button\r\n                    className=\"table-button\"\r\n                    onClick={() => {\r\n                      addMeetingCategory();\r\n                    }}\r\n                  >\r\n                    Dodaj\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        ) : (\r\n          <div className=\"content__error\">Brak danych do wyświetlenia</div>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default MeetingCategoriesBlock;\r\n","import React, { useState } from \"react\";\r\nimport { useAppDispatch } from \"../../../../hooks/redux-hooks\";\r\nimport { ADD_NOTIFICATION } from \"../../../../redux/slices/globalSettingsSlice\";\r\nimport { ADD_TYPE, REMOVE_TYPE, UPDATE_TYPE } from \"../../../../redux/slices/roomTypesSlice\";\r\nimport { AppDispatch } from \"../../../../redux/store\";\r\nimport { roomTypeDataType } from \"../../../../types/roomTypeDataType\";\r\n\r\nfunction RoomTypesBlock(props: { roomTypesData: roomTypeDataType[] }) {\r\n  const dispatch: AppDispatch = useAppDispatch();\r\n\r\n  interface settingsFormData {\r\n    validationError: string;\r\n    newValue: string;\r\n    editInput: {\r\n      elementId: number;\r\n      elementValue: string;\r\n      newUpdateValue: string;\r\n    }\r\n  }\r\n\r\n  const initialClearFormElements: settingsFormData = {\r\n    validationError: \"\",\r\n    newValue: \"\",\r\n    editInput: {\r\n      elementId: 0,\r\n      elementValue: \"\",\r\n      newUpdateValue: \"\"\r\n    }\r\n  };\r\n\r\n  const [formElements, setFormElements] = useState<settingsFormData>(initialClearFormElements);\r\n\r\n  const roomTypeNamesData: string[] = props.roomTypesData.map((e: roomTypeDataType) => e.roomTypeName.toUpperCase());\r\n  const newIdRoomTypeElement: number = props.roomTypesData.map((e: roomTypeDataType) => e.roomTypeId).sort((a, b) => b - a)[0] + 1;\r\n\r\n  const addRoomType = (): void => {\r\n    const roomTypeInputValue: string = formElements.newValue;\r\n\r\n    if (roomTypeInputValue == \"\") {\r\n      setFormElements((prevState: settingsFormData) => {return {\r\n        ...prevState,\r\n        validationError: \"Wprowadź wartość do formularza\",\r\n      }});\r\n\r\n    } else if (roomTypeNamesData.includes(roomTypeInputValue.toUpperCase())) {\r\n      setFormElements((prevState: settingsFormData) => {return {\r\n        ...prevState,\r\n        validationError: \"Wprowadzona wartość już istnieje\",\r\n      }});\r\n\r\n    } else {\r\n      dispatch(\r\n        ADD_TYPE({\r\n          roomTypeId: newIdRoomTypeElement,\r\n          roomTypeName: roomTypeInputValue,\r\n          dateAdded: new Date().toJSON(),\r\n        })\r\n      );\r\n      dispatch(ADD_NOTIFICATION({notificationName: `Dodano nowy rodzaj pomieszczenia o nazwie: ${roomTypeInputValue}`, notificationDate: new Date().toJSON(), seenNotification: false})), \r\n      setFormElements(initialClearFormElements);\r\n    }\r\n  };\r\n\r\n  const editRoomType = (elementId: number): void => {\r\n    const editElementInputValue: string = formElements.editInput.newUpdateValue;\r\n    const editElementValue: string = formElements.editInput.elementValue;\r\n\r\n    if (editElementInputValue == \"\") {\r\n      setFormElements((prevState: settingsFormData) => {return {\r\n        ...prevState,\r\n        error: \"Wprowadź wartość do formularza\",\r\n      }});\r\n\r\n    } else if (roomTypeNamesData.includes(editElementInputValue.toUpperCase()) && editElementValue.toUpperCase() != editElementInputValue.toUpperCase()\r\n    ) {\r\n      setFormElements((prevState: settingsFormData) => {return {\r\n        ...prevState,\r\n        error: \"Wprowadzona wartość już istnieje\",\r\n      }});\r\n\r\n    } else {\r\n      const [roomTypeElement]: roomTypeDataType[] = props.roomTypesData.filter((e: roomTypeDataType) => e.roomTypeId === elementId);\r\n      const roomTypeElementIndex: number = props.roomTypesData.indexOf(roomTypeElement);\r\n\r\n      dispatch(\r\n        UPDATE_TYPE({\r\n          index: roomTypeElementIndex,\r\n          value: { ...roomTypeElement, roomTypeName: editElementInputValue },\r\n        })\r\n      );\r\n\r\n      dispatch(ADD_NOTIFICATION({notificationName: `Zaktualizowano rodzaj pomieszczenia`, notificationDate: new Date().toJSON(), seenNotification: false})), \r\n\r\n      setFormElements(initialClearFormElements);\r\n    }\r\n  };\r\n\r\n  const removeRoomType = (elementId: number): void => {\r\n    const [roomTypeElement]: roomTypeDataType[] = props.roomTypesData.filter((e: roomTypeDataType) => e.roomTypeId === elementId);\r\n    const roomTypeElementIndex: number = props.roomTypesData.indexOf(roomTypeElement);\r\n\r\n    dispatch(ADD_NOTIFICATION({notificationName: `Usunięto rodzaj pomieszczenia o nazwie: ${props.roomTypesData[roomTypeElementIndex].roomTypeName}`, notificationDate: new Date().toJSON(), seenNotification: false})), \r\n\r\n    dispatch(REMOVE_TYPE(roomTypeElementIndex));\r\n\r\n    setFormElements(initialClearFormElements);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"block__header\">\r\n        <div className=\"header__title\">Rodzaje pomieszczeń</div>\r\n        <div className=\"header__stats\">\r\n          Ilosć danych: {props.roomTypesData.length}\r\n        </div>\r\n      </div>\r\n      <div className=\"block__description\">\r\n        Lorem ipsum dolor sit amet consectetur adipisicing elit. Harum adipisci consequatur nemo molestiae perspiciatis? Aperiam quibusdam aliquid eligendi ipsum et, quasi, a aut nisi hic modi quis voluptatum, soluta necessitatibus sint ut esse iusto atque.\r\n      </div>\r\n      <div className=\"block__error\">{formElements.validationError}</div>\r\n      <div className=\"block__content\">\r\n        {props.roomTypesData.length > 0 ? (\r\n          <table className=\"content__table\">\r\n            <thead>\r\n              <tr className=\"table-tr\">\r\n                <th className=\"table-th\">ID</th>\r\n                <th className=\"table-th\">Nazwa</th>\r\n                <th className=\"table-th\">Opcje</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {props.roomTypesData.map((e: roomTypeDataType) => (\r\n                <tr className=\"table-tr\" key={e.roomTypeId}>\r\n                  <td className=\"table-td\">{e.roomTypeId}</td>\r\n                  <td className=\"table-td\">\r\n                    {formElements.editInput.elementId === e.roomTypeId ? (\r\n                      <input\r\n                        className=\"table-text-input\"\r\n                        type=\"text\"\r\n                        value={formElements.editInput.newUpdateValue}\r\n                        onChange={(e) =>\r\n                          setFormElements((prevState: settingsFormData) => {return {\r\n                            ...prevState,\r\n                            editInput: {\r\n                              ...prevState.editInput,\r\n                              newUpdateValue: e.target.value,\r\n                            },\r\n                          }})\r\n                        }\r\n                      />\r\n                    ) : (\r\n                      e.roomTypeName\r\n                    )}\r\n                  </td>\r\n                  <td className=\"table-td\">\r\n                    {formElements.editInput.elementId ===\r\n                    e.roomTypeId ? null : (\r\n                      <button\r\n                        className=\"table-button\"\r\n                        onClick={() =>\r\n                          setFormElements((prevState: settingsFormData) => {return {\r\n                            ...prevState,\r\n                            validationError: '',\r\n                            editInput: {\r\n                              ...prevState.editInput,\r\n                              elementId: e.roomTypeId,\r\n                              elementValue: e.roomTypeName,\r\n                              newUpdateValue: e.roomTypeName\r\n                            },\r\n                          }})\r\n                        }\r\n                      >\r\n                        Edytuj\r\n                      </button>\r\n                    )}\r\n\r\n                    {formElements.editInput.elementId === e.roomTypeId ? (\r\n                      <button className=\"table-button\" onClick={() => editRoomType(e.roomTypeId)}>\r\n                        Zaktualizuj\r\n                      </button>\r\n                    ) : null}\r\n\r\n                    {formElements.editInput.elementId ===\r\n                    e.roomTypeId ? null : (\r\n                      <button className=\"table-button\" onClick={() => removeRoomType(e.roomTypeId)}>\r\n                        Usuń\r\n                      </button>\r\n                    )}\r\n\r\n                    {formElements.editInput.elementId === e.roomTypeId ? (\r\n                      <button\r\n                        className=\"table-button\"\r\n                        onClick={() =>\r\n                          setFormElements(initialClearFormElements)\r\n                        }\r\n                      >\r\n                        Wróć\r\n                      </button>\r\n                    ) : null}\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n              <tr className=\"table-tr\" key={newIdRoomTypeElement}>\r\n                <td className=\"table-td\">\r\n                  {newIdRoomTypeElement}\r\n                </td>\r\n                <td className=\"table-td\">\r\n                  <input\r\n                    className=\"table-text-input\"\r\n                    type=\"text\"\r\n                    value={formElements.newValue}\r\n                    onChange={(e) =>\r\n                      setFormElements((prevState: settingsFormData) => {return {\r\n                        ...prevState,\r\n                        newValue: e.target.value,\r\n                      }})\r\n                    }\r\n                  />\r\n                </td>\r\n                <td className=\"table-td\">\r\n                  <button\r\n                    className=\"table-button\"\r\n                    onClick={() => {\r\n                      addRoomType();\r\n                    }}\r\n                  >\r\n                    Dodaj\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        ) : (\r\n          <div className=\"content__error\">Brak danych do wyświetlenia</div>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default RoomTypesBlock;\r\n","import React, { useEffect } from 'react';\r\nimport LoadingSpinner from '../../../components/LoadingSpinner/LoadingSpinner';\r\nimport { EMPLOYEE_POSITIONS_LSTORAGE_NAME, MEETING_CATEGORIES_LSTORAGE_NAME, ROOM_TYPES_LSTORAGE_NAME } from '../../../data/staticPlatformData';\r\nimport { useAppDispatch, useAppSelector } from '../../../hooks/redux-hooks';\r\nimport { getEmployeePositionsData } from '../../../redux/slices/employeePositionsSlice';\r\nimport { getMeetingCategoriesData } from '../../../redux/slices/meetingCategoriesSlice';\r\nimport { getRoomTypesData } from '../../../redux/slices/roomTypesSlice';\r\nimport { AppDispatch, RootState } from '../../../redux/store';\r\nimport { employeePositionsSliceType } from '../../../types/slices/employeePositionsSliceTypes';\r\nimport { meetingCategoriesSliceType } from '../../../types/slices/meetingCategoriesSliceTypes';\r\nimport { roomTypesSliceType } from '../../../types/slices/roomTypesSliceTypes';\r\nimport { saveToLocalstorage } from '../../../utils/saveToLocalStorage';\r\nimport EmployeePositionsBlock from './components/EmployeePositionsBlock';\r\nimport MeetingCategoriesBlock from './components/MeetingCategoriesBlock';\r\nimport RoomTypesBlock from './components/RoomTypesBlock';\r\n\r\nfunction SettingsContentTable() {\r\n  const meetingsCategoriesData: meetingCategoriesSliceType = useAppSelector((state: RootState) => state.meetingCategories);\r\n  const roomTypesData: roomTypesSliceType = useAppSelector((state: RootState) => state.roomTypes);\r\n  const employeePositionsData: employeePositionsSliceType = useAppSelector((state: RootState) => state.employeePositions);\r\n\r\n  const dispatch: AppDispatch = useAppDispatch();\r\n\r\n  useEffect((): void => {\r\n    dispatch(getMeetingCategoriesData())\r\n    dispatch(getRoomTypesData())\r\n    dispatch(getEmployeePositionsData())\r\n  }, []);\r\n\r\n  useEffect((): void => {\r\n    !meetingsCategoriesData.loading && saveToLocalstorage(MEETING_CATEGORIES_LSTORAGE_NAME, meetingsCategoriesData.value);\r\n  }, [meetingsCategoriesData.value]);\r\n\r\n  useEffect((): void => {\r\n    !roomTypesData.loading && saveToLocalstorage(ROOM_TYPES_LSTORAGE_NAME, roomTypesData.value);\r\n  }, [roomTypesData.value]);\r\n\r\n  useEffect((): void => {\r\n    !employeePositionsData.loading && saveToLocalstorage(EMPLOYEE_POSITIONS_LSTORAGE_NAME, employeePositionsData.value);\r\n  }, [employeePositionsData.value]);\r\n  \r\n\r\n  return (\r\n    <div className=\"content__container\">\r\n        <div className={meetingsCategoriesData.loading || meetingsCategoriesData.error != null ? \"container__block container__block--content-center\" : \"container__block\"}>\r\n          {meetingsCategoriesData.loading ? <LoadingSpinner/> : meetingsCategoriesData.error != null ? meetingsCategoriesData.error : <MeetingCategoriesBlock meetingsCategoriesData={meetingsCategoriesData.value}/>}\r\n        </div>\r\n\r\n        <div className={roomTypesData.loading || roomTypesData.error != null ? \"container__block container__block--content-center\" : \"container__block\"}>\r\n          {roomTypesData.loading ? <LoadingSpinner/> : roomTypesData.error != null ? roomTypesData.error : <RoomTypesBlock roomTypesData={roomTypesData.value}/>}\r\n        </div>\r\n        \r\n        <div className={employeePositionsData.loading || employeePositionsData.error != null ? \"container__block container__block--content-center\" : \"container__block\"}>\r\n          {employeePositionsData.loading ? <LoadingSpinner/> : employeePositionsData.error != null ? employeePositionsData.error : <EmployeePositionsBlock employeePositionsData={employeePositionsData.value}/>}\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SettingsContentTable;","import React from 'react';\r\n\r\nfunction SettingsHeader() {\r\n  return (\r\n    <div className=\"main-settings-page__header\">\r\n      <div className=\"header__group\">\r\n        <div className=\"group__title\">\r\n          <span className=\"material-symbols-outlined\">settings</span>\r\n          Ustawienia\r\n        </div>\r\n      </div>\r\n      <div className=\"header__text\">\r\n        Lorem ipsum dolor, sit amet consectetur adipisicing elit. Temporibus\r\n        nam, ducimus quae deleniti recusandae sed corrupti dicta ullam autem\r\n        cupiditate? Quae ex aliquam dignissimos fuga, mollitia repudiandae\r\n        quaerat tempore rem cum explicabo fugiat cupiditate perferendis possimus\r\n        voluptatibus temporibus laudantium libero incidunt tempora minus\r\n        praesentium facilis saepe illo quidem. Consectetur est distinctio\r\n        voluptatum iure iste molestiae mollitia doloremque et repellendus alias\r\n        autem unde, magni inventore quae id illum. Facere est blanditiis enim,\r\n        laudantium eos nostrum iusto, quas odit corporis corrupti fugit totam et\r\n        sunt impedit nihil ducimus recusandae veniam ipsa commodi.\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SettingsHeader;","import React, { useEffect } from 'react';\r\nimport { PLATFORM_NAME } from '../../data/staticPlatformData';\r\nimport '../../sass/pages/SettingsPage/SettingsPage.css';\r\nimport SettingsContentTable from './components/SettingsContentTable';\r\nimport SettingsHeader from './components/SettingsHeader';\r\n\r\nfunction SettingsPage() {\r\n\r\n  useEffect((): void => {\r\n    document.title = `${PLATFORM_NAME} - Ustawienia`;\r\n  }, []);\r\n\r\n  return (\r\n      <main className=\"main-settings-page\">\r\n        <SettingsHeader/>\r\n        <div className=\"main-settings-page__content\">\r\n          <SettingsContentTable/>\r\n        </div>\r\n      </main>\r\n  )\r\n}\r\n\r\nexport default SettingsPage;","import React from 'react';\r\nimport { employeeDataType } from '../../../types/employeeDataType';\r\nimport { dateStringToLocalString } from '../../../utils/dateStringToLocalString';\r\n\r\nfunction EmployeeInfoContent(props: {selectedEmployeeData: employeeDataType | null}) {\r\n\r\n    return (\r\n        <div className=\"main-employee-info-page__content\">\r\n          <div className=\"content__element content__element--three-width\">\r\n            <div className=\"element__title\">ID | Imię i nazwisko</div>\r\n            <div className=\"element__value\">{props.selectedEmployeeData != null ? `${props.selectedEmployeeData.employeeId} | ${props.selectedEmployeeData.employeeName}` : ''}</div>\r\n          </div>\r\n          <div className={props.selectedEmployeeData != null ? props.selectedEmployeeData.employeeStatus ? 'content__element content__element--active' : 'content__element content__element--inactive' : 'content__element'}>\r\n            <div className=\"element__title\">Status pracownika</div>\r\n            <div className=\"element__value\">{props.selectedEmployeeData != null ? props.selectedEmployeeData.employeeStatus ? 'Aktywny' : 'Nieaktywny' : ''}</div>\r\n          </div>\r\n          <div className=\"content__element content__element--two-width\">\r\n            <div className=\"element__title\">Stanowisko</div>\r\n            <div className=\"element__value\">{props.selectedEmployeeData != null ? props.selectedEmployeeData.employeePosition : ''}</div>\r\n          </div>\r\n          <div className=\"content__element content__element--two-width\">\r\n            <div className=\"element__title\">Kod pracownika</div>\r\n            <div className=\"element__value\">{props.selectedEmployeeData != null ? props.selectedEmployeeData.employeeCode : ''}</div>\r\n          </div>\r\n          <div className=\"content__element content__element--two-width\">\r\n            <div className=\"element__title\">Dodatkowe informacje</div>\r\n            <div className=\"element__value\">{props.selectedEmployeeData != null ? props.selectedEmployeeData.additionalInformation : ''}</div>\r\n        </div>          \r\n          <div className=\"content__element\">\r\n            <div className=\"element__title\">Data dodania</div>\r\n            <div className=\"element__value\">{props.selectedEmployeeData != null ? dateStringToLocalString(props.selectedEmployeeData.dateAdded) : ''}</div>\r\n        </div>\r\n        <div className=\"content__element\">\r\n            <div className=\"element__title\">Data modyfikacji</div>\r\n            <div className=\"element__value\">{props.selectedEmployeeData != null ? props.selectedEmployeeData.modificationDate != null ? dateStringToLocalString(props.selectedEmployeeData.modificationDate) : '' : ''}</div>\r\n        </div>\r\n        </div>\r\n      )\r\n}\r\n\r\nexport default EmployeeInfoContent;","import React from 'react';\r\nimport { NavigateFunction, useNavigate } from 'react-router-dom';\r\nimport { useAppDispatch, useAppSelector } from '../../../hooks/redux-hooks';\r\nimport { OPEN_ARGEEMENT_MODAL_WINDOW, OPEN_EDIT_MODAL_WINDOW } from '../../../redux/slices/globalSettingsSlice';\r\nimport { AppDispatch, RootState } from '../../../redux/store';\r\nimport { employeeDataType } from '../../../types/employeeDataType';\r\nimport { employeeresPageSliceType } from '../../../types/slices/employeeresPageSliceTypes';\r\n\r\nfunction EmployeeInfoHeader(props: {selectedEmployeeData: employeeDataType | null}) {\r\n    const navigate: NavigateFunction = useNavigate();\r\n\r\n    const employeeresData: employeeresPageSliceType = useAppSelector((state: RootState) => state.employeeresPage);\r\n    const dispatch: AppDispatch = useAppDispatch();\r\n\r\n    const editSelectedEmployee = (employeeElement: employeeDataType): void => {\r\n      dispatch(OPEN_EDIT_MODAL_WINDOW({type: 'edit-employee', element: employeeElement}));\r\n    }\r\n  \r\n    const deleteSelectedEmployee = (currentEmployeeId: number): void => {\r\n      const [employeeElement]: employeeDataType[] = employeeresData.value.filter((e: employeeDataType) => e.employeeId === currentEmployeeId)\r\n      const employeeElementIndex: number = employeeresData.value.indexOf(employeeElement)\r\n      dispatch(OPEN_ARGEEMENT_MODAL_WINDOW({type: 'delete-agreement', dataType: 'employeeresData', index: (employeeElementIndex)}))\r\n    }\r\n  \r\n    return (\r\n      <div className=\"main-employee-info-page__header\">\r\n        <div className=\"header__group\">\r\n          <div className=\"group__title\">\r\n            <span className=\"material-symbols-outlined\">groups</span>\r\n            Pracownik - {props.selectedEmployeeData != null ? props.selectedEmployeeData.employeeName : ''}\r\n          </div>\r\n          <div className=\"group__nav\">\r\n            <button className=\"nav__button\" onClick={() => {editSelectedEmployee(props.selectedEmployeeData!)}}>\r\n              <span className=\"material-symbols-outlined\">edit</span>\r\n              Edytuj\r\n            </button>\r\n            <button className=\"nav__button\" onClick={() => {deleteSelectedEmployee(props.selectedEmployeeData!.employeeId)}}>\r\n              <span className=\"material-symbols-outlined\">delete</span>\r\n              Usuń\r\n            </button>\r\n            <button className=\"nav__button\" onClick={() => {navigate('/platform/employeeres')}}>\r\n              <span className=\"material-symbols-outlined\">settings</span>\r\n              Wróć\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div className=\"header__text\">\r\n          Lorem ipsum dolor, sit amet consectetur adipisicing elit. Temporibus\r\n          nam, ducimus quae deleniti recusandae sed corrupti dicta ullam autem\r\n          cupiditate? Quae ex aliquam dignissimos fuga, mollitia repudiandae\r\n          quaerat tempore rem cum explicabo fugiat cupiditate perferendis possimus\r\n          voluptatibus temporibus laudantium libero incidunt tempora minus\r\n          praesentium facilis saepe illo quidem. Consectetur est distinctio\r\n          voluptatum iure iste molestiae mollitia doloremque et repellendus alias\r\n          autem unde, magni inventore quae id illum. Facere est blanditiis enim,\r\n          laudantium eos nostrum iusto, quas odit corporis corrupti fugit totam et\r\n          sunt impedit nihil ducimus recusandae veniam ipsa commodi.\r\n        </div>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default EmployeeInfoHeader;","import React, { useEffect, useState } from 'react';\r\nimport { NavigateFunction, useNavigate, useParams } from 'react-router-dom';\r\nimport LoadingSpinner from '../../components/LoadingSpinner/LoadingSpinner';\r\nimport { PLATFORM_NAME } from '../../data/staticPlatformData';\r\nimport { useAppDispatch, useAppSelector } from '../../hooks/redux-hooks';\r\nimport { getEmployeePositionsData } from '../../redux/slices/employeePositionsSlice';\r\nimport { getEmployeeresData } from '../../redux/slices/employeeresPageSlice';\r\nimport { AppDispatch, RootState } from '../../redux/store';\r\nimport '../../sass/pages/EmployeeInfoPage/EmployeeInfoPage.css';\r\nimport { employeeDataType } from '../../types/employeeDataType';\r\nimport { employeePositionsSliceType } from '../../types/slices/employeePositionsSliceTypes';\r\nimport { employeeresPageSliceType } from '../../types/slices/employeeresPageSliceTypes';\r\nimport EmployeeInfoContent from './components/EmployeeInfoContent';\r\nimport EmployeeInfoHeader from './components/EmployeeInfoHeader';\r\n\r\nfunction EmployeeInfoPage() {\r\n  const { id } = useParams();\r\n  const navigate: NavigateFunction = useNavigate();\r\n\r\n  const employeeresData: employeeresPageSliceType = useAppSelector((state: RootState) => state.employeeresPage);\r\n  const employeePositionsData: employeePositionsSliceType = useAppSelector((state: RootState) => state.employeePositions);\r\n  const dispatch: AppDispatch = useAppDispatch();\r\n\r\n  const [selectedEmployeeData, setSelectedEmployeeData] = useState<employeeDataType | null>(null);\r\n\r\n  useEffect((): void => {\r\n    if (employeeresData.loading == false && employeeresData.value.length > 0) {\r\n      if (id != undefined) {\r\n        const [selectedEmployeeDataElement]: employeeDataType[] = employeeresData.value.filter((e: employeeDataType) => e.employeeId == parseInt(id));\r\n\r\n        if (selectedEmployeeDataElement) {\r\n          setSelectedEmployeeData(selectedEmployeeDataElement);\r\n        } else {\r\n          navigate(\"/error\");\r\n        }\r\n      } else {\r\n        navigate(\"/error\");\r\n      }\r\n    } else {\r\n    }\r\n  }, [employeeresData.value]);\r\n\r\n  useEffect((): void => {\r\n    dispatch(getEmployeeresData());\r\n    dispatch(getEmployeePositionsData());\r\n    document.title = `${PLATFORM_NAME} - Informacje o pracowniku`;\r\n  }, []);\r\n\r\n  return (\r\n    <main className={employeeresData.loading || employeeresData.error != null || employeePositionsData.loading || employeePositionsData.error != null\r\n      ? \"main-employee-info-page main-employee-info-page--content-center\"\r\n      : \"main-employee-info-page\"}>\r\n      {employeeresData.loading || employeePositionsData.loading ? (\r\n        <LoadingSpinner />\r\n      ) : employeeresData.error != null || employeePositionsData.error != null ? (\r\n        employeeresData.error || employeePositionsData.error\r\n      ) : (\r\n        <>\r\n          <EmployeeInfoHeader selectedEmployeeData={selectedEmployeeData}/>\r\n          <EmployeeInfoContent selectedEmployeeData={selectedEmployeeData}/>\r\n        </>\r\n      )}\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default EmployeeInfoPage;","import React, { useEffect, useState } from 'react';\r\nimport { useAppDispatch } from '../../../hooks/redux-hooks';\r\nimport { SET_EMPLOYEERES_FILTER_VALUE, SET_EMPLOYEERES_SERACH_VALUE, SET_EMPLOYEERES_SORT_VALUE } from '../../../redux/slices/employeeresPageSlice';\r\nimport { AppDispatch } from '../../../redux/store';\r\n\r\nfunction EmployeeresContentHeader() {\r\n  const dispatch: AppDispatch = useAppDispatch();\r\n\r\n  const [searchValue, setSearchValue] = useState<string>();\r\n\r\n  const selectSearchValue = (): void => {\r\n    dispatch(SET_EMPLOYEERES_SERACH_VALUE(searchValue))\r\n  };\r\n\r\n  const selectFilterValue = (e: React.ChangeEvent<HTMLSelectElement>): void => {\r\n    dispatch(SET_EMPLOYEERES_FILTER_VALUE(e.target.value))\r\n  };\r\n\r\n  const selectSortValue = (e: React.ChangeEvent<HTMLSelectElement>): void => {\r\n    dispatch(SET_EMPLOYEERES_SORT_VALUE(e.target.value))\r\n  };\r\n\r\n  useEffect((): void => {\r\n    if (searchValue == '') {\r\n      dispatch(SET_EMPLOYEERES_SERACH_VALUE(''))\r\n    }\r\n  }, [searchValue]);\r\n\r\n  useEffect((): void => {\r\n    setSearchValue('')\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"main-content__header\">\r\n      <div className=\"header__group\">\r\n        <div className=\"group__element-with-icon\">\r\n          <input type=\"text\" className=\"group__input\" placeholder=\"Szukaj...\" onChange={(e) => {setSearchValue(e.target.value)}}/>\r\n          <span className=\"material-symbols-outlined\">search</span>\r\n        </div>\r\n        <input type=\"button\" className=\"group__button\" value=\"Szukaj\" onClick={() => {selectSearchValue()}}/>\r\n      </div>\r\n      <div className=\"header__group\">\r\n        <label className=\"group__label\">\r\n          Filtrowanie widoku\r\n          <div className=\"group__element-with-icon\">\r\n            <select className=\"group__select\" onChange={(e) => {selectFilterValue(e)}}>\r\n              <option value=\"default\">Domyślnie</option>\r\n              <option value=\"active-employeeres\">Aktywny pracownicy</option>\r\n              <option value=\"inactive-employeeres\">Nieaktywny pracownicy</option>\r\n            </select>\r\n            <span className=\"material-symbols-outlined\">arrow_drop_down</span>\r\n          </div>\r\n        </label>\r\n        <label className=\"group__label\">\r\n          Sortowanie widoku\r\n          <div className=\"group__element-with-icon\">\r\n            <select className=\"group__select\" onChange={(e) => {selectSortValue(e)}}>\r\n              <option value=\"default\">Domyślnie</option>\r\n              <option value=\"name-employee-sort-up\">Nazwa pracownika (rosnąco)</option>\r\n              <option value=\"name-employee-sort-down\">Nazwa pracownika (malejąco)</option>\r\n              <option value=\"oldest-date-added\">Od najstarszej daty dodania</option>\r\n              <option value=\"latest-date-added\">Od najnowszej daty dodania</option>\r\n            </select>\r\n            <span className=\"material-symbols-outlined\">arrow_drop_down</span>\r\n          </div>\r\n        </label>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default EmployeeresContentHeader;","import React, { useEffect } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { EMPLOYEERES_LSTORAGE_NAME } from '../../../data/staticPlatformData';\r\nimport { useAppDispatch, useAppSelector } from '../../../hooks/redux-hooks';\r\nimport { OPEN_ARGEEMENT_MODAL_WINDOW, OPEN_EDIT_MODAL_WINDOW } from '../../../redux/slices/globalSettingsSlice';\r\nimport { AppDispatch, RootState } from '../../../redux/store';\r\nimport { employeeDataType } from '../../../types/employeeDataType';\r\nimport { employeeresFilterValueType, employeeresPageSliceType, employeeresSortValueType } from '../../../types/slices/employeeresPageSliceTypes';\r\nimport { dateStringToDateLocalString } from '../../../utils/dateStringToDateLocalString';\r\nimport { saveToLocalstorage } from '../../../utils/saveToLocalStorage';\r\nimport { shortenedTextFormat } from '../../../utils/shortenedTextFormat';\r\n\r\nfunction EmployeeresContentTable() {\r\n  const employeeresData: employeeresPageSliceType = useAppSelector((state: RootState) => state.employeeresPage);\r\n\r\n  const employeeresPageSearchValue: string = employeeresData.pageData.searchValue;\r\n  const employeeresPageFilterValue: employeeresFilterValueType = employeeresData.pageData.filterValue;\r\n  const employeeresPageSortValue: employeeresSortValueType = employeeresData.pageData.sortValue;\r\n\r\n  const dispatch: AppDispatch = useAppDispatch();\r\n\r\n  const editSelectedEmployee = (employeeElement: employeeDataType): void => {\r\n    dispatch(OPEN_EDIT_MODAL_WINDOW({type: 'edit-employee', element: employeeElement}));\r\n  };\r\n\r\n  const deleteSelectedEmployee= (employeeId: number): void => {\r\n    const [employeeElement]: employeeDataType[] = employeeresData.value.filter((e: employeeDataType) => e.employeeId === employeeId);\r\n    const employeeElementIndex: number = employeeresData.value.indexOf(employeeElement);\r\n    dispatch(OPEN_ARGEEMENT_MODAL_WINDOW({type: 'delete-agreement', dataType: 'employeeresData', index: (employeeElementIndex)}));\r\n  };\r\n\r\n  const getDataViewSearchValue = (data: employeeDataType[]) => {\r\n    const newData: employeeDataType[] = data.filter((e: employeeDataType) => e.employeeName.toUpperCase().includes(employeeresPageSearchValue.toUpperCase()));\r\n    return newData\r\n  };\r\n\r\n  const getDataViewFitlering = (data: employeeDataType[]) => {\r\n    switch (employeeresPageFilterValue) {\r\n      case \"active-employeeres\":\r\n        const dataActiveEmployeeres: employeeDataType[] = data.filter((e: employeeDataType) => e.employeeStatus === true)\r\n        return dataActiveEmployeeres\r\n\r\n      case \"inactive-employeeres\":\r\n        const dataInactiveEmployeeres: employeeDataType[] = data.filter((e: employeeDataType) => e.employeeStatus === false)\r\n        return dataInactiveEmployeeres\r\n\r\n      default:\r\n        return data\r\n    }\r\n  };\r\n\r\n  const getDataViewSort = (data: employeeDataType[]) => {\r\n    switch (employeeresPageSortValue) {\r\n      case \"name-employee-sort-up\":\r\n        const dataNameEmployeeSortUp: employeeDataType[] = data.sort((a, b) => a.employeeName.localeCompare(b.employeeName))\r\n        return dataNameEmployeeSortUp\r\n\r\n      case \"name-employee-sort-down\":\r\n        const dataNameEmployeeSortDown: employeeDataType[] = data.sort((a, b) => b.employeeName.localeCompare(a.employeeName))\r\n        return dataNameEmployeeSortDown\r\n      \r\n      case \"oldest-date-added\":\r\n        const dataOldestDateAdded: employeeDataType[] = data.sort((a, b) => Date.parse(a.dateAdded) - Date.parse(b.dateAdded))\r\n        return dataOldestDateAdded\r\n\r\n      case \"latest-date-added\":\r\n        const dataLatestDateAdded: employeeDataType[] = data.sort((a, b) => Date.parse(b.dateAdded) - Date.parse(a.dateAdded))\r\n        return dataLatestDateAdded\r\n\r\n      default:\r\n        const activeEmployeeres: employeeDataType[] = data.filter((e: employeeDataType) => e.employeeStatus === true)\r\n        const inactiveEmployeeres: employeeDataType[] = data.filter((e: employeeDataType) => e.employeeStatus === false)\r\n        const defaultSortData: employeeDataType[] = [...activeEmployeeres, ...inactiveEmployeeres]\r\n        return defaultSortData\r\n    }    \r\n  };\r\n\r\n  const getEmployeeresList = (): employeeDataType[] => {\r\n    let data: employeeDataType[];\r\n    data = getDataViewSearchValue(employeeresData.value);\r\n    data = getDataViewFitlering(data);\r\n    data = getDataViewSort(data);\r\n\r\n    return data\r\n  };\r\n\r\n  const data: employeeDataType[] = getEmployeeresList();\r\n\r\n  const employeeresDataTable = data.map((e: employeeDataType): JSX.Element => {\r\n    return (\r\n      <tr key={e.employeeId} className=\"table-tr\">\r\n            <td className=\"table-td\">{e.employeeId}</td>\r\n            <td className=\"table-td\">\r\n              <div className={e.employeeStatus ? 'td__status-active' : 'td__status-inactive'}>\r\n                {e.employeeStatus ? 'Aktywny' : 'Nieaktywny'}\r\n              </div>\r\n            </td>\r\n            <td className=\"table-td table-td--primary-style\">{e.employeeName}</td>\r\n            <td className=\"table-td\">{e.employeePosition}</td>\r\n            <td className=\"table-td table-td--long-text-primary table-td--secondary-style\">{shortenedTextFormat(e.additionalInformation)}</td>\r\n            <td className=\"table-td\">{dateStringToDateLocalString(e.dateAdded)}</td>\r\n            <td className=\"table-td\">\r\n              <div className=\"table__buttons-container\">\r\n              <NavLink to={`/platform/employeeres/employee/${e.employeeId}`}>\r\n                <div className=\"table-button\">\r\n                  <span className=\"material-symbols-outlined\">visibility</span>\r\n                </div>\r\n              </NavLink>\r\n              <div className=\"table-button\" onClick={() => {editSelectedEmployee(e)}}>\r\n                <span className=\"material-symbols-outlined\">edit</span>\r\n              </div>\r\n              <div className=\"table-button\" onClick={() => {deleteSelectedEmployee\r\n                (e.employeeId)}}>\r\n                <span className=\"material-symbols-outlined\">delete</span>\r\n              </div>\r\n              </div>\r\n            </td>\r\n          </tr>\r\n    )\r\n  });\r\n\r\n  useEffect((): void => {\r\n      getEmployeeresList()\r\n  }, [employeeresPageSearchValue, employeeresPageFilterValue, employeeresPageSortValue]);\r\n\r\n  useEffect((): void => {\r\n    if (!employeeresData.loading) {\r\n    saveToLocalstorage(EMPLOYEERES_LSTORAGE_NAME, employeeresData.value);\r\n    } \r\n  }, [employeeresData.value]);\r\n\r\n  return (\r\n    <div className=\"main-content__table-container\">\r\n      <table className=\"table-container__table\">\r\n        <thead>\r\n          <tr>\r\n            <th className=\"table-th\">ID</th>\r\n            <th className=\"table-th\">Status</th>\r\n            <th className=\"table-th\">Imię i nazwisko</th>\r\n            <th className=\"table-th\">Stanowisko</th>\r\n            <th className=\"table-th\">Dodatkowe informacje</th>\r\n            <th className=\"table-th\">Data dodania</th>\r\n            <th className=\"table-th\">Opcje</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {employeeresDataTable}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default EmployeeresContentTable;","import React from 'react';\r\nimport PrintButton from '../../../components/PrintButton/PrintButton';\r\nimport { useAppDispatch } from '../../../hooks/redux-hooks';\r\nimport { OPEN_MODAL_WINDOW } from '../../../redux/slices/globalSettingsSlice';\r\nimport { AppDispatch } from '../../../redux/store';\r\n\r\nfunction EmployeeresHeader() {\r\n  const dispatch: AppDispatch = useAppDispatch();\r\n\r\n  const addEmployee = (): void => {\r\n    dispatch(OPEN_MODAL_WINDOW('add-employee'))\r\n  };\r\n\r\n  return (\r\n    <div className=\"main-employeeres-page__header\">\r\n        <div className=\"header__title\">\r\n          <span className=\"material-symbols-outlined\">group</span>\r\n          Pracownicy\r\n        </div>\r\n        <div className=\"header__nav\">\r\n          <button className=\"nav__button\" onClick={() => {addEmployee()}}>\r\n            <span className=\"material-symbols-outlined\">add_circle</span>\r\n            Dodaj pracownika\r\n          </button>\r\n          <PrintButton/>\r\n        </div>\r\n      <div className=\"header__text\">\r\n        Lorem ipsum dolor, sit amet consectetur adipisicing elit. Temporibus\r\n        nam, ducimus quae deleniti recusandae sed corrupti dicta ullam autem\r\n        cupiditate? Quae ex aliquam dignissimos fuga, mollitia repudiandae\r\n        quaerat tempore rem cum explicabo fugiat cupiditate perferendis possimus\r\n        voluptatibus temporibus laudantium libero incidunt tempora minus\r\n        praesentium facilis saepe illo quidem. Consectetur est distinctio\r\n        voluptatum iure iste molestiae mollitia doloremque et repellendus alias\r\n        autem unde, magni inventore quae id illum. Facere est blanditiis enim,\r\n        laudantium eos nostrum iusto, quas odit corporis corrupti fugit totam et\r\n        sunt impedit nihil ducimus recusandae veniam ipsa commodi.\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default EmployeeresHeader;","import React, { useEffect } from \"react\";\r\nimport LoadingSpinner from \"../../components/LoadingSpinner/LoadingSpinner\";\r\nimport { PLATFORM_NAME } from \"../../data/staticPlatformData\";\r\nimport { useAppDispatch, useAppSelector } from \"../../hooks/redux-hooks\";\r\nimport { getEmployeePositionsData } from \"../../redux/slices/employeePositionsSlice\";\r\nimport { getEmployeeresData, SET_EMPLOYEERES_FILTER_VALUE, SET_EMPLOYEERES_SERACH_VALUE, SET_EMPLOYEERES_SORT_VALUE } from \"../../redux/slices/employeeresPageSlice\";\r\nimport { AppDispatch, RootState } from \"../../redux/store\";\r\nimport \"../../sass/pages/EmployeeresPage/EmployeeresPage.css\";\r\nimport { employeePositionsSliceType } from \"../../types/slices/employeePositionsSliceTypes\";\r\nimport { employeeresPageSliceType } from \"../../types/slices/employeeresPageSliceTypes\";\r\nimport EmployeeresContentHeader from \"./components/EmployeeresContentHeader\";\r\nimport EmployeeresContentTable from \"./components/EmployeeresContentTable\";\r\nimport EmployeeresHeader from \"./components/EmployeeresHeader\";\r\n\r\nfunction EmployeeresPage() {\r\n  const employeeresData: employeeresPageSliceType = useAppSelector((state: RootState) => state.employeeresPage);\r\n  const employeePositionsData: employeePositionsSliceType = useAppSelector((state: RootState) => state.employeePositions);\r\n\r\n  const dispatch: AppDispatch = useAppDispatch();\r\n\r\n  useEffect((): void => {\r\n    dispatch(SET_EMPLOYEERES_SERACH_VALUE(''));\r\n    dispatch(SET_EMPLOYEERES_FILTER_VALUE(''));\r\n    dispatch(SET_EMPLOYEERES_SORT_VALUE(''));\r\n    dispatch(getEmployeeresData());\r\n    dispatch(getEmployeePositionsData());\r\n    document.title = `${PLATFORM_NAME} - Pracownicy`;\r\n  }, []);\r\n\r\n  return (\r\n    <main\r\n      className={\r\n        employeeresData.loading || employeeresData.error != null || employeePositionsData.loading || employeePositionsData.error != null\r\n          ? \"main-employeeres-page main-employeeres-page--content-center\"\r\n          : \"main-employeeres-page\"\r\n      }\r\n    >\r\n      {employeeresData.loading || employeePositionsData.loading ? (\r\n        <LoadingSpinner />\r\n      ) : employeeresData.error != null || employeePositionsData.error != null ? (\r\n        employeeresData.error || employeePositionsData.error\r\n      ) : (\r\n        <>\r\n          <EmployeeresHeader />\r\n          <div className=\"main-employeeres-page__main-content\">\r\n            <EmployeeresContentHeader />\r\n            <EmployeeresContentTable />\r\n          </div>\r\n        </>\r\n      )}\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default EmployeeresPage;\r\n","import React, { useEffect } from \"react\";\r\nimport { NOTIFICATION_LSTORAGE_NAME } from \"../../../../data/staticPlatformData\";\r\nimport { useAppDispatch, useAppSelector } from \"../../../../hooks/redux-hooks\";\r\nimport { CLEAR_NOTIFICATIONS_DATA, SET_NOTIFICATION_READ_STATUS } from \"../../../../redux/slices/globalSettingsSlice\";\r\nimport { AppDispatch, RootState } from \"../../../../redux/store\";\r\nimport { notificationDataType } from \"../../../../types/notificationDataType\";\r\nimport { globalSettingsSliceType } from \"../../../../types/slices/globalSettingsSliceTypes\";\r\nimport { saveToLocalstorage } from \"../../../../utils/saveToLocalStorage\";\r\n\r\nfunction NotificationBlock(props: { viewNotification: boolean, viewNotificationHandler: Function }) {\r\n  const globalSettingsData: globalSettingsSliceType = useAppSelector((state: RootState) => state.globalSettings);\r\n  const notificationsData: notificationDataType[] = globalSettingsData.notification.notificationsData;\r\n\r\n  const dispatch: AppDispatch = useAppDispatch();\r\n\r\n  const data: notificationDataType[] = notificationsData.slice().sort((a, b) => new Date(b.notificationDate).getTime() - new Date(a.notificationDate).getTime());\r\n\r\n  const setNotificationReadStatus = (notificationId: number): void => {\r\n    const [notificationElement]: notificationDataType[] = notificationsData.filter((e) => e.notificationId === notificationId);\r\n    const index: number = notificationsData.indexOf(notificationElement);\r\n\r\n    dispatch(SET_NOTIFICATION_READ_STATUS(index));\r\n  }\r\n\r\n  const clearNotificationsData = (): void => {\r\n    dispatch(CLEAR_NOTIFICATIONS_DATA());\r\n    localStorage.setItem(NOTIFICATION_LSTORAGE_NAME, JSON.stringify([]));\r\n  }\r\n\r\n  const notificationsList = data.map((e): JSX.Element => {\r\n    return (\r\n      <div key={e.notificationId}\r\n        className={\r\n          e.seenNotification\r\n            ? \"content__block\"\r\n            : \"content__block content__block--unread\"\r\n        }\r\n        onClick={() => setNotificationReadStatus(e.notificationId)}\r\n      >\r\n        <div className=\"content__title\">\r\n          <div\r\n            className={\r\n              e.seenNotification\r\n                ? \"content__status\"\r\n                : \"content__status content__status--unread\"\r\n            }\r\n          />\r\n          {e.notificationName}\r\n        </div>\r\n        <div className=\"content__date\">\r\n          Data: {new Date(e.notificationDate).toLocaleDateString()} {new Date(e.notificationDate).toLocaleTimeString()}\r\n        </div>\r\n      </div>\r\n    );\r\n  });\r\n\r\n  useEffect((): void => {\r\n    if (data.length > 0) {\r\n      saveToLocalstorage(NOTIFICATION_LSTORAGE_NAME, data);\r\n    }\r\n  }, [data]);\r\n\r\n  return (\r\n    <div\r\n      className={\r\n        props.viewNotification\r\n          ? \"element__notification-container element__notification-container--open\"\r\n          : \"element__notification-container\"\r\n      }\r\n    >\r\n      <div className=\"notification-container__header\">\r\n        <div className=\"header__group\">\r\n          <div className=\"group__title\">\r\n            <span className=\"material-symbols-outlined\">help</span>\r\n            Powiadomienia\r\n          </div>\r\n          <button className=\"group__button\" onClick={() => props.viewNotificationHandler()}>\r\n            <span className=\"material-symbols-outlined\">close</span>\r\n          </button>\r\n        </div>\r\n        <div className=\"header__text\">\r\n          Kliknij w powiadomienie, aby oznaczyć je jako przeczytane\r\n          lub nieprzeczytane\r\n        </div>\r\n        <button className=\"header__button\" onClick={() => clearNotificationsData()}>\r\n          Wyczyść powiadomienia\r\n        </button>\r\n      </div>\r\n      <div className=\"notification-container__content\">{notificationsList}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NotificationBlock;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { PLATFORM_THEME_LSTORAGE_NAME } from \"../../../../data/staticPlatformData\";\r\nimport { saveToLocalstorage } from \"../../../../utils/saveToLocalStorage\";\r\n\r\nfunction ProfileSettingsBlock(props: { viewProfileSettings: boolean, viewProfileSettingsHandler: Function }) {\r\n\r\n  const [platformTheme, setPlatformTheme] = useState<string>(\"\")\r\n\r\n  const changePlatformTheme = (): void => {\r\n    if (platformTheme == \"dark\") {\r\n      document.documentElement.setAttribute(\"data-theme\", \"light\");\r\n      saveToLocalstorage(PLATFORM_THEME_LSTORAGE_NAME, 'light');\r\n      setPlatformTheme(\"light\");\r\n\r\n    } else {\r\n      document.documentElement.setAttribute(\"data-theme\", \"dark\");\r\n      saveToLocalstorage(PLATFORM_THEME_LSTORAGE_NAME, 'dark');\r\n      setPlatformTheme(\"dark\");\r\n    }\r\n  };\r\n\r\n  useEffect((): void => {\r\n    const localStoragePlatformTheme: string | null = localStorage.getItem(PLATFORM_THEME_LSTORAGE_NAME);\r\n\r\n    if (localStoragePlatformTheme) {\r\n      const themeValue: string = JSON.parse(localStoragePlatformTheme);\r\n      setPlatformTheme(themeValue);\r\n      \r\n    } else {\r\n      setPlatformTheme(\"dark\");\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      className={\r\n        props.viewProfileSettings\r\n          ? \"element__profile-settings-container element__profile-settings-container--open\"\r\n          : \"element__profile-settings-container\"\r\n      }\r\n    >\r\n      <div className=\"profile-settings__header\">\r\n        <div className=\"header__title\">\r\n          <span className=\"material-symbols-outlined\">help</span>\r\n          Profil\r\n        </div>\r\n        <button className=\"header__button\" onClick={() => props.viewProfileSettingsHandler()}>\r\n          <span className=\"material-symbols-outlined\">close</span>\r\n        </button>\r\n      </div>\r\n      <div className=\"profile-settings__content\">\r\n        <div className=\"content__element content__element--disabled\">\r\n          <span className=\"material-symbols-outlined\">settings</span>\r\n          Ustawienia profilu\r\n        </div>\r\n        <label\r\n          className=\"content__element\"\r\n          onClick={() => changePlatformTheme()}\r\n        >\r\n          <span className=\"material-symbols-outlined\">settings</span>\r\n          <div className=\"element__theme\">\r\n            <div className=\"theme__title\">Tryb platformy</div>\r\n            <div className=\"theme__status\">\r\n              {platformTheme == \"dark\" ? \"Tryb ciemny\" : \"Tryb jasny\"}\r\n            </div>\r\n          </div>\r\n        </label>\r\n        <div className=\"content__element content__element--disabled\">\r\n          <span className=\"material-symbols-outlined\">settings</span>\r\n          Wyloguj\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProfileSettingsBlock;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { useAppDispatch, useAppSelector } from \"../../../../hooks/redux-hooks\";\r\nimport { OPEN_SIDEBAR } from \"../../../../redux/slices/globalSettingsSlice\";\r\nimport { AppDispatch, RootState } from \"../../../../redux/store\";\r\nimport { notificationDataType } from \"../../../../types/notificationDataType\";\r\nimport { globalSettingsSliceType } from \"../../../../types/slices/globalSettingsSliceTypes\";\r\nimport NotificationBlock from \"../NotificationBlock/NotificationBlock\";\r\nimport ProfileSettingsBlock from \"../ProfileSettingsBlock/ProfileSettingsBlock\";\r\n\r\nfunction HeaderNavigation() {\r\n  const globalSettingsData: globalSettingsSliceType = useAppSelector((state: RootState) => state.globalSettings);\r\n  const notificationsData: notificationDataType[] = globalSettingsData.notification.notificationsData;\r\n  const dispatch: AppDispatch = useAppDispatch();\r\n\r\n  const [notificationQuantity, setNotificationQuantity] = useState<number>(0);\r\n\r\n  const [viewNotification, setViewNotification] = useState<boolean>(false);\r\n  const [viewProfileSettings, setViewProfileSettings] = useState<boolean>(false);\r\n\r\n  const viewNotificationHandler = (): void => {\r\n    setViewNotification((preValue: boolean) => !preValue);\r\n  }\r\n\r\n  const viewProfileSettingsHandler = (): void => {\r\n    setViewProfileSettings((prevValue: boolean) => !prevValue);\r\n  }\r\n\r\n  useEffect((): void => {\r\n    const newNotification: notificationDataType[] = notificationsData.filter((e: notificationDataType) => e.seenNotification === false);\r\n    setNotificationQuantity(newNotification.length);\r\n  }, [notificationsData]);\r\n\r\n  return (\r\n    <div className=\"header__nav\">\r\n      <NavLink to=\"/platform\" className=\"nav__element\">\r\n        <span className=\"material-symbols-outlined\">home</span>\r\n      </NavLink>\r\n      <div\r\n        className={\r\n          viewNotification\r\n            ? \"nav__element nav__element--active\"\r\n            : \"nav__element\"\r\n        }\r\n      >\r\n        <div\r\n          className=\"nav__element__content\"\r\n          onClick={() => viewNotificationHandler()}\r\n        >\r\n          <div className=\"content__notification-value\">\r\n            {notificationQuantity > 0 ? notificationQuantity : null}\r\n          </div>\r\n          <span className=\"material-symbols-outlined\">notifications</span>\r\n        </div>\r\n        <NotificationBlock viewNotification={viewNotification} viewNotificationHandler={viewNotificationHandler}/>\r\n      </div>\r\n      <div\r\n        className=\"nav__element nav__element--menu-mobile\"\r\n        onClick={() => {\r\n          dispatch(OPEN_SIDEBAR());\r\n        }}\r\n      >\r\n        <span className=\"material-symbols-outlined\">menu</span>\r\n      </div>\r\n      <div\r\n        className={\r\n          viewProfileSettings\r\n            ? \"nav__element nav__element--user nav__element--active\"\r\n            : \"nav__element nav__element--user\"\r\n        }\r\n      >\r\n        <div\r\n          className=\"nav__element__content\"\r\n          onClick={() => viewProfileSettingsHandler()}\r\n        >\r\n          <div className=\"content__username__avatar\"></div>\r\n          <div className=\"content__username\">\r\n            <div className=\"username__name\">Witaj, Adam Kowalski</div>\r\n            <div className=\"username__role\">Administrator</div>\r\n          </div>\r\n          <span className=\"material-symbols-outlined\">arrow_drop_down</span>\r\n        </div>\r\n        <ProfileSettingsBlock viewProfileSettings={viewProfileSettings} viewProfileSettingsHandler={viewProfileSettingsHandler}/>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HeaderNavigation;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Location, NavigateFunction, useLocation, useNavigate } from \"react-router-dom\";\r\nimport { useAppDispatch } from \"../../../../hooks/redux-hooks\";\r\nimport { getNotificationsData } from \"../../../../redux/slices/globalSettingsSlice\";\r\nimport { AppDispatch } from \"../../../../redux/store\";\r\n\r\nfunction HeaderSearchForm() {\r\n  const [searchValue, setSearchValue] = useState<string>(\"\");\r\n  const [isMeetingsPage, setIsMeetingsPage] = useState<boolean>(false);\r\n\r\n  const dispatch: AppDispatch = useAppDispatch();\r\n\r\n  const navigate: NavigateFunction = useNavigate();\r\n  const location: Location = useLocation();\r\n\r\n  useEffect((): void => {\r\n    if (\r\n      location.pathname.endsWith(\"/meetings\") || location.pathname.includes(\"/meetings/\")\r\n    ) {\r\n      setIsMeetingsPage(true);\r\n    } else {\r\n      setIsMeetingsPage(false);\r\n    }\r\n  }, [location.pathname]);\r\n\r\n  useEffect((): void => {\r\n    dispatch(getNotificationsData())\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"header__search-form\">\r\n      <form className=\"search-form\">\r\n        <input\r\n          className=\"search-form__input\"\r\n          type=\"text\"\r\n          placeholder=\"Wyszukaj spotkania...\"\r\n          disabled={isMeetingsPage}\r\n          value={searchValue}\r\n          onChange={(e) => setSearchValue(e.target.value)}\r\n        />\r\n        <input\r\n          type=\"button\"\r\n          className=\"search-form__button\"\r\n          value=\"Szukaj\"\r\n          disabled={isMeetingsPage}\r\n          onClick={() => {\r\n            isMeetingsPage ? navigate(\"#\") : navigate(`/platform/meetings/${searchValue}`), setSearchValue('')}}\r\n        />\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HeaderSearchForm;\r\n","import React from \"react\";\r\nimport HeaderNavigation from \"./components/HeaderNavigation/HeaderNavigation\";\r\nimport HeaderSearchForm from \"./components/HeaderSearchForm/HeaderSearchForm\";\r\n\r\nfunction Header() {\r\n  return (\r\n    <header className=\"header\">\r\n      <HeaderSearchForm />\r\n      <HeaderNavigation />\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react'\r\nimport { NavLink } from 'react-router-dom';\r\nimport { useAppDispatch } from '../../../hooks/redux-hooks';\r\nimport { CLOSE_SIDEBAR } from '../../../redux/slices/globalSettingsSlice';\r\nimport { AppDispatch } from '../../../redux/store';\r\n\r\nfunction SidebarMenuElement(props: {linkText: string; iconName: string; elementName: string; exactMatch: boolean}) {\r\n    \r\n    const dispatch: AppDispatch = useAppDispatch();\r\n\r\n  return (\r\n    <NavLink\r\n        to={props.linkText}\r\n        className={({ isActive }) =>\r\n        isActive ? \"menu__element menu__element--active\" : \"menu__element\"\r\n        }\r\n        end={props.exactMatch}\r\n        onClick={() => {\r\n            dispatch(CLOSE_SIDEBAR());\r\n        }}\r\n        >\r\n        <span className=\"material-symbols-outlined\">{props.iconName}</span>\r\n        {props.elementName}\r\n    </NavLink>\r\n  )\r\n}\r\n\r\nexport default SidebarMenuElement","import React, { useEffect, useState } from \"react\";\r\nimport { PLATFORM_NAME } from \"../../data/staticPlatformData\";\r\nimport { useAppDispatch, useAppSelector } from \"../../hooks/redux-hooks\";\r\nimport { CLOSE_SIDEBAR } from \"../../redux/slices/globalSettingsSlice\";\r\nimport { AppDispatch, RootState } from \"../../redux/store\";\r\nimport { globalSettingsSliceType } from \"../../types/slices/globalSettingsSliceTypes\";\r\nimport { valueLessThanTen } from \"../../utils/valueLessThanTenFormat\";\r\nimport SidebarMenuElement from \"./components/SidebarMenuElement\";\r\n\r\nfunction Sidebar() {\r\n  const globalSettings: globalSettingsSliceType = useAppSelector((state: RootState) => state.globalSettings);\r\n  const dispatch: AppDispatch = useAppDispatch();\r\n\r\n  const [currentDate, setCurrentDate] = useState<Date>(new Date());\r\n  const [sidebarWeekCalendar, setSidebarWeekCalendar] = useState<currentWeekData[]>([]);\r\n\r\n  interface currentWeekData {\r\n    dateDayValue: number;\r\n    dateValue: Date;\r\n  }\r\n\r\n  const shortNamesDayOfWeeks: string[] = [\"PN\", \"WT\", \"ŚR\", \"CZ\", \"PT\", \"SB\", \"ND\"];\r\n\r\n  const changeFirstDayOfWeek = (value: number): number => {\r\n    if (value == 0) {\r\n      return 6;\r\n    } else {\r\n      return value - 1;\r\n    }\r\n  };\r\n\r\n  const convertDayOfNumber = (value: number): number => {\r\n    if (value == 0) {\r\n      return 6;\r\n    } else {\r\n      return value - 1;\r\n    }\r\n  };\r\n\r\n  const generateDataCurrentWeek = (): void => {\r\n    const currentDateValue: Date = new Date();\r\n    const firstDayOfCurrentWeekDate: Date = new Date(new Date().setDate(currentDateValue.getDate() - changeFirstDayOfWeek(currentDateValue.getDay())));\r\n\r\n    const currentWeekData: currentWeekData[] = [];\r\n\r\n    for (let i = 0; i <= 6; i++) {\r\n      currentWeekData.push({\r\n        dateDayValue: i,\r\n        dateValue: new Date(new Date().setDate(firstDayOfCurrentWeekDate.getDate() + i))\r\n      })\r\n    }\r\n\r\n    setSidebarWeekCalendar(currentWeekData);\r\n  };\r\n\r\n  const weekCalendarContent = sidebarWeekCalendar.map((e: currentWeekData): JSX.Element => {\r\n    return (\r\n      <div\r\n        key={e.dateDayValue}\r\n        className={\r\n          e.dateDayValue == convertDayOfNumber(currentDate.getDay())\r\n            ? \"content__calendar-day content__calendar-day--active\"\r\n            : \"content__calendar-day\"\r\n        }\r\n      >\r\n        <div className=\"calendar-day__number\">\r\n          {valueLessThanTen(e.dateValue.getDate())}\r\n        </div>\r\n        <div className=\"calendar-day__name\">\r\n          {shortNamesDayOfWeeks[e.dateDayValue]}\r\n        </div>\r\n      </div>\r\n    );\r\n  });\r\n\r\n  useEffect((): void => {\r\n    generateDataCurrentWeek();\r\n  }, []);\r\n\r\n  useEffect((): void => {\r\n    setInterval((): void => {\r\n      setCurrentDate(new Date());\r\n      generateDataCurrentWeek();\r\n    }, 1000);\r\n  }, []);\r\n\r\n  return (\r\n    <nav className={globalSettings.viewSidebar ? \"sidebar sidebar--open\" : \"sidebar\"}>\r\n      <div className=\"sidebar__logoname\">\r\n        <div className=\"logoname__title\">{PLATFORM_NAME}</div>\r\n        <div className=\"logoname__close-menu\" onClick={() => {dispatch(CLOSE_SIDEBAR())}}>\r\n          <span className=\"material-symbols-outlined\">close</span>\r\n        </div>\r\n      </div>\r\n      <div className=\"sidebar__menu\">\r\n        <SidebarMenuElement linkText=\"/platform\" iconName=\"dashboard\" elementName=\"Dashboard\" exactMatch={true} />\r\n        <SidebarMenuElement linkText=\"platform/meetings\" iconName=\"groups\" elementName=\"Spotkania\" exactMatch={false} />\r\n        <SidebarMenuElement linkText=\"platform/rooms\" iconName=\"meeting_room\" elementName=\"Pomieszczenia\" exactMatch={false} />\r\n        <SidebarMenuElement linkText=\"platform/employeeres\" iconName=\"group\" elementName=\"Pracownicy\" exactMatch={false} />\r\n        <SidebarMenuElement linkText=\"platform/screens\" iconName=\"monitor\" elementName=\"Ekrany\" exactMatch={false} />\r\n        <SidebarMenuElement linkText=\"platform/settings\" iconName=\"settings\" elementName=\"Ustawienia\" exactMatch={false} />\r\n        <SidebarMenuElement linkText=\"platform/help\" iconName=\"help\" elementName=\"Pomoc\" exactMatch={false} />\r\n      </div>\r\n      <div className=\"sidebar__calendar\">\r\n        <div className=\"calendar__header\">\r\n          Aktualnie:\r\n          <div className=\"calendar__datetime\">\r\n            {currentDate.toLocaleString()}\r\n          </div>\r\n        </div>\r\n        <div className=\"calendar__content\">{weekCalendarContent}</div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Sidebar;\r\n","import React from \"react\";\r\n\r\nfunction Footer() {\r\n  return <footer className=\"footer\">Platforma do zarządzania rezerwacją pomieszczeń oraz Digital Signage System</footer>;\r\n}\r\n\r\nexport default Footer;\r\n","import { valueLessThanTen } from \"./valueLessThanTenFormat\";\r\n\r\nexport const dateStringToDateTimeInputFormat = (date: string): string => {\r\n  const dateValue: Date = new Date(date);\r\n\r\n  const day: number = dateValue.getDate();\r\n  const month: number = dateValue.getMonth() + 1;\r\n  const year: number = dateValue.getFullYear();\r\n  const hours: number = dateValue.getHours();\r\n  const mintues: number = dateValue.getMinutes();\r\n\r\n  return `${year}-${valueLessThanTen(month)}-${valueLessThanTen(\r\n    day\r\n  )}T${valueLessThanTen(hours)}:${valueLessThanTen(mintues)}`;\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { useAppDispatch, useAppSelector } from \"../../../../hooks/redux-hooks\";\r\nimport { ADD_EMPLOYEE } from \"../../../../redux/slices/employeeresPageSlice\";\r\nimport { ADD_NOTIFICATION, CLOSE_MODAL_WINDOW } from \"../../../../redux/slices/globalSettingsSlice\";\r\nimport { AppDispatch, RootState } from \"../../../../redux/store\";\r\nimport { employeeDataType } from \"../../../../types/employeeDataType\";\r\nimport { employeePositionDataType } from \"../../../../types/employeePositionDataType\";\r\nimport { dateStringToDateTimeInputFormat } from \"../../../../utils/dateStringToDateTimeInputFormat\";\r\n\r\nfunction AddEmployeeModalWindow() {\r\n  const employeeresData: employeeDataType[] = useAppSelector((state: RootState) => state.employeeresPage.value);\r\n  const employeePositionsData: employeePositionDataType[] = useAppSelector((state: RootState) => state.employeePositions.value);\r\n\r\n  const dispatch: AppDispatch = useAppDispatch();\r\n\r\n  interface newEmployeeElement {\r\n    employeeId: number;\r\n    employeeName: string;\r\n    employeePosition: string;\r\n    employeeStatus: boolean;\r\n    employeeCode: number | null;\r\n    additionalInformation: string;\r\n    dateAdded: string;\r\n    modificationDate: null | string;\r\n  }\r\n\r\n  interface validationElementValue {\r\n    value: string;\r\n    correctValidation: boolean;\r\n  }\r\n\r\n  type validationElementName = 'employeeName' | 'employeePosition' | 'employeeCode';\r\n\r\n  type formValidationElements = {\r\n    [key in validationElementName]: validationElementValue;\r\n  }\r\n\r\n  const generateEmployeeId = (): number => {\r\n    let newIdValue: number;\r\n\r\n    if (employeeresData.length > 0) {\r\n      const [lastIdValue]: number[] = employeeresData\r\n        .map((e: employeeDataType) => e.employeeId)\r\n        .sort((a, b) => b - a);\r\n      newIdValue = lastIdValue + 1;\r\n      return newIdValue;\r\n      \r\n    } else {\r\n      newIdValue = 1;\r\n      return newIdValue;\r\n    }\r\n  };\r\n\r\n  const initialNewEmployeeData: newEmployeeElement = {\r\n    employeeId: generateEmployeeId(),\r\n    employeeName: '',\r\n    employeePosition: '',\r\n    employeeStatus: true,\r\n    employeeCode: null,\r\n    additionalInformation: '',\r\n    dateAdded: new Date().toJSON(),\r\n    modificationDate: null\r\n  };\r\n\r\n  const [newEmployee, setNewEmployee] = useState<newEmployeeElement>(initialNewEmployeeData);\r\n\r\n  const initialFormValidationElementsData: formValidationElements = {\r\n    employeeName: { value: '', correctValidation: true },\r\n    employeePosition: { value: '', correctValidation: true },\r\n    employeeCode: { value: '', correctValidation: true }\r\n  };\r\n\r\n  const [formValidationElements, setFormValidationElements] = useState<formValidationElements>(initialFormValidationElementsData);\r\n\r\n  const [formErrorMessage, setFormErrorMessage] = useState<string>('');\r\n\r\n  const validationErrorsData = Object.values(formValidationElements).filter((key) => key.correctValidation == false && key.value.length > 0).map((key) => [key.value]);\r\n\r\n  const formValidationMessage: JSX.Element = (\r\n    <>\r\n      <p className=\"information-block__title\">{formErrorMessage}</p>\r\n      <ul className=\"information-block__list\">\r\n        {validationErrorsData.map((e, index) => <li key={index} className=\"list__element\">{e}</li>)}\r\n      </ul>\r\n    </>\r\n  );\r\n\r\n  const elementValueHandler = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement>): void => {\r\n    setNewEmployee((prevState: newEmployeeElement) => {return {\r\n      ...prevState,\r\n      [e.target.name]: e.target.value\r\n    }})\r\n  };\r\n\r\n  const elementNumberValueHandler = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement>): void => {\r\n    setNewEmployee((prevState: newEmployeeElement) => {return {\r\n      ...prevState,\r\n      [e.target.name]: parseInt(e.target.value)\r\n    }})\r\n  };\r\n\r\n  const validateEmployeeNameInput = () => {\r\n    if (newEmployee.employeeName == \"\") {\r\n      setFormValidationElements((prevState: formValidationElements) => {\r\n        return {...prevState, employeeName: {value: 'Wprowadź nazwę pracownika', correctValidation: false}}\r\n      });\r\n      return false;\r\n\r\n    } else {\r\n      setFormValidationElements((prevState: formValidationElements) => {\r\n        return {...prevState, employeeName: {value: '', correctValidation: true}}\r\n      });\r\n      return true;\r\n    }\r\n  };\r\n\r\n  const validateEmployeePositionInput = () => {\r\n    if (newEmployee.employeePosition == \"\") {\r\n      setFormValidationElements((prevState: formValidationElements) => {\r\n        return {...prevState, employeePosition: {value: 'Wybierz stanowisko pracownika', correctValidation: false}}\r\n      });\r\n      return false;\r\n\r\n    } else if (employeePositionsData.length == 0) {\r\n      setFormValidationElements((prevState: formValidationElements) => {\r\n        return {...prevState, employeePosition: {value: 'Brak stanowisk do wyświetlenia. Uzupełnij dane, aby wypełnić formularz', correctValidation: false}}\r\n      });\r\n      return false;\r\n\r\n    } else {\r\n      setFormValidationElements((prevState: formValidationElements) => {\r\n        return {...prevState, employeePosition: {value: '', correctValidation: true}}\r\n      });\r\n      return true;\r\n    }\r\n  };\r\n\r\n  const validateEmployeeCodeInput = () => {\r\n    const employeeCodesData = employeeresData.map((e: employeeDataType) => e.employeeCode);\r\n\r\n    if (newEmployee.employeeCode) {\r\n      if (newEmployee.employeeCode.toString().length != 4) {\r\n        setFormValidationElements((prevState: formValidationElements) => {\r\n          return {...prevState, employeeCode: {value: 'Kod musi się składać z 4 liczb', correctValidation: false}}\r\n        });\r\n        return false;\r\n    \r\n      } else if (employeeCodesData.includes(newEmployee.employeeCode)) {\r\n        setFormValidationElements((prevState: formValidationElements) => {\r\n          return {...prevState, employeeCode: {value: 'Kod o takich numerach już istnieje', correctValidation: false}}\r\n        });\r\n        return false;\r\n    \r\n      } else {\r\n        setFormValidationElements((prevState: formValidationElements) => {\r\n          return {...prevState, employeeCode: {value: '', correctValidation: true}}\r\n        });\r\n        return true;\r\n        \r\n      }\r\n\r\n    } else {\r\n      setFormValidationElements((prevState: formValidationElements) => {\r\n        return {...prevState, employeeCode: {value: 'Wprowadź kod pracownika', correctValidation: false}}\r\n      });\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const addEmployeeToList = (): void => {\r\n    const correctValidationEmployeeName: boolean = validateEmployeeNameInput();\r\n    const correctValidationEmployeePosition: boolean = validateEmployeePositionInput();\r\n    const correctValidationEmployeeCode: boolean = validateEmployeeCodeInput();\r\n\r\n    const correctValidation: boolean =\r\n    correctValidationEmployeeName &&\r\n    correctValidationEmployeePosition &&\r\n    correctValidationEmployeeCode\r\n      ? true\r\n      : false;\r\n\r\n    if (correctValidation) {\r\n      setFormErrorMessage('');\r\n      dispatch(ADD_EMPLOYEE(newEmployee));\r\n      dispatch(ADD_NOTIFICATION({notificationName: `Dodano nowego pracownika o nazwie '${newEmployee.employeeName}'`, notificationDate: new Date().toJSON(), seenNotification: false})) ;\r\n      dispatch(CLOSE_MODAL_WINDOW());\r\n    } else {\r\n      setFormErrorMessage('Sprawdź poprawność wypełnienia formularza');\r\n    }\r\n  };\r\n\r\n  const resetFormValues = (): void => {\r\n    setFormValidationElements(initialFormValidationElementsData);\r\n    setFormErrorMessage('');\r\n    setNewEmployee(initialNewEmployeeData);\r\n  };\r\n\r\n  return (\r\n      <>\r\n          <div className=\"window__header\">\r\n              <div className=\"header__title\">Dodawanie pracownika</div>\r\n              <div className=\"header__nav\">\r\n                  <button className=\"nav__button\" onClick={() => {dispatch(CLOSE_MODAL_WINDOW())}}>\r\n                    <span className=\"material-symbols-outlined\">close</span>\r\n                  </button>\r\n              </div>\r\n          </div>\r\n          <div className=\"window__description\">\r\n              Lorem ipsum dolor sit amet consectetur adipisicing elit. Distinctio, aliquid! Recusandae modi nam quis delectus dolore voluptatem, tempora neque quaerat culpa inventore, illo alias debitis necessitatibus libero. Dicta, laborum vitae in impedit delectus itaque iusto.\r\n          </div>\r\n          <div className=\"window__content\">\r\n              <form className=\"content__form\">\r\n                  <label className=\"form__label\">\r\n                      ID\r\n                      <input \r\n                          className=\"form__input-element\" \r\n                          type=\"number\" \r\n                          value={newEmployee.employeeId} \r\n                          disabled \r\n                      />\r\n                  </label>\r\n                  <label className=\"form__label form__label--three-width\">\r\n                      Nazwa pomieszczenia*\r\n                      <div className=\"form__information-block form__information-block--error\">\r\n                          {formValidationElements.employeeName.value}\r\n                      </div>\r\n                      <input\r\n                          className=\"form__input-element\"\r\n                          type=\"text\"\r\n                          value={newEmployee.employeeName}\r\n                          name=\"employeeName\"\r\n                          onChange={elementValueHandler}\r\n                      />\r\n                  </label>\r\n                  <label className=\"form__label form__label--two-width\">\r\n                      Status pracownika*\r\n                      <div className=\"from__group\">\r\n                        <div className={newEmployee.employeeStatus ? \"form__information-block form__information-block--active\" : \"form__information-block form__information-block--default\"}>\r\n                          {newEmployee.employeeStatus ? 'Pracownik aktywny' : 'Pracownik nieaktywny'}\r\n                        </div>\r\n                        <input\r\n                            className=\"form__checkbox-element\"\r\n                            type=\"checkbox\"\r\n                            checked={newEmployee.employeeStatus}\r\n                            name=\"employeeStatus\"\r\n                            onChange={(e) => {setNewEmployee((prevState: newEmployeeElement) => {return {\r\n                              ...prevState,\r\n                              [e.target.name]: e.target.checked\r\n                            }})}}\r\n                        />\r\n                        <div className=\"form__checkbox\">\r\n                          <div className=\"checkbox__value\"></div>\r\n                        </div>\r\n                      </div>\r\n                  </label>\r\n                  <label className=\"form__label form__label--two-width\">\r\n                      Kod pracownika*\r\n                      <div className=\"form__information-block form__information-block--error\">\r\n                          {formValidationElements.employeeCode.value}\r\n                      </div>\r\n                      <input\r\n                          className=\"form__input-element\"\r\n                          type=\"number\"\r\n                          min={0}\r\n                          placeholder={newEmployee.employeeCode === null ? '0000' : ''}\r\n                          name=\"employeeCode\"\r\n                          onChange={elementNumberValueHandler}\r\n                      />\r\n                  </label>\r\n                  <label className=\"form__label form__label--full-width\">\r\n                      Stanowisko pracownika*\r\n                      <div className=\"form__information-block form__information-block--error\">\r\n                          {formValidationElements.employeePosition.value}\r\n                      </div>\r\n                      <div className=\"form__element-with-icon\">\r\n                        <select\r\n                            className=\"form__select-element\"\r\n                            value={newEmployee.employeePosition}\r\n                            name=\"employeePosition\"\r\n                            onChange={elementValueHandler}\r\n                        >\r\n                            <option value=\"\"></option>\r\n                            {employeePositionsData.map((e: employeePositionDataType) => (\r\n                                <option\r\n                                    key={e.employeePositionId}\r\n                                    value={e.employeePositionName}\r\n                                >\r\n                                    {e.employeePositionName}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n                        <span className=\"material-symbols-outlined\">arrow_drop_down</span>\r\n                      </div>\r\n                  </label>\r\n                  <label className=\"form__label form__label--full-width\">\r\n                      Dodatkowe informacje\r\n                      <div className=\"form__textarea-element-with-icon\">\r\n                        <textarea\r\n                            className=\"form__textarea-element\"\r\n                            value={newEmployee.additionalInformation}\r\n                            name=\"additionalInformation\"\r\n                            onChange={elementValueHandler}\r\n                        />\r\n                        <span className=\"material-symbols-outlined\">height</span>\r\n                      </div>\r\n                  </label>\r\n                  <label className=\"form__label form__label--full-width\">\r\n                      Data dodania\r\n                      <input\r\n                          className=\"form__input-element\"\r\n                          type=\"datetime-local\"\r\n                          value={dateStringToDateTimeInputFormat(newEmployee.dateAdded)}\r\n                          disabled\r\n                      />\r\n                  </label>\r\n                  <div className=\"form__information-block form__information-block--error form__information-block--full-width\">\r\n                    {formValidationMessage}\r\n                  </div>\r\n                  <div className=\"form__group\">\r\n                      <input\r\n                          className=\"form__button-element\"\r\n                          type=\"reset\"\r\n                          value=\"Wyczyść\"\r\n                          onClick={() => resetFormValues()}\r\n                      />\r\n                      <input\r\n                          className=\"form__button-element\"\r\n                          type=\"button\"\r\n                          value=\"Dodaj\"\r\n                          onClick={() => addEmployeeToList()}\r\n                      />\r\n                  </div>\r\n              </form>\r\n          </div>\r\n      </>\r\n  )\r\n}\r\n\r\nexport default AddEmployeeModalWindow;\r\n","import { valueLessThanTen } from \"./valueLessThanTenFormat\";\r\n\r\nexport const dateStringToInputFormat = (date: string): string => {\r\n  const dateValue: Date = new Date(date);\r\n\r\n  const day: number = dateValue.getDate();\r\n  const month: number = dateValue.getMonth() + 1;\r\n  const year: number = dateValue.getFullYear();\r\n\r\n  return `${year}-${valueLessThanTen(month)}-${valueLessThanTen(day)}`;\r\n};\r\n","import { valueLessThanTen } from \"./valueLessThanTenFormat\";\r\n\r\nexport const dateToDateInputFormat = (date: Date): string => {\r\n  const day: number = date.getDate();\r\n  const month: number = date.getMonth() + 1;\r\n  const year: number = date.getFullYear();\r\n\r\n  return `${year}-${valueLessThanTen(month)}-${valueLessThanTen(day)}`;\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { MAX_HOURS_RESERVATION, MIN_HOURS_RESERVATION } from \"../../../../data/staticPlatformData\";\r\nimport { useAppDispatch, useAppSelector } from \"../../../../hooks/redux-hooks\";\r\nimport { ADD_NOTIFICATION, CLOSE_MODAL_WINDOW } from \"../../../../redux/slices/globalSettingsSlice\";\r\nimport { ADD_MEETING } from \"../../../../redux/slices/meetingsPageSlice\";\r\nimport { AppDispatch, RootState } from \"../../../../redux/store\";\r\nimport { employeeDataType } from \"../../../../types/employeeDataType\";\r\nimport { meetingCategoryDataType } from \"../../../../types/meetingCategoryDataType\";\r\nimport { meetingDataType } from \"../../../../types/meetingDataType\";\r\nimport { roomDataType } from \"../../../../types/roomDataType\";\r\nimport { convertDateAndTimeStringToMiliseconds } from \"../../../../utils/convertDateAndTimeStringToMiliseconds\";\r\nimport { dateStringToInputFormat } from \"../../../../utils/dateStringToDateInputFormat\";\r\nimport { dateStringToDateLocalString } from \"../../../../utils/dateStringToDateLocalString\";\r\nimport { dateStringToDateTimeInputFormat } from \"../../../../utils/dateStringToDateTimeInputFormat\";\r\nimport { dateToDateInputFormat } from \"../../../../utils/dateToDateInputFormat\";\r\nimport { valueLessThanTen } from \"../../../../utils/valueLessThanTenFormat\";\r\n\r\nfunction AddMeetingModalWindow() {\r\n  const meetingsData: meetingDataType[] = useAppSelector((state: RootState) => state.meetingsPage.value);\r\n  const roomsData: roomDataType[] = useAppSelector((state: RootState) => state.roomsPage.value);\r\n  const employeeresData: employeeDataType[] = useAppSelector((state: RootState) => state.employeeresPage.value);\r\n  const meetingCategoriesData: meetingCategoryDataType[] = useAppSelector((state: RootState) => state.meetingCategories.value);\r\n\r\n  const dispatch: AppDispatch = useAppDispatch();\r\n\r\n  interface newMeetingElement {\r\n    meetingId: number;\r\n    meetingName: string;\r\n    meetingCategory: string;\r\n    roomName: string;\r\n    employeeName: string;\r\n    meetingPeopleNumber: number;\r\n    meetingDate: string;\r\n    meetingTimeStart: string;\r\n    meetingTimeEnd: string;\r\n    additionalInformation: string;\r\n    dateAdded: string;\r\n    modificationDate: null | string;\r\n  }\r\n\r\n  interface validationElementValue {\r\n    value: string;\r\n    correctValidation: boolean;\r\n  }\r\n\r\n  type validationElementName = 'meetingName' | 'meetingCategory' | 'roomName' | 'employeeName' | 'meetingPeopleNumber' | 'meetingDate' | 'meetingTimeStart' | 'meetingTimeEnd' | 'roomMeetingsConflictsData';\r\n\r\n  type formValidationElements = {\r\n    [key in validationElementName]: validationElementValue;\r\n  }\r\n\r\n  interface roomMeetingsConflictsData {\r\n    meetingName: string;\r\n    meetingStart: string;\r\n    meetingEnd: string;\r\n    meetingStartDateTimeMs: number;\r\n    meetingEndDateTimeMs: number;\r\n  }\r\n\r\n  const generateMeetingID = (): number => {\r\n    let newIdValue: number;\r\n\r\n    if (meetingsData.length > 0) {\r\n      const [lastIdValue]: number[] = meetingsData\r\n        .map((e: meetingDataType) => e.meetingId)\r\n        .sort((a, b) => b - a);\r\n      newIdValue = lastIdValue + 1;\r\n      return newIdValue;\r\n      \r\n    } else {\r\n      newIdValue = 1;\r\n      return newIdValue;\r\n    }\r\n  };\r\n\r\n  const initialNewMeetingData: newMeetingElement = {\r\n    meetingId: generateMeetingID(),\r\n    meetingName: \"\",\r\n    meetingCategory: \"\",\r\n    roomName: \"\",\r\n    employeeName: \"\",\r\n    meetingPeopleNumber: 0,\r\n    meetingDate: \"\",\r\n    meetingTimeStart: \"\",\r\n    meetingTimeEnd: \"\",\r\n    additionalInformation: \"\",\r\n    dateAdded: new Date().toJSON(),\r\n    modificationDate: null\r\n  };\r\n\r\n  const [newMeeting, setNewMeeting] = useState<newMeetingElement>(initialNewMeetingData);\r\n\r\n  const initialFormValidationElementsData: formValidationElements = {\r\n    meetingName: { value: '', correctValidation: true },\r\n    meetingCategory: { value: '', correctValidation: true },\r\n    roomName: { value: '', correctValidation: true },\r\n    employeeName: { value: '', correctValidation: true },\r\n    meetingPeopleNumber: { value: '', correctValidation: true },\r\n    meetingDate: { value: '', correctValidation: true },\r\n    meetingTimeStart: { value: '', correctValidation: true },\r\n    meetingTimeEnd: { value: '', correctValidation: true },\r\n    roomMeetingsConflictsData: { value: '', correctValidation: true }\r\n  };\r\n\r\n  const [formValidationElements, setFormValidationElements] = useState<formValidationElements>(initialFormValidationElementsData);\r\n\r\n  const [formErrorMessage, setFormErrorMessage] = useState<string>('');\r\n\r\n  const validationErrorsData = Object.values(formValidationElements).filter((key) => key.correctValidation == false && key.value.length > 0).map((key) => [key.value]);\r\n\r\n  const formValidationMessage: JSX.Element = (\r\n    <>\r\n      <p className=\"information-block__title\">{formErrorMessage}</p>\r\n      <ul className=\"information-block__list\">\r\n        {validationErrorsData.map((e, index) => <li key={index} className=\"list__element\">{e}</li>)}\r\n      </ul>\r\n    </>\r\n  );\r\n\r\n  const activeEmployeeresData: employeeDataType[] = employeeresData.filter((e: employeeDataType) => e.employeeStatus === true);\r\n  const activeRoomsData: roomDataType[] = roomsData.filter((e: roomDataType) => e.roomStatus === true);\r\n\r\n  const minPeopleNumberInRoom: number = newMeeting.roomName == \"\" ? 0 : roomsData.filter((e: roomDataType) => e.roomName == newMeeting.roomName)[0].minimumRoomPeople;\r\n  const maxPeopleNumberInRoom: number = newMeeting.roomName == \"\" ? 0 : roomsData.filter((e: roomDataType) => e.roomName == newMeeting.roomName)[0].maximumRoomPeople;\r\n\r\n  const elementValueHandler = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement>): void => {\r\n    setNewMeeting((prevState: newMeetingElement) => {return {\r\n      ...prevState,\r\n      [e.target.name]: e.target.value\r\n    }})\r\n  };\r\n\r\n  const elementNumberValueHandler = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement>): void => {\r\n    setNewMeeting((prevState: newMeetingElement) => {return {\r\n      ...prevState,\r\n      [e.target.name]: parseInt(e.target.value)\r\n    }})\r\n  };\r\n\r\n  const validateMeetingNameInput = (): boolean => {\r\n    if (newMeeting.meetingName == \"\") {\r\n      setFormValidationElements((prevState: formValidationElements) => {\r\n        return {...prevState, meetingName: {value: 'Wprowadź nazwę pomieszczenia', correctValidation: false}}\r\n      });\r\n      return false;\r\n\r\n    } else {\r\n      setFormValidationElements((prevState: formValidationElements) => {\r\n        return {...prevState, meetingName: {value: '', correctValidation: true}}\r\n      });\r\n      return true;\r\n    }\r\n  };\r\n\r\n  const validateMeetingCategoryInput = (): boolean => {\r\n    if (newMeeting.meetingCategory == \"\") {\r\n      setFormValidationElements((prevState: formValidationElements) => {\r\n        return {...prevState, meetingCategory: {value: 'Wybierz kategorię spotkania', correctValidation: false}}\r\n      });\r\n      return false;\r\n\r\n    } else if (meetingCategoriesData.length == 0) {\r\n      setFormValidationElements((prevState: formValidationElements) => {\r\n        return {...prevState, meetingCategory: {value: 'Brak kategorii do wyświetlenia. Uzupełnij dane, aby wypełnić formularz', correctValidation: false}}\r\n      });\r\n      return false;\r\n\r\n    } else {\r\n      setFormValidationElements((prevState: formValidationElements) => {\r\n        return {...prevState, meetingCategory: {value: '', correctValidation: true}}\r\n      });\r\n      return true;\r\n    }\r\n  };\r\n\r\n  const validateEmployeeNameInput = (): boolean => {\r\n    if (newMeeting.employeeName == \"\") {\r\n      setFormValidationElements((prevState: formValidationElements) => {\r\n        return {...prevState, employeeName: {value: 'Wybierz organizatora spotkania', correctValidation: false}}\r\n      });\r\n      return false;\r\n\r\n    } else if (employeeresData.length == 0) {\r\n      setFormValidationElements((prevState: formValidationElements) => {\r\n        return {...prevState, employeeName: {value: 'Brak pracowników do wyświetlenia. Uzupełnij dane, aby wyświetlić formularz', correctValidation: false}}\r\n      });\r\n      return false;\r\n\r\n    } else {\r\n      setFormValidationElements((prevState: formValidationElements) => {\r\n        return {...prevState, employeeName: {value: '', correctValidation: true}}\r\n      });\r\n      return true;\r\n    }\r\n  };\r\n\r\n  const validateMeetingDateInput = (): boolean => {\r\n    if (newMeeting.meetingDate == \"\") {\r\n      setFormValidationElements((prevState: formValidationElements) => {\r\n        return {...prevState, meetingDate: {value: 'Wprowadź datę spotkania', correctValidation: false}}\r\n      });\r\n      return false;\r\n\r\n    } else if (newMeeting.meetingDate < dateToDateInputFormat(new Date())) {\r\n      setFormValidationElements((prevState: formValidationElements) => {\r\n        return {...prevState, meetingDate: {value: `Błędnie wprowadzona data spotkania. Minimalnie od ${new Date().toLocaleDateString()}`, correctValidation: false}}\r\n      });\r\n      return false;\r\n\r\n    } else if (new Date(newMeeting.meetingDate).toLocaleDateString() == new Date().toLocaleDateString() && `${valueLessThanTen(new Date().getHours())}:${valueLessThanTen(new Date().getMinutes())}` > MAX_HOURS_RESERVATION) {\r\n      setFormValidationElements((prevState: formValidationElements) => {\r\n        return {...prevState, meetingDate: {value: 'Na dzień dzisiejszy nie możesz utworzyć spotkania', correctValidation: false}}\r\n      });\r\n      return false;\r\n\r\n    } else {\r\n      setFormValidationElements((prevState: formValidationElements) => {\r\n        return {...prevState, meetingDate: {value: '', correctValidation: true}}\r\n      });\r\n      return true;\r\n    }\r\n  };\r\n\r\n  const validateMeetingTimeStartInput = (): boolean => {\r\n    if (newMeeting.meetingDate == \"\") {\r\n      setFormValidationElements((prevState: formValidationElements) => {\r\n        return {...prevState, meetingTimeStart: {value: '', correctValidation: false}}\r\n      });\r\n      return false;\r\n\r\n    } else if (newMeeting.meetingTimeStart == \"\") {\r\n      setFormValidationElements((prevState: formValidationElements) => {\r\n        return {...prevState, meetingTimeStart: {value: 'Wprowadź godzinę rozpoczęcia spotkania', correctValidation: false}}\r\n      });\r\n      return false;\r\n\r\n    } else if (newMeeting.meetingTimeStart < MIN_HOURS_RESERVATION) {\r\n      setFormValidationElements((prevState: formValidationElements) => {\r\n        return {...prevState, meetingTimeStart: {value: `Błędnie wprowadzona godzina rozpoczęcia. Minimalnie od ${MIN_HOURS_RESERVATION}`, correctValidation: false}}\r\n      });\r\n      return false;\r\n\r\n    } else if (newMeeting.meetingTimeStart >= newMeeting.meetingTimeEnd) {\r\n      setFormValidationElements((prevState: formValidationElements) => {\r\n        return {...prevState, meetingTimeStart: {value: 'Godzina rozpoczęcia powinna być mniejsza od zakończenia', correctValidation: false}}\r\n      });\r\n      return false;\r\n\r\n    } else if (new Date(newMeeting.meetingDate).toLocaleDateString() == new Date().toLocaleDateString() && newMeeting.meetingTimeStart <= `${valueLessThanTen(new Date().getHours())}:${valueLessThanTen(new Date().getMinutes())}`) {\r\n      setFormValidationElements((prevState: formValidationElements) => {\r\n        return {...prevState, meetingTimeStart: {value: 'Godzina powinna być większa od aktualnej', correctValidation: false}}\r\n      });\r\n      return false;\r\n      \r\n    } else {\r\n      setFormValidationElements((prevState: formValidationElements) => {\r\n        return {...prevState, meetingTimeStart: {value: '', correctValidation: true}}\r\n      });\r\n      return true;\r\n    }\r\n  };\r\n\r\n  const validateMeetingTimeEndInput = (): boolean => {\r\n    if (newMeeting.meetingDate == \"\") {\r\n      setFormValidationElements((prevState: formValidationElements) => {\r\n        return {...prevState, meetingTimeEnd: {value: '', correctValidation: false}}\r\n      });\r\n      return false;\r\n\r\n    } else if (newMeeting.meetingTimeEnd == \"\") {\r\n      setFormValidationElements((prevState: formValidationElements) => {\r\n        return {...prevState, meetingTimeEnd: {value: 'Wprowadź godzinę zakończenia spotkania', correctValidation: false}}\r\n      });\r\n      return false;\r\n\r\n    } else if (newMeeting.meetingTimeEnd > MAX_HOURS_RESERVATION) {\r\n      setFormValidationElements((prevState: formValidationElements) => {\r\n        return {...prevState, meetingTimeEnd: {value: `Błędnie wprowadozna godzina zakończenia. Maksymalnie do ${MAX_HOURS_RESERVATION}`, correctValidation: false}}\r\n      });\r\n      return false;\r\n\r\n    } else if (newMeeting.meetingTimeEnd <= newMeeting.meetingTimeStart) {\r\n      setFormValidationElements((prevState: formValidationElements) => {\r\n        return {...prevState, meetingTimeEnd: {value: 'Godzina zakończenia powinna być większa od rozpoczęcia', correctValidation: false}}\r\n      });\r\n      return false;\r\n\r\n    } else {\r\n      setFormValidationElements((prevState: formValidationElements) => {\r\n        return {...prevState, meetingTimeEnd: {value: '', correctValidation: true}}\r\n      });\r\n      return true;\r\n    }\r\n  };\r\n\r\n  const validateMeetingRoomInput = (): boolean => {\r\n    if (newMeeting.roomName == \"\") {\r\n      setFormValidationElements((prevState: formValidationElements) => {\r\n        return {...prevState, roomName: {value: 'Wybierz pomieszczenie', correctValidation: false}}\r\n      });\r\n      return false;\r\n\r\n    } else {\r\n      setFormValidationElements((prevState: formValidationElements) => {\r\n        return {...prevState, roomName: {value: '', correctValidation: true}}\r\n      });\r\n      return true;\r\n    }\r\n  };\r\n\r\n  const validateMeetingPeopleNumberInput = (): boolean => {\r\n    if (!formValidationElements.roomName.correctValidation) {\r\n      setFormValidationElements((prevState: formValidationElements) => {\r\n        return {...prevState, meetingPeopleNumber: {value: '', correctValidation: false}}\r\n      });\r\n      return false;\r\n\r\n    } else if (isNaN(newMeeting.meetingPeopleNumber) || newMeeting.meetingPeopleNumber == 0) {\r\n      setFormValidationElements((prevState: formValidationElements) => {\r\n        return {...prevState, meetingPeopleNumber: {value: 'Wprowadź ilość osób na spotkaniu', correctValidation: false}}\r\n      });\r\n      return false;\r\n\r\n    } else if (newMeeting.meetingPeopleNumber < minPeopleNumberInRoom || newMeeting.meetingPeopleNumber > maxPeopleNumberInRoom) {\r\n      setFormValidationElements((prevState: formValidationElements) => {\r\n        return {...prevState, meetingPeopleNumber: {value: 'Wprowadź poprawnie ilość osób na spotkaniu', correctValidation: false}}\r\n      });\r\n      return false;\r\n\r\n    } else {\r\n      setFormValidationElements((prevState: formValidationElements) => {\r\n        return {...prevState, meetingPeopleNumber: {value: '', correctValidation: true}}\r\n      });\r\n      return true;\r\n    }\r\n  };\r\n\r\n  const validateCheckRoomMeetingsConflicts= (): boolean => {\r\n    const meetingRoomDateTimeData: roomMeetingsConflictsData[] = meetingsData.filter((e: meetingDataType) => e.roomName == newMeeting.roomName).map((e: meetingDataType) => {return {\r\n      meetingName: e.meetingName, \r\n      meetingStart: e.meetingTimeStart, \r\n      meetingEnd: e.meetingTimeEnd, \r\n      meetingStartDateTimeMs: convertDateAndTimeStringToMiliseconds(e.meetingDate, e.meetingTimeStart), \r\n      meetingEndDateTimeMs: convertDateAndTimeStringToMiliseconds(e.meetingDate, e.meetingTimeEnd)\r\n    }});\r\n\r\n    const inputMeetingStartMs: number = convertDateAndTimeStringToMiliseconds(newMeeting.meetingDate, newMeeting.meetingTimeStart);\r\n    const inputMeetingEndMs: number = convertDateAndTimeStringToMiliseconds(newMeeting.meetingDate, newMeeting.meetingTimeEnd);\r\n    \r\n    const filteredRoomMeetingsData: roomMeetingsConflictsData[] = meetingRoomDateTimeData.filter((e: roomMeetingsConflictsData) => e.meetingEndDateTimeMs >= inputMeetingStartMs && e.meetingStartDateTimeMs <= inputMeetingEndMs)\r\n\r\n    if (filteredRoomMeetingsData.length > 0) {\r\n      setFormValidationElements((prevState: formValidationElements) => {\r\n        filteredRoomMeetingsData.sort((a, b) => a.meetingStartDateTimeMs - b.meetingStartDateTimeMs);\r\n\r\n        return {...prevState, roomDateTimeMeetingData: {value: `Nie możesz zaplanować spotkania na dany dzień i w określonych godzinach (${newMeeting.meetingTimeStart} - ${newMeeting.meetingTimeEnd}), ponieważ wtedy pomieszczenie jest zajęte ${filteredRoomMeetingsData.map(e => ` (${e.meetingStart} - ${e.meetingEnd}: ${e.meetingName})`)}`, correctValidation: false}}\r\n      })\r\n  \r\n      return false;\r\n\r\n    } else {\r\n      setFormValidationElements((prevState: formValidationElements) => {\r\n        return {...prevState, roomDateTimeMeetingData: {value: '', correctValidation: true}}\r\n      })\r\n  \r\n      return true;\r\n    }\r\n  };\r\n\r\n  const addMeetingToList = (): void => {\r\n    const correctValidationMeetingName: boolean = validateMeetingNameInput();\r\n    const correctValidationMeetingCategory: boolean = validateMeetingCategoryInput();\r\n    const correctValidationMeetingRoom: boolean = validateMeetingRoomInput();\r\n    const correctValidationEmployeeName: boolean = validateEmployeeNameInput();\r\n    const correctValidationPeopleNumber: boolean = validateMeetingPeopleNumberInput();\r\n    const correctValidationMeetingDate: boolean = validateMeetingDateInput();\r\n    const correctValidationMeetingTimeStart: boolean = validateMeetingTimeStartInput();\r\n    const correctValidationMeetingTimeEnd: boolean = validateMeetingTimeEndInput();\r\n    const correctValidationRoomMeetingsConflicts: boolean = validateCheckRoomMeetingsConflicts();\r\n\r\n    const correctValidation: boolean =\r\n    correctValidationMeetingName &&\r\n    correctValidationMeetingCategory &&\r\n    correctValidationMeetingRoom &&\r\n    correctValidationEmployeeName &&\r\n    correctValidationPeopleNumber &&\r\n    correctValidationMeetingDate &&\r\n    correctValidationMeetingTimeStart &&\r\n    correctValidationMeetingTimeEnd &&\r\n    correctValidationRoomMeetingsConflicts\r\n      ? true\r\n      : false;\r\n\r\n    if (correctValidation) {\r\n      setFormErrorMessage('');\r\n      dispatch(ADD_MEETING(newMeeting));\r\n      dispatch(ADD_NOTIFICATION({notificationName: `Dodano nowe spotkanie o nazwie '${newMeeting.meetingName}' zaplanowane na dzień ${dateStringToDateLocalString(newMeeting.meetingDate)}`, notificationDate: new Date().toJSON(), seenNotification: false})) ;\r\n      dispatch(CLOSE_MODAL_WINDOW());\r\n    } else {\r\n      setFormErrorMessage('Sprawdź poprawność wypełnienia formularza');\r\n    }\r\n  };\r\n\r\n  const resetFormValues = (): void => {\r\n    setFormValidationElements(initialFormValidationElementsData);\r\n    setFormErrorMessage('');\r\n    setNewMeeting(initialNewMeetingData);\r\n  };\r\n\r\n  useEffect((): void => {\r\n    newMeeting.roomName.length == 0 ? (\r\n      setFormValidationElements((prevState: formValidationElements) => {\r\n        return {...prevState, meetingPeopleNumber: {value: '', correctValidation: true}}\r\n      })\r\n    ) : null\r\n  }, [newMeeting.roomName]);\r\n\r\n  return (\r\n      <>\r\n          <div className=\"window__header\">\r\n              <div className=\"header__title\">Dodawanie spotkania</div>\r\n              <div className=\"header__nav\">\r\n                  <button className=\"nav__button\" onClick={() => {dispatch(CLOSE_MODAL_WINDOW())}}>\r\n                    <span className=\"material-symbols-outlined\">close</span>\r\n                  </button>\r\n              </div>\r\n          </div>\r\n          <div className=\"window__description\">\r\n              Lorem ipsum dolor sit amet consectetur adipisicing elit. Distinctio, aliquid! Recusandae modi nam quis delectus dolore voluptatem, tempora neque quaerat culpa inventore, illo alias debitis necessitatibus libero. Dicta, laborum vitae in impedit delectus itaque iusto.\r\n          </div>\r\n          <div className=\"window__content\">\r\n              <form className=\"content__form\">\r\n                  <label className=\"form__label\">\r\n                      ID\r\n                      <input \r\n                          className=\"form__input-element\" \r\n                          type=\"number\" \r\n                          value={newMeeting.meetingId} \r\n                          disabled \r\n                      />\r\n                  </label>\r\n                  <label className=\"form__label form__label--three-width\">\r\n                      Nazwa spotkania*\r\n                      <div className=\"form__information-block form__information-block--error\">\r\n                          {formValidationElements.meetingName.value}\r\n                      </div>\r\n                      <input\r\n                          className=\"form__input-element\"\r\n                          type=\"text\"\r\n                          value={newMeeting.meetingName}\r\n                          name=\"meetingName\"\r\n                          onChange={elementValueHandler}\r\n                      />\r\n                  </label>\r\n                  <label className=\"form__label form__label--two-width\">\r\n                      Kategoria spotkania*\r\n                      <div className=\"form__information-block form__information-block--error\">\r\n                          {formValidationElements.meetingCategory.value}\r\n                      </div>\r\n                      <div className=\"form__element-with-icon\">\r\n                        <select\r\n                            className=\"form__select-element\"\r\n                            value={newMeeting.meetingCategory}\r\n                            name=\"meetingCategory\"\r\n                            onChange={elementValueHandler}\r\n                        >\r\n                            <option value=\"\"></option>\r\n                            {meetingCategoriesData.map((e: meetingCategoryDataType) => (\r\n                                <option\r\n                                    key={e.meetingCategoryId}\r\n                                    value={e.meetingCategoryName}\r\n                                >\r\n                                    {e.meetingCategoryName}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n                        <span className=\"material-symbols-outlined\">arrow_drop_down</span>\r\n                      </div>\r\n                  </label>\r\n                  <label className=\"form__label form__label--two-width\">\r\n                      Organizator*\r\n                      <div className=\"form__information-block form__information-block--error\">\r\n                          {formValidationElements.employeeName.value}\r\n                      </div>\r\n                      <div className=\"form__element-with-icon\">\r\n                        <select\r\n                            className=\"form__select-element\"\r\n                            value={newMeeting.employeeName}\r\n                            name=\"employeeName\"\r\n                            onChange={elementValueHandler}\r\n                        >\r\n                            <option value=\"\"></option>\r\n                            {activeEmployeeresData.map((e: employeeDataType) => (\r\n                                <option\r\n                                    key={e.employeeId}\r\n                                    value={e.employeeName}\r\n                                >\r\n                                    {e.employeeName}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n                        <span className=\"material-symbols-outlined\">arrow_drop_down</span>\r\n                      </div>\r\n                  </label>\r\n                  <label className=\"form__label form__label--two-width\">\r\n                      Data spotkania*\r\n                      <div className=\"form__information-block form__information-block--error\">\r\n                          {formValidationElements.meetingDate.value}\r\n                      </div>\r\n                      <div className=\"form__element-with-icon\">\r\n                        <input\r\n                            className=\"form__input-element\"\r\n                            type=\"date\"\r\n                            value={dateStringToInputFormat(newMeeting.meetingDate)}\r\n                            name=\"meetingDate\"\r\n                            onChange={elementValueHandler}\r\n                        />\r\n                        <span className=\"material-symbols-outlined\">calendar_month</span>\r\n                      </div>\r\n                  </label>\r\n                  <label className=\"form__label\">\r\n                      Godzina rozpoczęcia*\r\n                      <div className=\"form__information-block form__information-block--error\">\r\n                          {formValidationElements.meetingTimeStart.value}\r\n                      </div>\r\n                      <div className=\"form__element-with-icon\">\r\n                        <input\r\n                            className=\"form__input-element\"\r\n                            type=\"time\"\r\n                            value={newMeeting.meetingTimeStart}\r\n                            disabled={newMeeting.meetingDate.length > 0 ? false : true}\r\n                            placeholder=\"00:00\"\r\n                            name=\"meetingTimeStart\"\r\n                            onChange={elementValueHandler}\r\n                        />\r\n                        <span className=\"material-symbols-outlined\">schedule</span>\r\n                      </div>\r\n                  </label>\r\n                  <label className=\"form__label\">\r\n                      Godzina zakończenia*\r\n                      <div className=\"form__information-block form__information-block--error\">\r\n                          {formValidationElements.meetingTimeEnd.value}\r\n                      </div>\r\n                      <div className=\"form__element-with-icon\">\r\n                        <input\r\n                            className=\"form__input-element\"\r\n                            type=\"time\"\r\n                            value={newMeeting.meetingTimeEnd}\r\n                            disabled={newMeeting.meetingDate.length > 0 ? false : true}\r\n                            placeholder=\"00:00\"\r\n                            name=\"meetingTimeEnd\"\r\n                            onChange={elementValueHandler}\r\n                        />\r\n                        <span className=\"material-symbols-outlined\">schedule</span>\r\n                      </div>\r\n                  </label>\r\n                  <label className=\"form__label form__label--two-width\">\r\n                      Pomieszczenie*\r\n                      <div className=\"form__information-block form__information-block--error\">\r\n                          {formValidationElements.roomName.value}\r\n                      </div>\r\n                      <div className=\"form__element-with-icon\">\r\n                        <select\r\n                            className=\"form__select-element\"\r\n                            value={newMeeting.roomName}\r\n                            name=\"roomName\"\r\n                            onChange={(e) => {elementValueHandler(e), validateMeetingPeopleNumberInput()}}\r\n                        >\r\n                            <option value=\"\"></option>\r\n                            {activeRoomsData.map((e: roomDataType) => (\r\n                                <option \r\n                                    key={e.roomId} \r\n                                    value={e.roomName}\r\n                                >\r\n                                    {e.roomName}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n                        <span className=\"material-symbols-outlined\">arrow_drop_down</span>\r\n                      </div>\r\n                  </label>\r\n                  <label className=\"form__label form__label--two-width\">\r\n                      Ilość osób*\r\n                      <div className=\"form__information-block form__information-block--error\">\r\n                        {formValidationElements.meetingPeopleNumber.value}\r\n                      </div>\r\n                      {newMeeting.roomName == '' \r\n                        ? null \r\n                        : (\r\n                          <div className=\"form__information-block form__information-block--default\">\r\n                            Min. osób: {minPeopleNumberInRoom == 0 ? 1 : minPeopleNumberInRoom} / Max. osób: {maxPeopleNumberInRoom}\r\n                        </div>                         \r\n                      )}\r\n                      <input\r\n                          className=\"form__input-element\"\r\n                          type=\"number\"\r\n                          value={newMeeting.meetingPeopleNumber}\r\n                          disabled={newMeeting.roomName.length > 0 ? false : true}\r\n                          min={0}\r\n                          name=\"meetingPeopleNumber\"\r\n                          onChange={elementNumberValueHandler}\r\n                      />\r\n                  </label>\r\n                  <label className=\"form__label form__label--full-width\">\r\n                      Dodatkowe informacje\r\n                      <div className=\"form__textarea-element-with-icon\">\r\n                        <textarea\r\n                            className=\"form__textarea-element\"\r\n                            value={newMeeting.additionalInformation}\r\n                            name=\"additionalInformation\"\r\n                            onChange={elementValueHandler}\r\n                        />\r\n                        <span className=\"material-symbols-outlined\">height</span>\r\n                      </div>\r\n                  </label>\r\n                  <label className=\"form__label form__label--full-width\">\r\n                      Data dodania\r\n                      <input\r\n                          className=\"form__input-element\"\r\n                          type=\"datetime-local\"\r\n                          value={dateStringToDateTimeInputFormat(newMeeting.dateAdded)}\r\n                          disabled\r\n                      />\r\n                  </label>\r\n                  <div className=\"form__information-block form__information-block--error form__information-block--full-width\">\r\n                    {formValidationMessage}\r\n                  </div>\r\n                  <div className=\"form__group\">\r\n                      <input\r\n                          className=\"form__button-element\"\r\n                          type=\"reset\"\r\n                          value=\"Wyczyść\"\r\n                          onClick={() => resetFormValues()}\r\n                      />\r\n                      <input\r\n                          className=\"form__button-element\"\r\n                          type=\"button\"\r\n                          value=\"Dodaj\"\r\n                          onClick={() => addMeetingToList()}\r\n                      />\r\n                  </div>\r\n              </form>\r\n          </div>\r\n      </>\r\n  )\r\n}\r\n\r\nexport default AddMeetingModalWindow;\r\n","import React, { useState } from \"react\";\r\nimport { useAppDispatch, useAppSelector } from \"../../../../hooks/redux-hooks\";\r\nimport { ADD_NOTIFICATION, CLOSE_MODAL_WINDOW } from \"../../../../redux/slices/globalSettingsSlice\";\r\nimport { ADD_ROOM } from \"../../../../redux/slices/roomsPageSlice\";\r\nimport { AppDispatch, RootState } from \"../../../../redux/store\";\r\nimport { roomDataType } from \"../../../../types/roomDataType\";\r\nimport { roomTypeDataType } from \"../../../../types/roomTypeDataType\";\r\nimport { dateStringToDateTimeInputFormat } from \"../../../../utils/dateStringToDateTimeInputFormat\";\r\n\r\nfunction AddRoomModalWindow() {\r\n  const roomsData: roomDataType[] = useAppSelector((state: RootState) => state.roomsPage.value);\r\n  const roomTypesData: roomTypeDataType[] = useAppSelector((state: RootState) => state.roomTypes.value);\r\n\r\n  const dispatch: AppDispatch = useAppDispatch();\r\n\r\n  interface newRoomElement {\r\n    roomId: number;\r\n    roomName: string;\r\n    roomNumber: string;\r\n    minimumRoomPeople: number;\r\n    maximumRoomPeople: number;\r\n    roomStatus: boolean;\r\n    roomType: string;\r\n    additionalInformation: string;\r\n    dateAdded: string;\r\n    modificationDate: null | string;\r\n  }\r\n\r\n  interface validationElementValue {\r\n    value: string;\r\n    correctValidation: boolean;\r\n  }\r\n\r\n  type validationElementName = 'roomName' | 'roomNumber' | 'minimumRoomPeople' | 'maximumRoomPeople' | 'roomType';\r\n\r\n  type formValidationElements = {\r\n    [key in validationElementName]: validationElementValue;\r\n  }\r\n\r\n  const generateRoomId = (): number => {\r\n    let newIdValue: number;\r\n\r\n    if (roomsData.length > 0) {\r\n      const [lastIdValue]: number[] = roomsData\r\n        .map((e: roomDataType) => e.roomId)\r\n        .sort((a, b) => b - a);\r\n      newIdValue = lastIdValue + 1;\r\n      return newIdValue;\r\n      \r\n    } else {\r\n      newIdValue = 1;\r\n      return newIdValue;\r\n    }\r\n  };\r\n\r\n  const initialNewRoomData: newRoomElement = {\r\n    roomId: generateRoomId(),\r\n    roomName: '',\r\n    roomNumber: '',\r\n    minimumRoomPeople: 0,\r\n    maximumRoomPeople: 0,\r\n    roomStatus: true,\r\n    roomType: '',\r\n    additionalInformation: \"\",\r\n    dateAdded: new Date().toJSON(),\r\n    modificationDate: null\r\n  };\r\n\r\n  const [newRoom, setNewRoom] = useState<newRoomElement>(initialNewRoomData);\r\n\r\n  const initialFormValidationElementsData: formValidationElements = {\r\n    roomName: { value: '', correctValidation: true },\r\n    roomNumber: { value: '', correctValidation: true },\r\n    minimumRoomPeople: { value: '', correctValidation: true },\r\n    maximumRoomPeople: { value: '', correctValidation: true },\r\n    roomType: { value: '', correctValidation: true }\r\n  };\r\n\r\n  const [formValidationElements, setFormValidationElements] = useState<formValidationElements>(initialFormValidationElementsData);\r\n\r\n  const [formErrorMessage, setFormErrorMessage] = useState<string>('');\r\n\r\n  const validationErrorsData = Object.values(formValidationElements).filter((key) => key.correctValidation == false && key.value.length > 0).map((key) => [key.value]);\r\n\r\n  const formValidationMessage: JSX.Element = (\r\n    <>\r\n      <p className=\"information-block__title\">{formErrorMessage}</p>\r\n      <ul className=\"information-block__list\">\r\n        {validationErrorsData.map((e, index) => <li key={index} className=\"list__element\">{e}</li>)}\r\n      </ul>\r\n    </>\r\n  );\r\n\r\n  const elementValueHandler = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement>): void => {\r\n    setNewRoom((prevState: newRoomElement) => {return {\r\n      ...prevState,\r\n      [e.target.name]: e.target.value\r\n    }})\r\n  };\r\n\r\n  const elementNumberValueHandler = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement>): void => {\r\n    setNewRoom((prevState: newRoomElement) => {return {\r\n      ...prevState,\r\n      [e.target.name]: parseInt(e.target.value)\r\n    }})\r\n  };\r\n\r\n  const validateRoomNameInput = () => {\r\n    const roomNamesData = roomsData.map((e: roomDataType) => e.roomName.toUpperCase())\r\n\r\n    if (newRoom.roomName == \"\") {\r\n      setFormValidationElements((prevState: formValidationElements) => {\r\n        return {...prevState, roomName: {value: 'Wprowadź nazwę pomieszczenia', correctValidation: false}}\r\n      });\r\n      return false;\r\n\r\n    } else if (roomNamesData.includes(newRoom.roomName.toUpperCase())) {\r\n      setFormValidationElements((prevState: formValidationElements) => {\r\n        return {...prevState, roomName: {value: 'Pomieszczenie o takiej nazwie już istnieje', correctValidation: false}}\r\n      });\r\n      return false;\r\n\r\n    } else {\r\n      setFormValidationElements((prevState: formValidationElements) => {\r\n        return {...prevState, roomName: {value: '', correctValidation: true}}\r\n      });\r\n      return true;\r\n    }\r\n  };\r\n\r\n  const validateRoomNumberInput = () => {\r\n    const roomNumbersData = roomsData.map(e => e.roomNumber.toUpperCase())\r\n\r\n    if (newRoom.roomNumber == \"\") {\r\n      setFormValidationElements((prevState: formValidationElements) => {\r\n        return {...prevState, roomNumber: {value: 'Wprowadź numer pomieszczenia', correctValidation: false}}\r\n      });\r\n      return false;\r\n\r\n    } else if (roomNumbersData.includes(newRoom.roomNumber.toUpperCase())) {\r\n      setFormValidationElements((prevState: formValidationElements) => {\r\n        return {...prevState, roomNumber: {value: 'Pomieszcenie o takim numerze już istnieje', correctValidation: false}}\r\n      });\r\n      return false;\r\n\r\n    } else {\r\n      setFormValidationElements((prevState: formValidationElements) => {\r\n        return {...prevState, roomNumber: {value: '', correctValidation: true}}\r\n      });\r\n      return true;\r\n    }\r\n  };\r\n\r\n  const validateRoomMinPeopleInput = () => {\r\n    if (newRoom.minimumRoomPeople == 0 || isNaN(newRoom.minimumRoomPeople)) {\r\n      setFormValidationElements((prevState: formValidationElements) => {\r\n        return {...prevState, minimumRoomPeople: {value: 'Wprowadź minimalną ilość osób', correctValidation: false}}\r\n      });\r\n      return false;\r\n\r\n    } else if (newRoom.minimumRoomPeople > newRoom.maximumRoomPeople) {\r\n      setFormValidationElements((prevState: formValidationElements) => {\r\n        return {...prevState, minimumRoomPeople: {value: 'Błędna wartość min. liczba jest większa od max. liczby', correctValidation: false}}\r\n      });\r\n      return false;\r\n\r\n    } else if (newRoom.minimumRoomPeople == newRoom.maximumRoomPeople) {\r\n      setFormValidationElements((prevState: formValidationElements) => {\r\n        return {...prevState, minimumRoomPeople: {value: 'Błędna wartość min. liczby. Wartości są sobie równe', correctValidation: false}}\r\n      });\r\n      return false;\r\n\r\n    } else {\r\n      setFormValidationElements((prevState: formValidationElements) => {\r\n        return {...prevState, minimumRoomPeople: {value: '', correctValidation: true}}\r\n      });\r\n      return true;\r\n    }\r\n  };\r\n\r\n  const validateRoomMaxPeopleInput = () => {\r\n    if (newRoom.maximumRoomPeople == 0 || isNaN(newRoom.maximumRoomPeople)) {\r\n      setFormValidationElements((prevState: formValidationElements) => {\r\n        return {...prevState, maximumRoomPeople: {value: 'Wprowadź maksymalną ilość osób', correctValidation: false}}\r\n      });\r\n      return false;\r\n\r\n    } else if (newRoom.maximumRoomPeople < newRoom.minimumRoomPeople) {\r\n      setFormValidationElements((prevState: formValidationElements) => {\r\n        return {...prevState, maximumRoomPeople: {value: 'Błędna wartość max. liczba jest mniejsza od min. liczby', correctValidation: false}}\r\n      });\r\n      return false;\r\n\r\n    } else if (newRoom.maximumRoomPeople == newRoom.minimumRoomPeople) {\r\n      setFormValidationElements((prevState: formValidationElements) => {\r\n        return {...prevState, maximumRoomPeople: {value: 'Błędna wartość min. liczby. Wartości są sobie równe', correctValidation: false}}\r\n      });\r\n      return false;\r\n\r\n    } else {\r\n      setFormValidationElements((prevState: formValidationElements) => {\r\n        return {...prevState, maximumRoomPeople: {value: '', correctValidation: true}}\r\n      });\r\n      return true;\r\n    }\r\n  };\r\n\r\n  const validateRoomTypeInput = () => {\r\n    if (newRoom.roomType == \"\") {\r\n      setFormValidationElements((prevState: formValidationElements) => {\r\n        return {...prevState, roomType: {value: 'Wybierz typ pomieszczenia', correctValidation: false}}\r\n      });\r\n      return false;\r\n\r\n    } else if (roomTypesData.length == 0) {\r\n      setFormValidationElements((prevState: formValidationElements) => {\r\n        return {...prevState, roomType: {value: 'Brak rodzajów pomieszczeń do wyświetlenia. Uzupełnij dane, aby wyświetlić formularz', correctValidation: false}}\r\n      });\r\n      return false;\r\n\r\n    } else {\r\n      setFormValidationElements((prevState: formValidationElements) => {\r\n        return {...prevState, roomType: {value: '', correctValidation: true}}\r\n      });\r\n      return true;\r\n    }\r\n  };\r\n\r\n  const addRoomToList = (): void => {\r\n    const correctValidationRoomName: boolean = validateRoomNameInput();\r\n    const correctValidationRoomNumber: boolean = validateRoomNumberInput();\r\n    const correctValidationMinRoomPeople: boolean = validateRoomMinPeopleInput();\r\n    const correctValidationMaxRoomPeople: boolean = validateRoomMaxPeopleInput();\r\n    const correctValidationRoomTypes: boolean = validateRoomTypeInput();\r\n\r\n    const correctValidation: boolean =\r\n    correctValidationRoomName &&\r\n    correctValidationRoomNumber &&\r\n    correctValidationMinRoomPeople &&\r\n    correctValidationMaxRoomPeople &&\r\n    correctValidationRoomTypes\r\n      ? true\r\n      : false;\r\n\r\n    if (correctValidation) {\r\n      setFormErrorMessage('');\r\n      dispatch(ADD_ROOM(newRoom));\r\n      dispatch(ADD_NOTIFICATION({notificationName: `Dodano nowe pomieszczenie o nazwie '${newRoom.roomName}'`, notificationDate: new Date().toJSON(), seenNotification: false})) ;\r\n      dispatch(CLOSE_MODAL_WINDOW());\r\n    } else {\r\n      setFormErrorMessage('Sprawdź poprawność wypełnienia formularza');\r\n    }\r\n  };\r\n\r\n  const resetFormValues = (): void => {\r\n    setFormValidationElements(initialFormValidationElementsData);\r\n    setFormErrorMessage('');\r\n    setNewRoom(initialNewRoomData);\r\n  };\r\n\r\n  return (\r\n      <>\r\n          <div className=\"window__header\">\r\n              <div className=\"header__title\">Dodawanie pomieszczenia</div>\r\n              <div className=\"header__nav\">\r\n                  <button className=\"nav__button\" onClick={() => {dispatch(CLOSE_MODAL_WINDOW())}}>\r\n                    <span className=\"material-symbols-outlined\">close</span>\r\n                  </button>\r\n              </div>\r\n          </div>\r\n          <div className=\"window__description\">\r\n              Lorem ipsum dolor sit amet consectetur adipisicing elit. Distinctio, aliquid! Recusandae modi nam quis delectus dolore voluptatem, tempora neque quaerat culpa inventore, illo alias debitis necessitatibus libero. Dicta, laborum vitae in impedit delectus itaque iusto.\r\n          </div>\r\n          <div className=\"window__content\">\r\n              <form className=\"content__form\">\r\n                  <label className=\"form__label\">\r\n                      ID\r\n                      <input \r\n                          className=\"form__input-element\" \r\n                          type=\"number\" \r\n                          value={newRoom.roomId} \r\n                          disabled \r\n                      />\r\n                  </label>\r\n                  <label className=\"form__label form__label--three-width\">\r\n                      Nazwa pomieszczenia*\r\n                      <div className=\"form__information-block form__information-block--error\">\r\n                          {formValidationElements.roomName.value}\r\n                      </div>\r\n                      <input\r\n                          className=\"form__input-element\"\r\n                          type=\"text\"\r\n                          value={newRoom.roomName}\r\n                          name=\"roomName\"\r\n                          onChange={elementValueHandler}\r\n                      />\r\n                  </label>\r\n                  <label className=\"form__label\">\r\n                      Number pomieszczenia*\r\n                      <div className=\"form__information-block form__information-block--error\">\r\n                          {formValidationElements.roomNumber.value}\r\n                      </div>\r\n                      <input\r\n                          className=\"form__input-element\"\r\n                          type=\"text\"\r\n                          value={newRoom.roomNumber}\r\n                          name=\"roomNumber\"\r\n                          onChange={elementValueHandler}\r\n                      />\r\n                  </label>\r\n                  <label className=\"form__label\">\r\n                      Minimalna ilość osób*\r\n                      <div className=\"form__information-block form__information-block--error\">\r\n                          {formValidationElements.minimumRoomPeople.value}\r\n                      </div>\r\n                      <input\r\n                          className=\"form__input-element\"\r\n                          type=\"number\"\r\n                          value={newRoom.minimumRoomPeople}\r\n                          min={0}\r\n                          name=\"minimumRoomPeople\"\r\n                          onChange={elementNumberValueHandler}\r\n                      />\r\n                  </label>\r\n                  <label className=\"form__label\">\r\n                      Maksymalna ilość osób*\r\n                      <div className=\"form__information-block form__information-block--error\">\r\n                          {formValidationElements.maximumRoomPeople.value}\r\n                      </div>\r\n                      <input\r\n                          className=\"form__input-element\"\r\n                          type=\"number\"\r\n                          value={newRoom.maximumRoomPeople}\r\n                          min={0}\r\n                          name=\"maximumRoomPeople\"\r\n                          onChange={elementNumberValueHandler}\r\n                      />\r\n                  </label>\r\n                  <label className=\"form__label\">\r\n                      Status pomieszczenia*\r\n                      <div className=\"label__group\">\r\n                        <div className={newRoom.roomStatus ? \"form__information-block form__information-block--active\" : \"form__information-block form__information-block--default\"}>\r\n                          {newRoom.roomStatus ? 'Pomieszczenie aktywne' : 'Pomieszczenie nieaktywne'}\r\n                        </div>\r\n                        <input\r\n                            className=\"form__checkbox-element\"\r\n                            type=\"checkbox\"\r\n                            checked={newRoom.roomStatus}\r\n                            name=\"roomStatus\"\r\n                            onChange={(e) => {setNewRoom((prevState: newRoomElement) => {return {\r\n                              ...prevState,\r\n                              [e.target.name]: e.target.checked\r\n                            }})}}\r\n                        />\r\n                        <div className=\"form__checkbox\">\r\n                          <div className=\"checkbox__value\"></div>\r\n                        </div>\r\n                      </div>\r\n                  </label>\r\n                  <label className=\"form__label form__label--full-width\">\r\n                      Typ pomieszczenia*\r\n                      <div className=\"form__information-block form__information-block--error\">\r\n                          {formValidationElements.roomType.value}\r\n                      </div>\r\n                      <div className=\"form__element-with-icon\">\r\n                        <select\r\n                            className=\"form__select-element\"\r\n                            value={newRoom.roomType}\r\n                            name=\"roomType\"\r\n                            onChange={elementValueHandler}\r\n                        >\r\n                            <option value=\"\"></option>\r\n                            {roomTypesData.map((e: roomTypeDataType) => (\r\n                                <option\r\n                                    key={e.roomTypeId}\r\n                                    value={e.roomTypeName}\r\n                                >\r\n                                    {e.roomTypeName}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n                        <span className=\"material-symbols-outlined\">arrow_drop_down</span>\r\n                      </div>\r\n                  </label>\r\n                  <label className=\"form__label form__label--full-width\">\r\n                      Dodatkowe informacje\r\n                      <div className=\"form__textarea-element-with-icon\">\r\n                        <textarea\r\n                            className=\"form__textarea-element\"\r\n                            value={newRoom.additionalInformation}\r\n                            name=\"additionalInformation\"\r\n                            onChange={elementValueHandler}\r\n                        />\r\n                        <span className=\"material-symbols-outlined\">height</span>\r\n                      </div>\r\n                  </label>\r\n                  <label className=\"form__label form__label--full-width\">\r\n                      Data dodania\r\n                      <input\r\n                          className=\"form__input-element\"\r\n                          type=\"datetime-local\"\r\n                          value={dateStringToDateTimeInputFormat(newRoom.dateAdded)}\r\n                          disabled\r\n                      />\r\n                  </label>\r\n                  <div className=\"form__information-block form__information-block--error form__information-block--full-width\">\r\n                    {formValidationMessage}\r\n                  </div>\r\n                  <div className=\"form__group\">\r\n                      <input\r\n                          className=\"form__button-element\"\r\n                          type=\"reset\"\r\n                          value=\"Wyczyść\"\r\n                          onClick={() => resetFormValues()}\r\n                      />\r\n                      <input\r\n                          className=\"form__button-element\"\r\n                          type=\"button\"\r\n                          value=\"Dodaj\"\r\n                          onClick={() => addRoomToList()}\r\n                      />\r\n                  </div>\r\n              </form>\r\n          </div>\r\n      </>\r\n  )\r\n}\r\n\r\nexport default AddRoomModalWindow;\r\n","import React, { useState } from \"react\";\r\nimport { useAppDispatch, useAppSelector } from \"../../../../hooks/redux-hooks\";\r\nimport { ADD_NOTIFICATION, CLOSE_MODAL_WINDOW } from \"../../../../redux/slices/globalSettingsSlice\";\r\nimport { ADD_SCREEN } from \"../../../../redux/slices/screensPageSlice\";\r\nimport { AppDispatch, RootState } from \"../../../../redux/store\";\r\nimport { roomDataType } from \"../../../../types/roomDataType\";\r\nimport { screenDataType } from \"../../../../types/screenDataType\";\r\nimport { dateStringToDateTimeInputFormat } from \"../../../../utils/dateStringToDateTimeInputFormat\";\r\n\r\nfunction AddScreenModalWindow() {\r\n  const screensData: screenDataType[] = useAppSelector((state: RootState) => state.screensPage.value);\r\n  const roomsData: roomDataType[] = useAppSelector((state: RootState) => state.roomsPage.value);\r\n\r\n  const dispatch: AppDispatch = useAppDispatch();\r\n\r\n  interface newScreenElement {\r\n    screenId: number;\r\n    screenName: string;\r\n    roomName: string;\r\n    screenLocation: string;\r\n    screenStatus: boolean;\r\n    screenType: string;\r\n    additionalInformation: string;\r\n    dateAdded: string;\r\n    modificationDate: null | string;\r\n  }\r\n\r\n  interface validationElementValue {\r\n    value: string;\r\n    correctValidation: boolean;\r\n  }\r\n\r\n  type validationElementName = 'screenName' | 'roomName' | 'screenLocation' | 'screenType';\r\n\r\n  type formValidationElements = {\r\n    [key in validationElementName]: validationElementValue;\r\n  }\r\n\r\n  const generateScreenId = (): number => {\r\n    let newIdValue: number;\r\n\r\n    if (screensData.length > 0) {\r\n      const [lastIdValue]: number[] = screensData\r\n        .map((e: screenDataType) => e.screenId)\r\n        .sort((a, b) => b - a);\r\n      newIdValue = lastIdValue + 1;\r\n      return newIdValue;\r\n      \r\n    } else {\r\n      newIdValue = 1;\r\n      return newIdValue;\r\n    }\r\n  };\r\n\r\n  const initialNewScreenData: newScreenElement = {\r\n    screenId: generateScreenId(),\r\n    screenName: '',\r\n    roomName: '',\r\n    screenLocation: '',\r\n    screenStatus: true,\r\n    screenType: '',\r\n    additionalInformation: '',\r\n    dateAdded: new Date().toJSON(),\r\n    modificationDate: null\r\n  };\r\n\r\n  const [newScreen, setNewScreen] = useState<newScreenElement>(initialNewScreenData);\r\n\r\n  const initialFormValidationElementsData: formValidationElements = {\r\n    screenName: { value: '', correctValidation: true },\r\n    roomName: { value: '', correctValidation: true },\r\n    screenLocation: { value: '', correctValidation: true },\r\n    screenType: { value: '', correctValidation: true }\r\n  };\r\n\r\n  const [formValidationElements, setFormValidationElements] = useState<formValidationElements>(initialFormValidationElementsData);\r\n\r\n  const [formErrorMessage, setFormErrorMessage] = useState<string>('');\r\n\r\n  const validationErrorsData = Object.values(formValidationElements).filter((key) => key.correctValidation == false && key.value.length > 0).map((key) => [key.value]);\r\n\r\n  const formValidationMessage: JSX.Element = (\r\n    <>\r\n      <p className=\"information-block__title\">{formErrorMessage}</p>\r\n      <ul className=\"information-block__list\">\r\n        {validationErrorsData.map((e, index) => <li key={index} className=\"list__element\">{e}</li>)}\r\n      </ul>\r\n    </>\r\n  );\r\n\r\n  const elementValueHandler = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement>): void => {\r\n    setNewScreen((prevState: newScreenElement) => {return {\r\n      ...prevState,\r\n      [e.target.name]: e.target.value\r\n    }})\r\n  };\r\n\r\n  const validateScreenNameInput = () => {\r\n    if (newScreen.screenName == \"\") {\r\n      setFormValidationElements((prevState: formValidationElements) => {\r\n        return {...prevState, screenName: {value: 'Wprowadź nazwę ekranu', correctValidation: false}}\r\n      });\r\n      return false;\r\n\r\n    } else {\r\n      setFormValidationElements((prevState: formValidationElements) => {\r\n        return {...prevState, screenName: {value: '', correctValidation: true}}\r\n      });\r\n      return true;\r\n    }\r\n  };\r\n\r\n  const validateRoomNameInput = () => {\r\n    const screenRoomsData = screensData.map(e => e.roomName.toUpperCase())\r\n\r\n    if (newScreen.roomName == \"\") {\r\n      setFormValidationElements((prevState: formValidationElements) => {\r\n        return {...prevState, roomName: {value: 'Wybierz pomieszczenie', correctValidation: false}}\r\n      });\r\n      return false;\r\n\r\n    } else if (screenRoomsData.includes(newScreen.roomName.toUpperCase())) {\r\n      setFormValidationElements((prevState: formValidationElements) => {\r\n        return {...prevState, roomName: {value: 'Dane pomieszczenie posiada już swój ekran', correctValidation: false}}\r\n      });\r\n      return false;\r\n\r\n    } else {\r\n      setFormValidationElements((prevState: formValidationElements) => {\r\n        return {...prevState, roomName: {value: '', correctValidation: true}}\r\n      });\r\n      return true;\r\n    }\r\n  };\r\n\r\n  const validateScreenLocationInput = () => {\r\n    if (newScreen.screenLocation == \"\") {\r\n      setFormValidationElements((prevState: formValidationElements) => {\r\n        return {...prevState, screenLocation: {value: 'Wprowadź lokalizację ekranu', correctValidation: false}}\r\n      });\r\n      return false;\r\n\r\n    } else {\r\n      setFormValidationElements((prevState: formValidationElements) => {\r\n        return {...prevState, screenLocation: {value: '', correctValidation: true}}\r\n      });\r\n      return true;\r\n    }\r\n  };\r\n\r\n  const validateScreenTypeInput = () => {\r\n    if (newScreen.screenType == \"\") {\r\n      setFormValidationElements((prevState: formValidationElements) => {\r\n        return {...prevState, screenType: {value: 'Wybierz rodzaj ekranu', correctValidation: false}}\r\n      });\r\n      return false;\r\n\r\n    } else {\r\n      setFormValidationElements((prevState: formValidationElements) => {\r\n        return {...prevState, screenType: {value: '', correctValidation: true}}\r\n      });\r\n      return true;\r\n    }\r\n  };\r\n\r\n  const addScreenToList = (): void => {\r\n    const correctValidationScreenName: boolean = validateScreenNameInput();\r\n    const correctValidationRoomName: boolean = validateRoomNameInput();\r\n    const correctValidationScreenLocation: boolean = validateScreenLocationInput();\r\n\r\n    const correctValidationScreenType: boolean = validateScreenTypeInput();\r\n\r\n    const correctValidation: boolean =\r\n    correctValidationScreenName &&\r\n    correctValidationRoomName &&\r\n    correctValidationScreenLocation &&\r\n    correctValidationScreenType\r\n      ? true\r\n      : false;\r\n\r\n    if (correctValidation) {\r\n      setFormErrorMessage('');\r\n      dispatch(ADD_SCREEN(newScreen));\r\n      dispatch(ADD_NOTIFICATION({notificationName: `Dodano nowy ekran o nazwie '${newScreen.screenName}'`, notificationDate: new Date().toJSON(), seenNotification: false})) ;\r\n      dispatch(CLOSE_MODAL_WINDOW());\r\n    } else {\r\n      setFormErrorMessage('Sprawdź poprawność wypełnienia formularza');\r\n    }\r\n  };\r\n\r\n  const resetFormValues = (): void => {\r\n    setFormValidationElements(initialFormValidationElementsData);\r\n    setFormErrorMessage('');\r\n    setNewScreen(initialNewScreenData);\r\n  };\r\n\r\n  return (\r\n      <>\r\n          <div className=\"window__header\">\r\n              <div className=\"header__title\">Dodawanie ekranu</div>\r\n              <div className=\"header__nav\">\r\n                  <button className=\"nav__button\" onClick={() => {dispatch(CLOSE_MODAL_WINDOW())}}>\r\n                    <span className=\"material-symbols-outlined\">close</span>\r\n                  </button>\r\n              </div>\r\n          </div>\r\n          <div className=\"window__description\">\r\n              Lorem ipsum dolor sit amet consectetur adipisicing elit. Distinctio, aliquid! Recusandae modi nam quis delectus dolore voluptatem, tempora neque quaerat culpa inventore, illo alias debitis necessitatibus libero. Dicta, laborum vitae in impedit delectus itaque iusto.\r\n          </div>\r\n          <div className=\"window__content\">\r\n              <form className=\"content__form\">\r\n                  <label className=\"form__label\">\r\n                      ID\r\n                      <input \r\n                          className=\"form__input-element\" \r\n                          type=\"number\" \r\n                          value={newScreen.screenId} \r\n                          disabled \r\n                      />\r\n                  </label>\r\n                  <label className=\"form__label form__label--three-width\">\r\n                      Nazwa ekranu*\r\n                      <div className=\"form__information-block form__information-block--error\">\r\n                          {formValidationElements.screenName.value}\r\n                      </div>\r\n                      <input\r\n                          className=\"form__input-element\"\r\n                          type=\"text\"\r\n                          value={newScreen.screenName}\r\n                          name=\"screenName\"\r\n                          onChange={elementValueHandler}\r\n                      />\r\n                  </label>\r\n                  <label className=\"form__label form__label--two-width\">\r\n                      Rodzaj ekranu*\r\n                      <div className=\"form__information-block form__information-block--error\">\r\n                          {formValidationElements.screenType.value}\r\n                      </div>\r\n                      <div className=\"form__element-with-icon\">\r\n                        <select\r\n                            className=\"form__select-element\"\r\n                            value={newScreen.screenType}\r\n                            name=\"screenType\"\r\n                            onChange={elementValueHandler}\r\n                        >\r\n                            <option value=\"\"></option>\r\n                            <option value=\"horizontal\">Poziomo</option>\r\n                            <option value=\"vertical\">Pionowo</option>\r\n                        </select>\r\n                        <span className=\"material-symbols-outlined\">arrow_drop_down</span>\r\n                      </div>\r\n                  </label>\r\n                  <label className=\"form__label form__label--two-width\">\r\n                      Ekran dla pomieszczenia*\r\n                      <div className=\"form__information-block form__information-block--error\">\r\n                          {formValidationElements.roomName.value}\r\n                      </div>\r\n                      <div className=\"form__element-with-icon\">\r\n                        <select\r\n                            className=\"form__select-element\"\r\n                            value={newScreen.roomName}\r\n                            name=\"roomName\"\r\n                            onChange={elementValueHandler}\r\n                        >\r\n                            <option value=\"\"></option>\r\n                            {roomsData.map((e: roomDataType) => (\r\n                                <option\r\n                                    key={e.roomId}\r\n                                    value={e.roomName}\r\n                                >\r\n                                    {e.roomName}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n                        <span className=\"material-symbols-outlined\">arrow_drop_down</span>\r\n                      </div>\r\n                  </label>\r\n                  <label className=\"form__label form__label--two-width\">\r\n                      Lokalizacja ekranu*\r\n                      <div className=\"form__information-block form__information-block--error\">\r\n                          {formValidationElements.screenLocation.value}\r\n                      </div>\r\n                      <input\r\n                          className=\"form__input-element\"\r\n                          type=\"text\"\r\n                          value={newScreen.screenLocation}\r\n                          name=\"screenLocation\"\r\n                          onChange={elementValueHandler}\r\n                      />\r\n                  </label>\r\n                  <label className=\"form__label form__label--two-width\">\r\n                      Status ekranu*\r\n                      <div className=\"from__group\">\r\n                        <div className={newScreen.screenStatus ? \"form__information-block form__information-block--active\" : \"form__information-block form__information-block--default\"}>\r\n                          {newScreen.screenStatus ? 'Ekran aktywny' : 'Ekran nieaktywny'}\r\n                        </div>\r\n                        <input\r\n                            className=\"form__checkbox-element\"\r\n                            type=\"checkbox\"\r\n                            checked={newScreen.screenStatus}\r\n                            name=\"screenStatus\"\r\n                            onChange={(e) => {setNewScreen((prevState: newScreenElement) => {return {\r\n                              ...prevState,\r\n                              [e.target.name]: e.target.checked\r\n                            }})}}\r\n                        />\r\n                        <div className=\"form__checkbox\">\r\n                          <div className=\"checkbox__value\"></div>\r\n                        </div>\r\n                      </div>\r\n                  </label>\r\n                  <label className=\"form__label form__label--full-width\">\r\n                      Dodatkowe informacje\r\n                      <div className=\"form__textarea-element-with-icon\">\r\n                        <textarea\r\n                            className=\"form__textarea-element\"\r\n                            value={newScreen.additionalInformation}\r\n                            name=\"additionalInformation\"\r\n                            onChange={elementValueHandler}\r\n                        />\r\n                        <span className=\"material-symbols-outlined\">height</span>\r\n                      </div>\r\n                  </label>\r\n                  <label className=\"form__label form__label--full-width\">\r\n                      Data dodania\r\n                      <input\r\n                          className=\"form__input-element\"\r\n                          type=\"datetime-local\"\r\n                          value={dateStringToDateTimeInputFormat(newScreen.dateAdded)}\r\n                          disabled\r\n                      />\r\n                  </label>\r\n                  <div className=\"form__information-block form__information-block--error form__information-block--full-width\">\r\n                    {formValidationMessage}\r\n                  </div>\r\n                  <div className=\"form__group\">\r\n                      <input\r\n                          className=\"form__button-element\"\r\n                          type=\"reset\"\r\n                          value=\"Wyczyść\"\r\n                          onClick={() => resetFormValues()}\r\n                      />\r\n                      <input\r\n                          className=\"form__button-element\"\r\n                          type=\"button\"\r\n                          value=\"Dodaj\"\r\n                          onClick={() => addScreenToList()}\r\n                      />\r\n                  </div>\r\n              </form>\r\n          </div>\r\n      </>\r\n  )\r\n}\r\n\r\nexport default AddScreenModalWindow;\r\n","import React from 'react';\r\nimport { NavigateFunction, useNavigate } from 'react-router-dom';\r\nimport { useAppDispatch, useAppSelector } from '../../../hooks/redux-hooks';\r\nimport { REMOVE_EMPLOYEE } from '../../../redux/slices/employeeresPageSlice';\r\nimport { ADD_NOTIFICATION, CLOSE_MODAL_WINDOW } from '../../../redux/slices/globalSettingsSlice';\r\nimport { REMOVE_MEETING } from '../../../redux/slices/meetingsPageSlice';\r\nimport { REMOVE_ROOM } from '../../../redux/slices/roomsPageSlice';\r\nimport { REMOVE_SCREEN } from '../../../redux/slices/screensPageSlice';\r\nimport { AppDispatch, RootState } from '../../../redux/store';\r\nimport { employeeDataType } from '../../../types/employeeDataType';\r\nimport { meetingDataType } from '../../../types/meetingDataType';\r\nimport { roomDataType } from '../../../types/roomDataType';\r\nimport { screenDataType } from '../../../types/screenDataType';\r\nimport { globalSettingsSliceType } from '../../../types/slices/globalSettingsSliceTypes';\r\nimport { dateStringToDateLocalString } from '../../../utils/dateStringToDateLocalString';\r\n\r\nfunction DeleteAgreementModalWindow() {\r\n  const globalSettingsData: globalSettingsSliceType = useAppSelector((state: RootState) => state.globalSettings);\r\n  const meetingsData: meetingDataType[] = useAppSelector((state: RootState) => state.meetingsPage.value);\r\n  const roomsData: roomDataType[] = useAppSelector((state: RootState) => state.roomsPage.value);\r\n  const employeeresData: employeeDataType[] = useAppSelector((state: RootState) => state.employeeresPage.value);\r\n  const screensData: screenDataType[] = useAppSelector((state: RootState) => state.screensPage.value);\r\n\r\n  const dispatch: AppDispatch = useAppDispatch();\r\n\r\n  const navigate: NavigateFunction = useNavigate();\r\n\r\n  const getDeleteAgreementModalWindowContent = (): JSX.Element => {\r\n    const agreementIndexElement: number | null = globalSettingsData.agreementIndexElement;\r\n\r\n    if (agreementIndexElement != null && agreementIndexElement >= 0) {\r\n      switch (globalSettingsData.agreementDataType) {\r\n        case \"meetingsData\":\r\n          return (\r\n            <>\r\n              <div className=\"window__description\">\r\n                Czy chcesz usunąć spotkanie o nazwie <span className=\"description__element-highlighted\">{meetingsData[agreementIndexElement].meetingName}</span> zaplanowane na <span className=\"description__element-highlighted\">{new Date(meetingsData[agreementIndexElement].meetingDate).toLocaleDateString()}</span>?\r\n                <p className=\"description__paragraph\">Pamiętaj o tym, że dany element może być również używany przez inne dane istniejące na danej platformie. Lorem ipsum dolor sit amet consectetur adipisicing elit. Fuga, nesciunt aliquam molestiae quaerat eligendi at!</p>\r\n              </div>\r\n              <div className=\"window__content\">\r\n                <form className=\"content__form\">\r\n                  <div className=\"form__group\">\r\n                    <input \r\n                      type=\"button\" \r\n                      className=\"form__button-element\" \r\n                      value=\"Anuluj\" \r\n                      onClick={() => {dispatch(CLOSE_MODAL_WINDOW())}}\r\n                    />\r\n                    <input \r\n                      type=\"button\" \r\n                      className=\"form__button-element\" \r\n                      value=\"Usuń\" \r\n                      onClick={() => {\r\n                        dispatch(REMOVE_MEETING(agreementIndexElement)),\r\n                        dispatch(ADD_NOTIFICATION({notificationName: `Usunięto spotkanie o nazwie '${meetingsData[agreementIndexElement].meetingName}' zaplanowane na ${dateStringToDateLocalString(meetingsData[agreementIndexElement].meetingDate)}`, notificationDate: new Date().toJSON(), seenNotification: false})),  \r\n                        dispatch(CLOSE_MODAL_WINDOW()), \r\n                        navigate('/platform/meetings')\r\n                      }}/>\r\n                  </div>\r\n                  </form>\r\n                </div>\r\n              </>\r\n          );\r\n\r\n        case \"roomsData\":\r\n          return (\r\n            <>\r\n              <div className=\"window__description\">\r\n                Czy chcesz usunąć pomieszczenie o nazwie <span className=\"description__element-highlighted\">{roomsData[agreementIndexElement].roomName}</span>?\r\n                <p className=\"description__paragraph\">Pamiętaj o tym, że dany element może być również używany przez inne dane istniejące na danej platformie. Lorem ipsum dolor sit amet consectetur adipisicing elit. Fuga, nesciunt aliquam molestiae quaerat eligendi at!</p>\r\n              </div>\r\n              <div className=\"window__content\">\r\n                <form className=\"content__form\">\r\n                  <div className=\"form__group\">\r\n                    <input \r\n                      type=\"button\" \r\n                      className=\"form__button-element\" \r\n                      value=\"Anuluj\" \r\n                      onClick={() => {dispatch(CLOSE_MODAL_WINDOW())}}\r\n                    />\r\n                    <input \r\n                      type=\"button\" \r\n                      className=\"form__button-element\" \r\n                      value=\"Usuń\" \r\n                      onClick={() => {\r\n                        dispatch(REMOVE_ROOM(agreementIndexElement)),\r\n                        dispatch(ADD_NOTIFICATION({notificationName: `Usunięto pomieszczenie o nazwie '${roomsData[agreementIndexElement].roomName}'`, notificationDate: new Date().toJSON(), seenNotification: false})),  \r\n                        dispatch(CLOSE_MODAL_WINDOW()), \r\n                        navigate('/platform/rooms')\r\n                      }}/>\r\n                  </div>\r\n                  </form>\r\n                </div>\r\n              </>\r\n          );\r\n\r\n        case \"employeeresData\":\r\n          return (\r\n            <>\r\n              <div className=\"window__description\">\r\n                Czy chcesz usunąć pracownika o nazwie <span className=\"description__element-highlighted\">{employeeresData[agreementIndexElement].employeeName}</span>?\r\n                <p className=\"description__paragraph\">Pamiętaj o tym, że dany element może być również używany przez inne dane istniejące na danej platformie. Lorem ipsum dolor sit amet consectetur adipisicing elit. Fuga, nesciunt aliquam molestiae quaerat eligendi at!</p>\r\n              </div>\r\n              <div className=\"window__content\">\r\n                <form className=\"content__form\">\r\n                  <div className=\"form__group\">\r\n                    <input \r\n                      type=\"button\" \r\n                      className=\"form__button-element\" \r\n                      value=\"Anuluj\" \r\n                      onClick={() => {dispatch(CLOSE_MODAL_WINDOW())}}\r\n                    />\r\n                    <input \r\n                      type=\"button\" \r\n                      className=\"form__button-element\" \r\n                      value=\"Usuń\" \r\n                      onClick={() => {\r\n                        dispatch(REMOVE_EMPLOYEE(agreementIndexElement)),\r\n                        dispatch(ADD_NOTIFICATION({notificationName: `Usunięto informacje o pracowniku ${employeeresData[agreementIndexElement].employeeName}`, notificationDate: new Date().toJSON(), seenNotification: false})),  \r\n                        dispatch(CLOSE_MODAL_WINDOW()), \r\n                        navigate('/platform/employeeres')\r\n                      }}/> \r\n                    </div>\r\n                  </form>\r\n                </div>\r\n              </>\r\n          );\r\n            \r\n        case \"screensData\":\r\n          return (\r\n            <>\r\n              <div className=\"window__description\">\r\n                Czy chcesz usunąć ekran o nazwie <span className=\"description__element-highlighted\">{screensData[agreementIndexElement].screenName}</span>?\r\n                <p className=\"description__paragraph\">Pamiętaj o tym, że dany element może być również używany przez inne dane istniejące na danej platformie. Lorem ipsum dolor sit amet consectetur adipisicing elit. Fuga, nesciunt aliquam molestiae quaerat eligendi at!</p>\r\n              </div>\r\n              <div className=\"window__content\">\r\n                <form className=\"content__form\">\r\n                  <div className=\"form__group\">\r\n                    <input \r\n                      type=\"button\" \r\n                      className=\"form__button-element\" \r\n                      value=\"Anuluj\" \r\n                      onClick={() => {dispatch(CLOSE_MODAL_WINDOW())}}\r\n                    />\r\n                    <input \r\n                      type=\"button\" \r\n                      className=\"form__button-element\" \r\n                      value=\"Usuń\" \r\n                      onClick={() => {\r\n                        dispatch(REMOVE_SCREEN(agreementIndexElement)),\r\n                        dispatch(ADD_NOTIFICATION({notificationName: `Usunięto ekran o nazwie: ${screensData[agreementIndexElement].screenName}`, notificationDate: new Date().toJSON(), seenNotification: false})),  \r\n                        dispatch(CLOSE_MODAL_WINDOW()), \r\n                        navigate('/platform/screens')\r\n                      }}/>\r\n                    </div>\r\n                  </form>\r\n                </div>\r\n              </>\r\n          );\r\n            \r\n        default:\r\n          return (\r\n            <>\r\n              <div className=\"window__description\">\r\n                Lorem ipsum dolor sit amet consectetur adipisicing elit. Illum, eum deleniti odit maxime magni omnis cum vel distinctio ea aliquam, harum praesentium et quasi qui accusantium delectus sed? Esse a, nostrum soluta itaque tempore quidem!\r\n              </div>\r\n              <div className=\"window__content\">\r\n                Lorem ipsum dolor sit amet consectetur.\r\n              </div>\r\n            </>\r\n          );\r\n    }\r\n    } else {\r\n      return (\r\n        <>\r\n          <div className=\"window__description\">\r\n            Lorem ipsum dolor sit amet consectetur adipisicing elit. Illum, eum deleniti odit maxime magni omnis cum vel distinctio ea aliquam, harum praesentium et quasi qui accusantium delectus sed? Esse a, nostrum soluta itaque tempore quidem!\r\n          </div>\r\n          <div className=\"window__content\">\r\n            Lorem ipsum dolor sit amet consectetur.\r\n          </div>\r\n        </>\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n      <>\r\n        <div className=\"window__header\">\r\n          <div className=\"header__title\">Usuwanie elementu</div>\r\n          <div className=\"header__nav\">\r\n            <div\r\n              className=\"nav__button\"\r\n              onClick={() => {\r\n                dispatch(CLOSE_MODAL_WINDOW());\r\n              } }\r\n            >\r\n              <span className=\"material-symbols-outlined\">close</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {getDeleteAgreementModalWindowContent()}\r\n      </>\r\n  )\r\n}\r\n\r\nexport default DeleteAgreementModalWindow;","import React, { useEffect, useState } from \"react\";\r\nimport { useAppDispatch, useAppSelector } from \"../../../../hooks/redux-hooks\";\r\nimport { UPDATE_EMPLOYEE } from \"../../../../redux/slices/employeeresPageSlice\";\r\nimport { ADD_NOTIFICATION, CLOSE_MODAL_WINDOW } from \"../../../../redux/slices/globalSettingsSlice\";\r\nimport { AppDispatch, RootState } from \"../../../../redux/store\";\r\nimport { employeeDataType } from \"../../../../types/employeeDataType\";\r\nimport { employeePositionDataType } from \"../../../../types/employeePositionDataType\";\r\nimport { globalSettingsSliceType } from \"../../../../types/slices/globalSettingsSliceTypes\";\r\nimport { dateStringToDateTimeInputFormat } from \"../../../../utils/dateStringToDateTimeInputFormat\";\r\n\r\nfunction EditEmployeeModalWindow() {\r\n  const globalSettingsData: globalSettingsSliceType = useAppSelector((state: RootState) => state.globalSettings);\r\n  const editEmployeeElement: employeeDataType | null = globalSettingsData.editEmployeeElement;\r\n  const employeeresData: employeeDataType[] = useAppSelector((state: RootState) => state.employeeresPage.value);\r\n  const employeePositionsData: employeePositionDataType[] = useAppSelector((state: RootState) => state.employeePositions.value);\r\n\r\n  const dispatch: AppDispatch = useAppDispatch();\r\n\r\n  interface editedEmployeeElement {\r\n    employeeId: number;\r\n    employeeName: string;\r\n    employeePosition: string;\r\n    employeeStatus: boolean;\r\n    employeeCode: number | null;\r\n    additionalInformation: string;\r\n    dateAdded: string;\r\n    modificationDate: string;\r\n  }\r\n\r\n  interface validationElementValue {\r\n    value: string;\r\n    correctValidation: boolean;\r\n  }\r\n\r\n  type validationElementName = 'employeeName' | 'employeePosition' | 'employeeCode' | 'checkAvailabilityEmployeePosition';\r\n\r\n  type formValidationElements = {\r\n    [key in validationElementName]: validationElementValue;\r\n  }\r\n\r\n  const initialEditedEmployeeData: editedEmployeeElement = {\r\n    employeeId: editEmployeeElement!.employeeId,\r\n    employeeName: editEmployeeElement!.employeeName,\r\n    employeePosition: editEmployeeElement!.employeePosition,\r\n    employeeStatus: editEmployeeElement!.employeeStatus,\r\n    employeeCode: editEmployeeElement!.employeeCode,\r\n    additionalInformation: editEmployeeElement!.additionalInformation ? editEmployeeElement!.additionalInformation : '',\r\n    dateAdded: editEmployeeElement!.dateAdded,\r\n    modificationDate: new Date().toJSON()\r\n  };\r\n\r\n  const initialClearEditedEmployeeData: editedEmployeeElement = {\r\n    employeeId: editEmployeeElement!.employeeId,\r\n    employeeName: '',\r\n    employeePosition: '',\r\n    employeeStatus: true,\r\n    employeeCode: null,\r\n    additionalInformation: '',\r\n    dateAdded: editEmployeeElement!.dateAdded,\r\n    modificationDate: new Date().toJSON()\r\n  };\r\n\r\n  const [editedEmployee, setEditedEmployee] = useState<editedEmployeeElement>(initialEditedEmployeeData);\r\n\r\n  const initialFormValidationElementsData: formValidationElements = {\r\n    employeeName: { value: '', correctValidation: true },\r\n    employeePosition: { value: '', correctValidation: true },\r\n    employeeCode: { value: '', correctValidation: true },\r\n    checkAvailabilityEmployeePosition: { value: '', correctValidation: true }\r\n  };\r\n\r\n  const [formValidationElements, setFormValidationElements] = useState<formValidationElements>(initialFormValidationElementsData);\r\n\r\n  const [formErrorMessage, setFormErrorMessage] = useState<string>('');\r\n\r\n  const validationErrorsData = Object.values(formValidationElements).filter((key) => key.correctValidation == false && key.value.length > 0).map((key) => [key.value]);\r\n\r\n  const formValidationMessage: JSX.Element = (\r\n    <>\r\n      <p className=\"information-block__title\">{formErrorMessage}</p>\r\n      <ul className=\"information-block__list\">\r\n        {validationErrorsData.map((e, index) => <li key={index} className=\"list__element\">{e}</li>)}\r\n      </ul>\r\n    </>\r\n  );\r\n\r\n  const [currentEmployeePositionElement]: employeePositionDataType[] = employeePositionsData.filter((e: employeePositionDataType) => e.employeePositionName == editedEmployee.employeePosition);\r\n\r\n  const checkAvailabilityEmployeePosition = (): void => {\r\n    if (!currentEmployeePositionElement) {\r\n      setEditedEmployee((prevState: editedEmployeeElement) => {return {\r\n        ...prevState, \r\n        employeePosition: ''}});\r\n      setFormErrorMessage('Uwaga!');\r\n      setFormValidationElements((prevState: formValidationElements) => {return {\r\n        ...prevState,\r\n        checkAvailabilityEmployeePosition: {value: 'Brak danego stanowiska w danych o stanowiskach pracowników (Pole formularza: \"Stanowisko pracownika\" zostało zresetowane)', correctValidation: false}}});\r\n    }\r\n  };\r\n\r\n  const elementValueHandler = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement>): void => {\r\n    setEditedEmployee((prevState: editedEmployeeElement) => {return {\r\n      ...prevState,\r\n      [e.target.name]: e.target.value\r\n    }})\r\n  };\r\n\r\n  const elementNumberValueHandler = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement>): void => {\r\n    setEditedEmployee((prevState: editedEmployeeElement) => {return {\r\n      ...prevState,\r\n      [e.target.name]: parseInt(e.target.value)\r\n    }})\r\n  };\r\n\r\n  const validateEmployeeNameInput = () => {\r\n    if (editedEmployee.employeeName == \"\") {\r\n      setFormValidationElements((prevState: formValidationElements) => {\r\n        return {...prevState, employeeName: {value: 'Wprowadź nazwę pracownika', correctValidation: false}}\r\n      });\r\n      return false;\r\n\r\n    } else {\r\n      setFormValidationElements((prevState: formValidationElements) => {\r\n        return {...prevState, employeeName: {value: '', correctValidation: true}}\r\n      });\r\n      return true;\r\n    }\r\n  };\r\n\r\n  const validateEmployeePositionInput = () => {\r\n    if (editedEmployee.employeePosition == \"\") {\r\n      setFormValidationElements((prevState: formValidationElements) => {\r\n        return {...prevState, employeePosition: {value: 'Wybierz stanowisko pracownika', correctValidation: false}}\r\n      });\r\n      return false;\r\n\r\n    } else if (employeePositionsData.length == 0) {\r\n      setFormValidationElements((prevState: formValidationElements) => {\r\n        return {...prevState, employeePosition: {value: 'Brak stanowisk do wyświetlenia. Uzupełnij dane, aby wypełnić formularz', correctValidation: false}}\r\n      });\r\n      return false;\r\n\r\n    } else {\r\n      setFormValidationElements((prevState: formValidationElements) => {\r\n        return {...prevState, employeePosition: {value: '', correctValidation: true}}\r\n      });\r\n      return true;\r\n    }\r\n  };\r\n\r\n  const validateEmployeeCodeInput = () => {\r\n    const employeeCodesData = employeeresData.map((e: employeeDataType) => e.employeeCode);\r\n\r\n    if (editedEmployee.employeeCode) {\r\n      if (editedEmployee.employeeCode.toString().length != 4) {\r\n        setFormValidationElements((prevState: formValidationElements) => {\r\n          return {...prevState, employeeCode: {value: 'Kod musi się składać z 4 liczb', correctValidation: false}}\r\n        });\r\n        return false;\r\n    \r\n      } else if (employeeCodesData.includes(editedEmployee.employeeCode) && editedEmployee.employeeCode != editEmployeeElement!.employeeCode) {\r\n        setFormValidationElements((prevState: formValidationElements) => {\r\n          return {...prevState, employeeCode: {value: 'Kod o takich numerach już istnieje', correctValidation: false}}\r\n        });\r\n        return false;\r\n    \r\n      } else {\r\n        setFormValidationElements((prevState: formValidationElements) => {\r\n          return {...prevState, employeeCode: {value: '', correctValidation: true}}\r\n        });\r\n        return true;\r\n        \r\n      }\r\n\r\n    } else {\r\n      setFormValidationElements((prevState: formValidationElements) => {\r\n        return {...prevState, employeeCode: {value: 'Wprowadź kod pracownika', correctValidation: false}}\r\n      });\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const updateEmployeeElement = (): void => {\r\n    setFormValidationElements(initialFormValidationElementsData);\r\n\r\n    const correctValidationEmployeeName: boolean = validateEmployeeNameInput();\r\n    const correctValidationEmployeePosition: boolean = validateEmployeePositionInput();\r\n    const correctValidationEmployeeCode: boolean = validateEmployeeCodeInput();\r\n\r\n    const correctValidation: boolean =\r\n    correctValidationEmployeeName &&\r\n    correctValidationEmployeePosition &&\r\n    correctValidationEmployeeCode\r\n      ? true\r\n      : false;\r\n\r\n    if (correctValidation) {\r\n      const editEmployeeElementIndex: number = employeeresData.indexOf(editEmployeeElement!)\r\n\r\n      setFormErrorMessage('');\r\n      dispatch(UPDATE_EMPLOYEE({index: editEmployeeElementIndex, value: editedEmployee}));\r\n      dispatch(ADD_NOTIFICATION({notificationName: `Zaktualizowano informacje o pracowniku o ID: ${editedEmployee.employeeId}`, notificationDate: new Date().toJSON(), seenNotification: false})) ;\r\n      dispatch(CLOSE_MODAL_WINDOW());\r\n    } else {\r\n      setFormErrorMessage('Sprawdź poprawność wypełnienia formularza');\r\n    }\r\n  };\r\n\r\n  const resetFormValues = (): void => {\r\n    setFormValidationElements(initialFormValidationElementsData);\r\n    setFormErrorMessage('');\r\n    setEditedEmployee(initialClearEditedEmployeeData);\r\n  };\r\n\r\n  useEffect(() => {\r\n    checkAvailabilityEmployeePosition();\r\n  }, []);\r\n\r\n  return (\r\n      <>\r\n          <div className=\"window__header\">\r\n              <div className=\"header__title\">Edytowanie pracownika</div>\r\n              <div className=\"header__nav\">\r\n                  <button className=\"nav__button\" onClick={() => {dispatch(CLOSE_MODAL_WINDOW())}}>\r\n                    <span className=\"material-symbols-outlined\">close</span>\r\n                  </button>\r\n              </div>\r\n          </div>\r\n          <div className=\"window__description\">\r\n              Lorem ipsum dolor sit amet consectetur adipisicing elit. Distinctio, aliquid! Recusandae modi nam quis delectus dolore voluptatem, tempora neque quaerat culpa inventore, illo alias debitis necessitatibus libero. Dicta, laborum vitae in impedit delectus itaque iusto.\r\n          </div>\r\n          <div className=\"window__content\">\r\n              <form className=\"content__form\">\r\n                  <label className=\"form__label\">\r\n                      ID\r\n                      <input \r\n                          className=\"form__input-element\" \r\n                          type=\"number\" \r\n                          value={editedEmployee.employeeId} \r\n                          disabled \r\n                      />\r\n                  </label>\r\n                  <label className=\"form__label form__label--three-width\">\r\n                      Nazwa pomieszczenia*\r\n                      <div className=\"form__information-block form__information-block--error\">\r\n                          {formValidationElements.employeeName.value}\r\n                      </div>\r\n                      <input\r\n                          className=\"form__input-element\"\r\n                          type=\"text\"\r\n                          value={editedEmployee.employeeName}\r\n                          name=\"employeeName\"\r\n                          onChange={elementValueHandler}\r\n                      />\r\n                  </label>\r\n                  <label className=\"form__label form__label--two-width\">\r\n                      Status pracownika*\r\n                      <div className=\"label__group\">\r\n                        <div className={editedEmployee.employeeStatus ? \"form__information-block form__information-block--active\" : \"form__information-block form__information-block--default\"}>\r\n                            {editedEmployee.employeeStatus ? 'Pracownik aktywny' : 'Pracownik nieaktywny'}\r\n                        </div>\r\n                        <input\r\n                            className=\"form__checkbox-element\"\r\n                            type=\"checkbox\"\r\n                            checked={editedEmployee.employeeStatus}\r\n                            name=\"employeeStatus\"\r\n                            onChange={(e) => {setEditedEmployee((prevState: editedEmployeeElement) => {return {\r\n                              ...prevState,\r\n                              [e.target.name]: e.target.checked\r\n                            }})}}\r\n                        />\r\n                        <div className=\"form__checkbox\">\r\n                          <div className=\"checkbox__value\"></div>\r\n                        </div>\r\n                      </div>\r\n                  </label>\r\n                  <label className=\"form__label form__label--two-width\">\r\n                      Kod pracownika*\r\n                      <div className=\"form__information-block form__information-block--error\">\r\n                          {formValidationElements.employeeCode.value}\r\n                      </div>\r\n                      <input\r\n                          className=\"form__input-element\"\r\n                          type=\"number\"\r\n                          value={editedEmployee.employeeCode ? editedEmployee.employeeCode : 0}\r\n                          min={0}\r\n                          placeholder={editedEmployee.employeeCode === null ? '0000' : ''}\r\n                          name=\"employeeCode\"\r\n                          onChange={elementNumberValueHandler}\r\n                      />\r\n                  </label>\r\n                  <label className=\"form__label form__label--full-width\">\r\n                      Stanowisko pracownika*\r\n                      <div className=\"form__information-block form__information-block--error\">\r\n                          {formValidationElements.employeePosition.value}\r\n                      </div>\r\n                      <div className=\"form__element-with-icon\">\r\n                        <select\r\n                            className=\"form__select-element\"\r\n                            value={editedEmployee.employeePosition}\r\n                            name=\"employeePosition\"\r\n                            onChange={elementValueHandler}\r\n                        >\r\n                            <option value=\"\"></option>\r\n                            {employeePositionsData.map((e: employeePositionDataType) => (\r\n                                <option\r\n                                    key={e.employeePositionId}\r\n                                    value={e.employeePositionName}\r\n                                >\r\n                                    {e.employeePositionName}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n                        <span className=\"material-symbols-outlined\">arrow_drop_down</span>\r\n                      </div>\r\n                  </label>\r\n                  <label className=\"form__label form__label--full-width\">\r\n                      Dodatkowe informacje\r\n                      <div className=\"form__textarea-element-with-icon\">\r\n                        <textarea\r\n                            className=\"form__textarea-element\"\r\n                            value={editedEmployee.additionalInformation}\r\n                            name=\"additionalInformation\"\r\n                            onChange={elementValueHandler}\r\n                        />\r\n                        <span className=\"material-symbols-outlined\">height</span>\r\n                      </div>\r\n                  </label>\r\n                  <label className=\"form__label form__label--full-width\">\r\n                      Data dodania\r\n                      <input\r\n                          className=\"form__input-element\"\r\n                          type=\"datetime-local\"\r\n                          value={dateStringToDateTimeInputFormat(editedEmployee.dateAdded)}\r\n                          disabled\r\n                      />\r\n                  </label>\r\n                  <label className=\"form__label form__label--full-width\">\r\n                      Data modyfikacji\r\n                      <input\r\n                          className=\"form__input-element\"\r\n                          type=\"datetime-local\"\r\n                          value={dateStringToDateTimeInputFormat(editedEmployee.modificationDate)}\r\n                          disabled\r\n                      />\r\n                  </label>\r\n                  <div className=\"form__information-block form__information-block--error form__information-block--full-width\">\r\n                    {formValidationMessage}\r\n                  </div>\r\n                  <div className=\"form__group\">\r\n                      <input\r\n                          className=\"form__button-element\"\r\n                          type=\"reset\"\r\n                          value=\"Wyczyść\"\r\n                          onClick={() => resetFormValues()}\r\n                      />\r\n                      <input\r\n                          className=\"form__button-element\"\r\n                          type=\"button\"\r\n                          value=\"Zaktualizuj\"\r\n                          onClick={() => updateEmployeeElement()}\r\n                      />\r\n                  </div>\r\n              </form>\r\n          </div>\r\n      </>\r\n  )\r\n}\r\n\r\nexport default EditEmployeeModalWindow;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { MAX_HOURS_RESERVATION, MIN_HOURS_RESERVATION } from \"../../../../data/staticPlatformData\";\r\nimport { useAppDispatch, useAppSelector } from \"../../../../hooks/redux-hooks\";\r\nimport { ADD_NOTIFICATION, CLOSE_MODAL_WINDOW } from \"../../../../redux/slices/globalSettingsSlice\";\r\nimport { UPDATE_MEETING } from \"../../../../redux/slices/meetingsPageSlice\";\r\nimport { AppDispatch, RootState } from \"../../../../redux/store\";\r\nimport { employeeDataType } from \"../../../../types/employeeDataType\";\r\nimport { meetingCategoryDataType } from \"../../../../types/meetingCategoryDataType\";\r\nimport { meetingDataType } from \"../../../../types/meetingDataType\";\r\nimport { roomDataType } from \"../../../../types/roomDataType\";\r\nimport { globalSettingsSliceType } from \"../../../../types/slices/globalSettingsSliceTypes\";\r\nimport { convertDateAndTimeStringToMiliseconds } from \"../../../../utils/convertDateAndTimeStringToMiliseconds\";\r\nimport { dateStringToInputFormat } from \"../../../../utils/dateStringToDateInputFormat\";\r\nimport { dateStringToDateTimeInputFormat } from \"../../../../utils/dateStringToDateTimeInputFormat\";\r\n\r\nfunction EditMeetingModalWindow() {\r\n  const globalSettingsData: globalSettingsSliceType = useAppSelector((state: RootState) => state.globalSettings);\r\n  const editMeetingElement: meetingDataType | null = globalSettingsData.editMeetingElement;\r\n  const meetingsData: meetingDataType[] = useAppSelector((state: RootState) => state.meetingsPage.value);\r\n  const roomsData: roomDataType[] = useAppSelector((state: RootState) => state.roomsPage.value);\r\n  const employeeresData: employeeDataType[] = useAppSelector((state: RootState) => state.employeeresPage.value);\r\n  const meetingCategoriesData: meetingCategoryDataType[] = useAppSelector((state: RootState) => state.meetingCategories.value);\r\n\r\n  const dispatch: AppDispatch = useAppDispatch();\r\n\r\n  interface editedMeetingElement {\r\n    meetingId: number;\r\n    meetingName: string;\r\n    meetingCategory: string;\r\n    roomName: string;\r\n    employeeName: string;\r\n    meetingPeopleNumber: number;\r\n    meetingDate: string;\r\n    meetingTimeStart: string;\r\n    meetingTimeEnd: string;\r\n    additionalInformation: string | null;\r\n    dateAdded: string;\r\n    modificationDate: string;\r\n  }\r\n\r\n  interface validationElementValue {\r\n    value: string;\r\n    correctValidation: boolean;\r\n  }\r\n\r\n  type validationElementName = 'meetingName' | 'meetingCategory' | 'roomName' | 'employeeName' | 'meetingPeopleNumber' | 'meetingDate' | 'meetingTimeStart' | 'meetingTimeEnd' | 'roomMeetingsConflictsData' | 'checkAvailabilityRoom' | 'checkAvailabilityMeetingCategory' | 'checkAvailabilityEmployee';\r\n\r\n  type formValidationElements = {\r\n    [key in validationElementName]: validationElementValue;\r\n  }\r\n\r\n  interface roomMeetingsConflictsData {\r\n    meetingName: string;\r\n    meetingStart: string;\r\n    meetingEnd: string;\r\n    meetingStartDateTimeMs: number;\r\n    meetingEndDateTimeMs: number;\r\n  }\r\n\r\n  const initialEditedMeetingData: editedMeetingElement = {\r\n    meetingId: editMeetingElement!.meetingId,\r\n    meetingName: editMeetingElement!.meetingName,\r\n    meetingCategory: editMeetingElement!.meetingCategory,\r\n    roomName: editMeetingElement!.roomName,\r\n    employeeName: editMeetingElement!.employeeName,\r\n    meetingPeopleNumber: editMeetingElement!.meetingPeopleNumber,\r\n    meetingDate: editMeetingElement!.meetingDate,\r\n    meetingTimeStart: editMeetingElement!.meetingTimeStart,\r\n    meetingTimeEnd: editMeetingElement!.meetingTimeEnd,\r\n    additionalInformation: editMeetingElement!.additionalInformation,\r\n    dateAdded: editMeetingElement!.dateAdded,\r\n    modificationDate: new Date().toJSON()\r\n  };\r\n\r\n  const initialClearEditedMeetingData: editedMeetingElement = {\r\n    meetingId: editMeetingElement!.meetingId,\r\n    meetingName: '',\r\n    meetingCategory: '',\r\n    roomName: '',\r\n    employeeName: '',\r\n    meetingPeopleNumber: 0,\r\n    meetingDate: '',\r\n    meetingTimeStart: '',\r\n    meetingTimeEnd: '',\r\n    additionalInformation: '',\r\n    dateAdded: editMeetingElement!.dateAdded,\r\n    modificationDate: new Date().toJSON()\r\n  };\r\n\r\n  const [editedMeeting, setEditedMeeting] = useState<editedMeetingElement>(initialEditedMeetingData);\r\n\r\n  const initialFormValidationElementsData: formValidationElements = {\r\n    meetingName: { value: '', correctValidation: true },\r\n    meetingCategory: { value: '', correctValidation: true },\r\n    roomName: { value: '', correctValidation: true },\r\n    employeeName: { value: '', correctValidation: true },\r\n    meetingPeopleNumber: { value: '', correctValidation: true },\r\n    meetingDate: { value: '', correctValidation: true },\r\n    meetingTimeStart: { value: '', correctValidation: true },\r\n    meetingTimeEnd: { value: '', correctValidation: true },\r\n    roomMeetingsConflictsData: { value: '', correctValidation: true },\r\n    checkAvailabilityRoom: {value: '', correctValidation: true},\r\n    checkAvailabilityMeetingCategory: {value: '', correctValidation: true},\r\n    checkAvailabilityEmployee: {value: '', correctValidation: true}\r\n  };\r\n\r\n  const [formValidationElements, setFormValidationElements] = useState<formValidationElements>(initialFormValidationElementsData);\r\n\r\n  const [formErrorMessage, setFormErrorMessage] = useState<string>('');\r\n\r\n  const validationErrorsData = Object.values(formValidationElements).filter((key) => key.correctValidation == false && key.value.length > 0).map((key) => [key.value]);\r\n\r\n  const formValidationMessage: JSX.Element = (\r\n    <>\r\n      <p className=\"information-block__title\">{formErrorMessage}</p>\r\n      <ul className=\"information-block__list\">\r\n        {validationErrorsData.map((e, index) => <li key={index} className=\"list__element\">{e}</li>)}\r\n      </ul>\r\n    </>\r\n  );\r\n\r\n  const activeEmployeeresData: employeeDataType[] = employeeresData.filter((e: employeeDataType) => e.employeeStatus === true);\r\n  const activeRoomsData: roomDataType[] = roomsData.filter((e: roomDataType) => e.roomStatus === true);\r\n\r\n  const [currentMeetingCategoryElement]: meetingCategoryDataType[] = meetingCategoriesData.filter((e: meetingCategoryDataType) => e.meetingCategoryName == editedMeeting.meetingCategory);\r\n  const [currentEmployeeElement]: employeeDataType[] = employeeresData.filter((e: employeeDataType) => e.employeeName == editedMeeting.employeeName);\r\n\r\n  let minPeopleNumberInRoom: number, maxPeopleNumberInRoom: number;\r\n  const [currentRoomElement]: roomDataType[] = roomsData.filter((e: roomDataType) => e.roomName == editedMeeting.roomName);\r\n\r\n  if (currentRoomElement) {\r\n    minPeopleNumberInRoom = currentRoomElement.minimumRoomPeople;\r\n    maxPeopleNumberInRoom = currentRoomElement.maximumRoomPeople;\r\n  } else {\r\n    minPeopleNumberInRoom = 0;\r\n    maxPeopleNumberInRoom = 0;\r\n  }\r\n  \r\n  const checkAvailabilityRoomName = (): void => {\r\n    if (!currentRoomElement) {\r\n      setEditedMeeting((prevState: editedMeetingElement) => {return {\r\n        ...prevState, \r\n        roomName: '', \r\n        meetingPeopleNumber: 0}});\r\n      setFormErrorMessage('Uwaga!');\r\n      setFormValidationElements((prevState: formValidationElements) => {return {\r\n        ...prevState,\r\n        checkAvailabilityRoom: {value: 'Brak danego pomieszczenia w danych o pomieszczeniach (Pola formularza: \"Pomieszczenie\", \"Ilość osób\" zostały zresetowane)', correctValidation: false}}});\r\n    }\r\n  };\r\n\r\n  const checkAvailabilityMeetingCategory = (): void => {\r\n    if (!currentMeetingCategoryElement) {\r\n      setEditedMeeting((prevState: editedMeetingElement) => {return {\r\n        ...prevState, \r\n        meetingCategory: ''}});\r\n      setFormErrorMessage('Uwaga!');\r\n      setFormValidationElements((prevState: formValidationElements) => {return {\r\n        ...prevState,\r\n        checkAvailabilityMeetingCategory: {value: 'Brak danej kategorii spotkania w danych o kategoriach spotkań (Pole formularza: \"Kategoria spotkania\" zostało zresetowane)', correctValidation: false}}});\r\n    }\r\n  };\r\n\r\n  const checkAvailabilityEmployee = (): void => {\r\n    if (!currentEmployeeElement) {\r\n      setEditedMeeting((prevState: editedMeetingElement) => {return {\r\n        ...prevState, \r\n        employeeName: ''}});\r\n      setFormErrorMessage('Uwaga!');\r\n      setFormValidationElements((prevState: formValidationElements) => {return {\r\n        ...prevState,\r\n        checkAvailabilityEmployee: {value: 'Brak danego pracownika w danych o pracownikach (Pole formularza: \"Organizator\" zostało zresetowane)', correctValidation: false}}});\r\n    }\r\n  };\r\n\r\n  const elementValueHandler = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement>): void => {\r\n    setEditedMeeting((prevState: editedMeetingElement) => {return {\r\n      ...prevState,\r\n      [e.target.name]: e.target.value\r\n    }})\r\n  };\r\n\r\n  const elementNumberValueHandler = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement>): void => {\r\n    setEditedMeeting((prevState: editedMeetingElement) => {return {\r\n      ...prevState,\r\n      [e.target.name]: parseInt(e.target.value)\r\n    }})\r\n  };\r\n\r\n  const validateMeetingNameInput = (): boolean => {\r\n    if (editedMeeting.meetingName == \"\") {\r\n      setFormValidationElements((prevState: formValidationElements) => {\r\n        return {...prevState, meetingName: {value: 'Wprowadź nazwę pomieszczenia', correctValidation: false}}\r\n      });\r\n      return false;\r\n\r\n    } else {\r\n      setFormValidationElements((prevState: formValidationElements) => {\r\n        return {...prevState, meetingName: {value: '', correctValidation: true}}\r\n      });\r\n      return true;\r\n    }\r\n  };\r\n\r\n  const validateMeetingCategoryInput = (): boolean => {\r\n    if (editedMeeting.meetingCategory == \"\") {\r\n      setFormValidationElements((prevState: formValidationElements) => {\r\n        return {...prevState, meetingCategory: {value: 'Wybierz kategorię spotkania', correctValidation: false}}\r\n      });\r\n      return false;\r\n\r\n    } else if (meetingCategoriesData.length == 0) {\r\n      setFormValidationElements((prevState: formValidationElements) => {\r\n        return {...prevState, meetingCategory: {value: 'Brak kategorii do wyświetlenia. Uzupełnij dane, aby wypełnić formularz', correctValidation: false}}\r\n      });\r\n      return false;\r\n\r\n    } else {\r\n      setFormValidationElements((prevState: formValidationElements) => {\r\n        return {...prevState, meetingCategory: {value: '', correctValidation: true}}\r\n      });\r\n      return true;\r\n    }\r\n  };\r\n\r\n  const validateEmployeeNameInput = (): boolean => {\r\n    if (editedMeeting.employeeName == \"\") {\r\n      setFormValidationElements((prevState: formValidationElements) => {\r\n        return {...prevState, employeeName: {value: 'Wybierz organizatora spotkania', correctValidation: false}}\r\n      });\r\n      return false;\r\n\r\n    } else if (employeeresData.length == 0) {\r\n      setFormValidationElements((prevState: formValidationElements) => {\r\n        return {...prevState, employeeName: {value: 'Brak pracowników do wyświetlenia. Uzupełnij dane, aby wyświetlić formularz', correctValidation: false}}\r\n      });\r\n      return false;\r\n\r\n    } else {\r\n      setFormValidationElements((prevState: formValidationElements) => {\r\n        return {...prevState, employeeName: {value: '', correctValidation: true}}\r\n      });\r\n      return true;\r\n    }\r\n  };\r\n\r\n  const validateMeetingDateInput = (): boolean => {\r\n    if (editedMeeting.meetingDate == \"\") {\r\n      setFormValidationElements((prevState: formValidationElements) => {\r\n        return {...prevState, meetingDate: {value: 'Wprowadź datę spotkania', correctValidation: false}}\r\n      });\r\n      return false;\r\n\r\n    } else {\r\n      setFormValidationElements((prevState: formValidationElements) => {\r\n        return {...prevState, meetingDate: {value: '', correctValidation: true}}\r\n      });\r\n      return true;\r\n    }\r\n  };\r\n\r\n  const validateMeetingTimeStartInput = (): boolean => {\r\n    if (editedMeeting.meetingDate == \"\") {\r\n      setFormValidationElements((prevState: formValidationElements) => {\r\n        return {...prevState, meetingTimeStart: {value: '', correctValidation: false}}\r\n      });\r\n      return false;\r\n\r\n    } else if (editedMeeting.meetingTimeStart == \"\") {\r\n      setFormValidationElements((prevState: formValidationElements) => {\r\n        return {...prevState, meetingTimeStart: {value: 'Wprowadź godzinę rozpoczęcia spotkania', correctValidation: false}}\r\n      });\r\n      return false;\r\n\r\n    } else if (editedMeeting.meetingTimeStart < MIN_HOURS_RESERVATION) {\r\n      setFormValidationElements((prevState: formValidationElements) => {\r\n        return {...prevState, meetingTimeStart: {value: `Błędnie wprowadzona godzina rozpoczęcia. Minimalnie od ${MIN_HOURS_RESERVATION}`, correctValidation: false}}\r\n      });\r\n      return false;\r\n\r\n    } else if (editedMeeting.meetingTimeStart >= editedMeeting.meetingTimeEnd) {\r\n      setFormValidationElements((prevState: formValidationElements) => {\r\n        return {...prevState, meetingTimeStart: {value: 'Godzina rozpoczęcia powinna być mniejsza od zakończenia', correctValidation: false}}\r\n      });\r\n      return false;\r\n      \r\n    } else {\r\n      setFormValidationElements((prevState: formValidationElements) => {\r\n        return {...prevState, meetingTimeStart: {value: '', correctValidation: true}}\r\n      });\r\n      return true;\r\n    }\r\n  };\r\n\r\n  const validateMeetingTimeEndInput = (): boolean => {\r\n    if (editedMeeting.meetingDate == \"\") {\r\n      setFormValidationElements((prevState: formValidationElements) => {\r\n        return {...prevState, meetingTimeEnd: {value: '', correctValidation: false}}\r\n      });\r\n      return false;\r\n\r\n    } else if (editedMeeting.meetingTimeEnd == \"\") {\r\n      setFormValidationElements((prevState: formValidationElements) => {\r\n        return {...prevState, meetingTimeEnd: {value: 'Wprowadź godzinę zakończenia spotkania', correctValidation: false}}\r\n      });\r\n      return false;\r\n\r\n    } else if (editedMeeting.meetingTimeEnd > MAX_HOURS_RESERVATION) {\r\n      setFormValidationElements((prevState: formValidationElements) => {\r\n        return {...prevState, meetingTimeEnd: {value: `Błędnie wprowadozna godzina zakończenia. Maksymalnie do ${MAX_HOURS_RESERVATION}`, correctValidation: false}}\r\n      });\r\n      return false;\r\n\r\n    } else if (editedMeeting.meetingTimeEnd <= editedMeeting.meetingTimeStart) {\r\n      setFormValidationElements((prevState: formValidationElements) => {\r\n        return {...prevState, meetingTimeEnd: {value: 'Godzina zakończenia powinna być większa od rozpoczęcia', correctValidation: false}}\r\n      });\r\n      return false;\r\n\r\n    } else {\r\n      setFormValidationElements((prevState: formValidationElements) => {\r\n        return {...prevState, meetingTimeEnd: {value: '', correctValidation: true}}\r\n      });\r\n      return true;\r\n    }\r\n  };\r\n\r\n  const validateMeetingRoomInput = (): boolean => {\r\n    if (editedMeeting.roomName == \"\") {\r\n      setFormValidationElements((prevState: formValidationElements) => {\r\n        return {...prevState, roomName: {value: 'Wybierz pomieszczenie', correctValidation: false}}\r\n      });\r\n      return false;\r\n\r\n    } else {\r\n      setFormValidationElements((prevState: formValidationElements) => {\r\n        return {...prevState, roomName: {value: '', correctValidation: true}}\r\n      });\r\n      return true;\r\n    }\r\n  };\r\n\r\n  const validateMeetingPeopleNumberInput = (): boolean => {\r\n    if (!formValidationElements.roomName.correctValidation) {\r\n      setFormValidationElements((prevState: formValidationElements) => {\r\n        return {...prevState, meetingPeopleNumber: {value: '', correctValidation: false}}\r\n      });\r\n      return false;\r\n\r\n    } else if (isNaN(editedMeeting.meetingPeopleNumber) || editedMeeting.meetingPeopleNumber == 0) {\r\n      setFormValidationElements((prevState: formValidationElements) => {\r\n        return {...prevState, meetingPeopleNumber: {value: 'Wprowadź ilość osób na spotkaniu', correctValidation: false}}\r\n      });\r\n      return false;\r\n\r\n    } else if (editedMeeting.meetingPeopleNumber < minPeopleNumberInRoom || editedMeeting.meetingPeopleNumber > maxPeopleNumberInRoom) {\r\n      setFormValidationElements((prevState: formValidationElements) => {\r\n        return {...prevState, meetingPeopleNumber: {value: 'Wprowadź poprawnie ilość osób na spotkaniu', correctValidation: false}}\r\n      });\r\n      return false;\r\n\r\n    } else {\r\n      setFormValidationElements((prevState: formValidationElements) => {\r\n        return {...prevState, meetingPeopleNumber: {value: '', correctValidation: true}}\r\n      });\r\n      return true;\r\n    }\r\n  };\r\n\r\n  const validateCheckRoomMeetingsConflicts= (): boolean => {\r\n    const [meetingElement]: meetingDataType[] = meetingsData.filter((e: meetingDataType) => e.meetingId === editedMeeting.meetingId);\r\n    const meetingElementIndex: number = meetingsData.indexOf(meetingElement);\r\n    const newMeetingsData: meetingDataType[] = [...meetingsData];\r\n    newMeetingsData.splice(meetingElementIndex, 1);\r\n    \r\n    const meetingRoomDateTimeData: roomMeetingsConflictsData[] = newMeetingsData.filter((e: meetingDataType) => e.roomName == editedMeeting.roomName).map((e: meetingDataType) => {return {\r\n      meetingName: e.meetingName, \r\n      meetingStart: e.meetingTimeStart, \r\n      meetingEnd: e.meetingTimeEnd, \r\n      meetingStartDateTimeMs: convertDateAndTimeStringToMiliseconds(e.meetingDate, e.meetingTimeStart), \r\n      meetingEndDateTimeMs: convertDateAndTimeStringToMiliseconds(e.meetingDate, e.meetingTimeEnd)\r\n    }});\r\n\r\n    const inputMeetingStartMs: number = convertDateAndTimeStringToMiliseconds(editedMeeting.meetingDate, editedMeeting.meetingTimeStart);\r\n    const inputMeetingEndMs: number = convertDateAndTimeStringToMiliseconds(editedMeeting.meetingDate, editedMeeting.meetingTimeEnd);\r\n\r\n    const filteredRoomMeetingsData: roomMeetingsConflictsData[] = meetingRoomDateTimeData.filter((e: roomMeetingsConflictsData) => e.meetingEndDateTimeMs >= inputMeetingStartMs && e.meetingStartDateTimeMs <= inputMeetingEndMs)\r\n\r\n    if (filteredRoomMeetingsData.length > 0) {\r\n      setFormValidationElements((prevState: formValidationElements) => {\r\n        filteredRoomMeetingsData.sort((a, b) => a.meetingStartDateTimeMs - b.meetingStartDateTimeMs);\r\n\r\n        return {...prevState, roomDateTimeMeetingData: {value: `Nie możesz zaktualizować spotkania na dany dzień i w określonych godzinach (${editedMeeting.meetingTimeStart} - ${editedMeeting.meetingTimeEnd}), ponieważ wtedy pomieszczenie jest zajęte ${filteredRoomMeetingsData.map((e: roomMeetingsConflictsData) => ` (${e.meetingStart} - ${e.meetingEnd}: ${e.meetingName})`)}`, correctValidation: false}}\r\n      })\r\n  \r\n      return false;\r\n\r\n    } else {\r\n      setFormValidationElements((prevState: formValidationElements) => {\r\n        return {...prevState, roomDateTimeMeetingData: {value: '', correctValidation: true}}\r\n      })\r\n  \r\n      return true;\r\n    }\r\n  };\r\n\r\n  const updateMeetingElement = (): void => {\r\n    setFormValidationElements(initialFormValidationElementsData);\r\n\r\n    const correctValidationMeetingName: boolean = validateMeetingNameInput();\r\n    const correctValidationMeetingCategory: boolean = validateMeetingCategoryInput();\r\n    const correctValidationMeetingRoom: boolean = validateMeetingRoomInput();\r\n    const correctValidationEmployeeName: boolean = validateEmployeeNameInput();\r\n    const correctValidationPeopleNumber: boolean = validateMeetingPeopleNumberInput();\r\n    const correctValidationMeetingDate: boolean = validateMeetingDateInput();\r\n    const correctValidationMeetingTimeStart: boolean = validateMeetingTimeStartInput();\r\n    const correctValidationMeetingTimeEnd: boolean = validateMeetingTimeEndInput();\r\n    const correctValidationRoomMeetingsConflicts: boolean = validateCheckRoomMeetingsConflicts();\r\n\r\n    const correctValidation: boolean =\r\n    correctValidationMeetingName &&\r\n    correctValidationMeetingCategory &&\r\n    correctValidationMeetingRoom &&\r\n    correctValidationEmployeeName &&\r\n    correctValidationPeopleNumber &&\r\n    correctValidationMeetingDate &&\r\n    correctValidationMeetingTimeStart &&\r\n    correctValidationMeetingTimeEnd &&\r\n    correctValidationRoomMeetingsConflicts\r\n      ? true\r\n      : false;\r\n\r\n    if (correctValidation) {\r\n      const editMeetingElementIndex: number = meetingsData.indexOf(editMeetingElement!)\r\n\r\n      setFormErrorMessage('');\r\n      dispatch(UPDATE_MEETING({index: editMeetingElementIndex, value: editedMeeting}));\r\n      dispatch(ADD_NOTIFICATION({notificationName: `Zaktualizowano spotkanie o ID: ${editedMeeting.meetingId}`, notificationDate: new Date().toJSON(), seenNotification: false})) ;\r\n      dispatch(CLOSE_MODAL_WINDOW());\r\n    } else {\r\n      setFormErrorMessage('Sprawdź poprawność wypełnienia formularza');\r\n    }\r\n  };\r\n\r\n  const resetFormValues = (): void => {\r\n    setFormValidationElements(initialFormValidationElementsData);\r\n    setFormErrorMessage('');\r\n    setEditedMeeting(initialClearEditedMeetingData);\r\n  };\r\n\r\n  useEffect((): void => {\r\n    editedMeeting.roomName.length == 0 ? (\r\n      setFormValidationElements((prevState: formValidationElements) => {\r\n        return {...prevState, meetingPeopleNumber: {value: '', correctValidation: true}}\r\n      })\r\n    ) : null\r\n  }, [editedMeeting.roomName]);\r\n\r\n  useEffect((): void => {\r\n    checkAvailabilityRoomName();\r\n    checkAvailabilityMeetingCategory();\r\n    checkAvailabilityEmployee();\r\n  }, []);\r\n\r\n  return (\r\n      <>\r\n          <div className=\"window__header\">\r\n              <div className=\"header__title\">Edytowanie spotkania</div>\r\n              <div className=\"header__nav\">\r\n                  <button className=\"nav__button\" onClick={() => {dispatch(CLOSE_MODAL_WINDOW())}}>\r\n                    <span className=\"material-symbols-outlined\">close</span>\r\n                  </button>\r\n              </div>\r\n          </div>\r\n          <div className=\"window__description\">\r\n              Lorem ipsum dolor sit amet consectetur adipisicing elit. Distinctio, aliquid! Recusandae modi nam quis delectus dolore voluptatem, tempora neque quaerat culpa inventore, illo alias debitis necessitatibus libero. Dicta, laborum vitae in impedit delectus itaque iusto.\r\n          </div>\r\n          <div className=\"window__content\">\r\n              <form className=\"content__form\">\r\n                  <label className=\"form__label\">\r\n                      ID\r\n                      <input \r\n                          className=\"form__input-element\" \r\n                          type=\"number\" \r\n                          value={editedMeeting.meetingId} \r\n                          disabled \r\n                      />\r\n                  </label>\r\n                  <label className=\"form__label form__label--three-width\">\r\n                      Nazwa spotkania*\r\n                      <div className=\"form__information-block form__information-block--error\">\r\n                          {formValidationElements.meetingName.value}\r\n                      </div>\r\n                      <input\r\n                          className=\"form__input-element\"\r\n                          type=\"text\"\r\n                          value={editedMeeting.meetingName}\r\n                          name=\"meetingName\"\r\n                          onChange={elementValueHandler}\r\n                      />\r\n                  </label>\r\n                  <label className=\"form__label form__label--two-width\">\r\n                      Kategoria spotkania*\r\n                      <div className=\"form__information-block form__information-block--error\">\r\n                          {formValidationElements.meetingCategory.value}\r\n                      </div>\r\n                      <div className=\"form__element-with-icon\">\r\n                        <select\r\n                            className=\"form__select-element\"\r\n                            value={editedMeeting.meetingCategory}\r\n                            name=\"meetingCategory\"\r\n                            onChange={elementValueHandler}\r\n                        >\r\n                            <option value=\"\"></option>\r\n                            {meetingCategoriesData.map((e: meetingCategoryDataType) => (\r\n                                <option\r\n                                    key={e.meetingCategoryId}\r\n                                    value={e.meetingCategoryName}\r\n                                >\r\n                                    {e.meetingCategoryName}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n                        <span className=\"material-symbols-outlined\">arrow_drop_down</span>\r\n                      </div>\r\n                  </label>\r\n                  <label className=\"form__label form__label--two-width\">\r\n                      Organizator*\r\n                      <div className=\"form__information-block form__information-block--error\">\r\n                          {formValidationElements.employeeName.value}\r\n                      </div>\r\n                      <div className=\"form__element-with-icon\">\r\n                        <select\r\n                            className=\"form__select-element\"\r\n                            value={editedMeeting.employeeName}\r\n                            name=\"employeeName\"\r\n                            onChange={elementValueHandler}\r\n                        >\r\n                            <option value=\"\"></option>\r\n                            {activeEmployeeresData.map((e: employeeDataType) => (\r\n                                <option\r\n                                    key={e.employeeId}\r\n                                    value={e.employeeName}\r\n                                >\r\n                                    {e.employeeName}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n                        <span className=\"material-symbols-outlined\">arrow_drop_down</span>\r\n                      </div>\r\n                  </label>\r\n                  <label className=\"form__label form__label--two-width\">\r\n                      Data spotkania*\r\n                      <div className=\"form__information-block form__information-block--error\">\r\n                          {formValidationElements.meetingDate.value}\r\n                      </div>\r\n                      <div className=\"form__element-with-icon\">\r\n                        <input\r\n                            className=\"form__input-element\"\r\n                            type=\"date\"\r\n                            value={dateStringToInputFormat(editedMeeting.meetingDate)}\r\n                            name=\"meetingDate\"\r\n                            onChange={elementValueHandler}\r\n                        />\r\n                        <span className=\"material-symbols-outlined\">calendar_month</span>\r\n                      </div>\r\n                  </label>\r\n                  <label className=\"form__label\">\r\n                      Godzina rozpoczęcia*\r\n                      <div className=\"form__information-block form__information-block--error\">\r\n                          {formValidationElements.meetingTimeStart.value}\r\n                      </div>\r\n                      <div className=\"form__element-with-icon\">\r\n                        <input\r\n                            className=\"form__input-element\"\r\n                            type=\"time\"\r\n                            value={editedMeeting.meetingTimeStart}\r\n                            disabled={editedMeeting.meetingDate.length > 0 ? false : true}\r\n                            placeholder=\"00:00\"\r\n                            name=\"meetingTimeStart\"\r\n                            onChange={elementValueHandler}\r\n                        />\r\n                        <span className=\"material-symbols-outlined\">schedule</span>\r\n                      </div>\r\n                  </label>\r\n                  <label className=\"form__label\">\r\n                      Godzina zakończenia*\r\n                      <div className=\"form__information-block form__information-block--error\">\r\n                          {formValidationElements.meetingTimeEnd.value}\r\n                      </div>\r\n                      <div className=\"form__element-with-icon\">\r\n                        <input\r\n                            className=\"form__input-element\"\r\n                            type=\"time\"\r\n                            value={editedMeeting.meetingTimeEnd}\r\n                            disabled={editedMeeting.meetingDate.length > 0 ? false : true}\r\n                            placeholder=\"00:00\"\r\n                            name=\"meetingTimeEnd\"\r\n                            onChange={elementValueHandler}\r\n                        />\r\n                        <span className=\"material-symbols-outlined\">schedule</span>\r\n                      </div>\r\n                  </label>\r\n                  <label className=\"form__label form__label--two-width\">\r\n                      Pomieszczenie*\r\n                      <div className=\"form__information-block form__information-block--error\">\r\n                          {formValidationElements.roomName.value}\r\n                      </div>\r\n                      <div className=\"form__element-with-icon\">\r\n                        <select\r\n                            className=\"form__select-element\"\r\n                            value={editedMeeting.roomName}\r\n                            name=\"roomName\"\r\n                            onChange={(e) => {elementValueHandler(e), validateMeetingPeopleNumberInput()}}\r\n                        >\r\n                            <option value=\"\"></option>\r\n                            {activeRoomsData.map((e: roomDataType) => (\r\n                                <option \r\n                                    key={e.roomId} \r\n                                    value={e.roomName}\r\n                                >\r\n                                    {e.roomName}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n                        <span className=\"material-symbols-outlined\">arrow_drop_down</span>\r\n                      </div>\r\n                  </label>\r\n                  <label className=\"form__label form__label--two-width\">\r\n                      Ilość osób*\r\n                      <div className=\"form__information-block form__information-block--error\">\r\n                        {formValidationElements.meetingPeopleNumber.value}\r\n                      </div>\r\n                      {editedMeeting.roomName == '' \r\n                        ? null \r\n                        : (\r\n                          <div className=\"form__information-block form__information-block--default\">\r\n                            Min. osób: {minPeopleNumberInRoom == 0 ? 1 : minPeopleNumberInRoom} / Max. osób: {maxPeopleNumberInRoom}\r\n                        </div>                         \r\n                      )}\r\n                      <input\r\n                          className=\"form__input-element\"\r\n                          type=\"number\"\r\n                          value={editedMeeting.meetingPeopleNumber}\r\n                          disabled={editedMeeting.roomName.length > 0 ? false : true}\r\n                          min={0}\r\n                          name=\"meetingPeopleNumber\"\r\n                          onChange={elementNumberValueHandler}\r\n                      />\r\n                  </label>\r\n                  <label className=\"form__label form__label--full-width\">\r\n                      Dodatkowe informacje\r\n                      <div className=\"form__textarea-element-with-icon\">\r\n                        <textarea\r\n                            className=\"form__textarea-element\"\r\n                            value={editedMeeting.additionalInformation ? editedMeeting.additionalInformation : ''}\r\n                            name=\"additionalInformation\"\r\n                            onChange={elementValueHandler}\r\n                        />\r\n                        <span className=\"material-symbols-outlined\">height</span>\r\n                      </div>\r\n                  </label>\r\n                  <label className=\"form__label form__label--full-width\">\r\n                      Data dodania\r\n                      <input\r\n                          className=\"form__input-element\"\r\n                          type=\"datetime-local\"\r\n                          value={dateStringToDateTimeInputFormat(editedMeeting.dateAdded)}\r\n                          disabled\r\n                      />\r\n                  </label>\r\n                  <label className=\"form__label form__label--full-width\">\r\n                      Data modyfikacji\r\n                      <input\r\n                          className=\"form__input-element\"\r\n                          type=\"datetime-local\"\r\n                          value={dateStringToDateTimeInputFormat(editedMeeting.modificationDate)}\r\n                          disabled\r\n                      />\r\n                  </label>\r\n                  <div className=\"form__information-block form__information-block--error form__information-block--full-width\">\r\n                    {formValidationMessage}\r\n                  </div>\r\n                  <div className=\"form__group\">\r\n                      <input\r\n                          className=\"form__button-element\"\r\n                          type=\"reset\"\r\n                          value=\"Wyczyść\"\r\n                          onClick={() => resetFormValues()}\r\n                      />\r\n                      <input\r\n                          className=\"form__button-element\"\r\n                          type=\"button\"\r\n                          value=\"Zaktualizuj\"\r\n                          onClick={() => updateMeetingElement()}\r\n                      />\r\n                  </div>\r\n              </form>\r\n          </div>\r\n      </>\r\n  )\r\n}\r\n\r\nexport default EditMeetingModalWindow;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useAppDispatch, useAppSelector } from \"../../../../hooks/redux-hooks\";\r\nimport { ADD_NOTIFICATION, CLOSE_MODAL_WINDOW } from \"../../../../redux/slices/globalSettingsSlice\";\r\nimport { UPDATE_ROOM } from \"../../../../redux/slices/roomsPageSlice\";\r\nimport { AppDispatch, RootState } from \"../../../../redux/store\";\r\nimport { roomDataType } from \"../../../../types/roomDataType\";\r\nimport { roomTypeDataType } from \"../../../../types/roomTypeDataType\";\r\nimport { globalSettingsSliceType } from \"../../../../types/slices/globalSettingsSliceTypes\";\r\nimport { dateStringToDateTimeInputFormat } from \"../../../../utils/dateStringToDateTimeInputFormat\";\r\n\r\nfunction EditRoomModalWindow() {\r\n  const globalSettingsData: globalSettingsSliceType = useAppSelector((state: RootState) => state.globalSettings);\r\n  const editRoomElement: roomDataType | null = globalSettingsData.editRoomElement;\r\n  const roomsData: roomDataType[] = useAppSelector((state: RootState) => state.roomsPage.value);\r\n  const roomTypesData: roomTypeDataType[] = useAppSelector((state: RootState) => state.roomTypes.value);\r\n\r\n  const dispatch: AppDispatch = useAppDispatch();\r\n\r\n  interface editedRoomElement {\r\n    roomId: number;\r\n    roomName: string;\r\n    roomNumber: string;\r\n    minimumRoomPeople: number;\r\n    maximumRoomPeople: number;\r\n    roomStatus: boolean;\r\n    roomType: string;\r\n    additionalInformation: string;\r\n    dateAdded: string;\r\n    modificationDate: string;\r\n  }\r\n\r\n  interface validationElementValue {\r\n    value: string;\r\n    correctValidation: boolean;\r\n  }\r\n\r\n  type validationElementName = 'roomName' | 'roomNumber' | 'minimumRoomPeople' | 'maximumRoomPeople' | 'roomType' | 'checkAvailabilityRoomType';\r\n\r\n  type formValidationElements = {\r\n    [key in validationElementName]: validationElementValue;\r\n  }\r\n\r\n  const initialEditedRoomData: editedRoomElement = {\r\n    roomId: editRoomElement!.roomId,\r\n    roomName: editRoomElement!.roomName,\r\n    roomNumber: editRoomElement!.roomNumber,\r\n    minimumRoomPeople: editRoomElement!.minimumRoomPeople,\r\n    maximumRoomPeople: editRoomElement!.maximumRoomPeople,\r\n    roomStatus: editRoomElement!.roomStatus,\r\n    roomType: editRoomElement!.roomType,\r\n    additionalInformation: editRoomElement!.additionalInformation ? editRoomElement!.additionalInformation : '',\r\n    dateAdded: editRoomElement!.dateAdded,\r\n    modificationDate: new Date().toJSON()\r\n  };\r\n\r\n  const initialClearEditedMeetingData: editedRoomElement = {\r\n    roomId: editRoomElement!.roomId,\r\n    roomName: '',\r\n    roomNumber: '',\r\n    minimumRoomPeople: 0,\r\n    maximumRoomPeople: 0,\r\n    roomStatus: true,\r\n    roomType: '',\r\n    additionalInformation: \"\",\r\n    dateAdded: editRoomElement!.dateAdded,\r\n    modificationDate: new Date().toJSON()\r\n  };\r\n\r\n  const [editedRoom, setEditedRoom] = useState<editedRoomElement>(initialEditedRoomData);\r\n\r\n  const initialFormValidationElementsData: formValidationElements = {\r\n    roomName: { value: '', correctValidation: true },\r\n    roomNumber: { value: '', correctValidation: true },\r\n    minimumRoomPeople: { value: '', correctValidation: true },\r\n    maximumRoomPeople: { value: '', correctValidation: true },\r\n    roomType: { value: '', correctValidation: true },\r\n    checkAvailabilityRoomType: { value: '', correctValidation: true }\r\n  };\r\n\r\n  const [formValidationElements, setFormValidationElements] = useState<formValidationElements>(initialFormValidationElementsData);\r\n\r\n  const [formErrorMessage, setFormErrorMessage] = useState<string>('');\r\n\r\n  const validationErrorsData = Object.values(formValidationElements).filter((key) => key.correctValidation == false && key.value.length > 0).map((key) => [key.value]);\r\n\r\n  const formValidationMessage: JSX.Element = (\r\n    <>\r\n      <p className=\"information-block__title\">{formErrorMessage}</p>\r\n      <ul className=\"information-block__list\">\r\n        {validationErrorsData.map((e, index) => <li key={index} className=\"list__element\">{e}</li>)}\r\n      </ul>\r\n    </>\r\n  );\r\n\r\n  const [currentRoomTypeElement]: roomTypeDataType[] = roomTypesData.filter((e: roomTypeDataType) => e.roomTypeName == editedRoom.roomType);\r\n\r\n  const checkAvailabilityRoomType = (): void => {\r\n    if (!currentRoomTypeElement) {\r\n      setEditedRoom((prevState: editedRoomElement) => {return {\r\n        ...prevState, \r\n        roomType: ''}});\r\n      setFormErrorMessage('Uwaga!');\r\n      setFormValidationElements((prevState: formValidationElements) => {return {\r\n        ...prevState,\r\n        checkAvailabilityRoomType: {value: 'Brak danego typu pomieszczenia w danych o typach pomieszczeń (Pole formularza: \"Typ pomieszczenia\" zostało zresetowane)', correctValidation: false}}});\r\n    }\r\n  };\r\n\r\n  const elementValueHandler = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement>): void => {\r\n    setEditedRoom((prevState: editedRoomElement) => {return {\r\n      ...prevState,\r\n      [e.target.name]: e.target.value\r\n    }})\r\n  };\r\n\r\n  const elementNumberValueHandler = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement>): void => {\r\n    setEditedRoom((prevState: editedRoomElement) => {return {\r\n      ...prevState,\r\n      [e.target.name]: parseInt(e.target.value)\r\n    }})\r\n  };\r\n\r\n  const validateRoomNameInput = () => {\r\n    const roomNamesData = roomsData.map((e: roomDataType) => e.roomName.toUpperCase())\r\n\r\n    if (editedRoom.roomName == \"\") {\r\n      setFormValidationElements((prevState: formValidationElements) => {\r\n        return {...prevState, roomName: {value: 'Wprowadź nazwę pomieszczenia', correctValidation: false}}\r\n      });\r\n      return false;\r\n\r\n    } else if (roomNamesData.includes(editedRoom.roomName.toUpperCase()) && editedRoom.roomName != editRoomElement!.roomName) {\r\n      setFormValidationElements((prevState: formValidationElements) => {\r\n        return {...prevState, roomName: {value: 'Pomieszczenie o takiej nazwie już istnieje', correctValidation: false}}\r\n      });\r\n      return false;\r\n\r\n    } else {\r\n      setFormValidationElements((prevState: formValidationElements) => {\r\n        return {...prevState, roomName: {value: '', correctValidation: true}}\r\n      });\r\n      return true;\r\n    }\r\n  };\r\n\r\n  const validateRoomNumberInput = () => {\r\n    const roomNumbersData = roomsData.map(e => e.roomNumber.toUpperCase())\r\n\r\n    if (editedRoom.roomNumber == \"\") {\r\n      setFormValidationElements((prevState: formValidationElements) => {\r\n        return {...prevState, roomNumber: {value: 'Wprowadź numer pomieszczenia', correctValidation: false}}\r\n      });\r\n      return false;\r\n\r\n    } else if (roomNumbersData.includes(editedRoom.roomNumber.toUpperCase()) && editedRoom.roomNumber != editRoomElement!.roomNumber) {\r\n      setFormValidationElements((prevState: formValidationElements) => {\r\n        return {...prevState, roomNumber: {value: 'Pomieszcenie o takim numerze już istnieje', correctValidation: false}}\r\n      });\r\n      return false;\r\n\r\n    } else {\r\n      setFormValidationElements((prevState: formValidationElements) => {\r\n        return {...prevState, roomNumber: {value: '', correctValidation: true}}\r\n      });\r\n      return true;\r\n    }\r\n  };\r\n\r\n  const validateRoomMinPeopleInput = () => {\r\n    if (editedRoom.minimumRoomPeople == 0 || isNaN(editedRoom.minimumRoomPeople)) {\r\n      setFormValidationElements((prevState: formValidationElements) => {\r\n        return {...prevState, minimumRoomPeople: {value: 'Wprowadź minimalną ilość osób', correctValidation: false}}\r\n      });\r\n      return false;\r\n\r\n    } else if (editedRoom.minimumRoomPeople > editedRoom.maximumRoomPeople) {\r\n      setFormValidationElements((prevState: formValidationElements) => {\r\n        return {...prevState, minimumRoomPeople: {value: 'Błędna wartość min. liczba jest większa od max. liczby', correctValidation: false}}\r\n      });\r\n      return false;\r\n\r\n    } else if (editedRoom.minimumRoomPeople == editedRoom.maximumRoomPeople) {\r\n      setFormValidationElements((prevState: formValidationElements) => {\r\n        return {...prevState, minimumRoomPeople: {value: 'Błędna wartość min. liczby. Wartości są sobie równe', correctValidation: false}}\r\n      });\r\n      return false;\r\n\r\n    } else {\r\n      setFormValidationElements((prevState: formValidationElements) => {\r\n        return {...prevState, minimumRoomPeople: {value: '', correctValidation: true}}\r\n      });\r\n      return true;\r\n    }\r\n  };\r\n\r\n  const validateRoomMaxPeopleInput = () => {\r\n    if (editedRoom.maximumRoomPeople == 0 || isNaN(editedRoom.maximumRoomPeople)) {\r\n      setFormValidationElements((prevState: formValidationElements) => {\r\n        return {...prevState, maximumRoomPeople: {value: 'Wprowadź maksymalną ilość osób', correctValidation: false}}\r\n      });\r\n      return false;\r\n\r\n    } else if (editedRoom.maximumRoomPeople < editedRoom.minimumRoomPeople) {\r\n      setFormValidationElements((prevState: formValidationElements) => {\r\n        return {...prevState, maximumRoomPeople: {value: 'Błędna wartość max. liczba jest mniejsza od min. liczby', correctValidation: false}}\r\n      });\r\n      return false;\r\n\r\n    } else if (editedRoom.maximumRoomPeople == editedRoom.minimumRoomPeople) {\r\n      setFormValidationElements((prevState: formValidationElements) => {\r\n        return {...prevState, maximumRoomPeople: {value: 'Błędna wartość min. liczby. Wartości są sobie równe', correctValidation: false}}\r\n      });\r\n      return false;\r\n\r\n    } else {\r\n      setFormValidationElements((prevState: formValidationElements) => {\r\n        return {...prevState, maximumRoomPeople: {value: '', correctValidation: true}}\r\n      });\r\n      return true;\r\n    }\r\n  };\r\n\r\n  const validateRoomTypeInput = () => {\r\n    if (editedRoom.roomType == \"\") {\r\n      setFormValidationElements((prevState: formValidationElements) => {\r\n        return {...prevState, roomType: {value: 'Wybierz typ pomieszczenia', correctValidation: false}}\r\n      });\r\n      return false;\r\n\r\n    } else if (roomTypesData.length == 0) {\r\n      setFormValidationElements((prevState: formValidationElements) => {\r\n        return {...prevState, roomType: {value: 'Brak rodzajów pomieszczeń do wyświetlenia. Uzupełnij dane, aby wyświetlić formularz', correctValidation: false}}\r\n      });\r\n      return false;\r\n\r\n    } else {\r\n      setFormValidationElements((prevState: formValidationElements) => {\r\n        return {...prevState, roomType: {value: '', correctValidation: true}}\r\n      });\r\n      return true;\r\n    }\r\n  };\r\n\r\n  const updateRoomElement = (): void => {\r\n    setFormValidationElements(initialFormValidationElementsData);\r\n\r\n    const correctValidationRoomName: boolean = validateRoomNameInput();\r\n    const correctValidationRoomNumber: boolean = validateRoomNumberInput();\r\n    const correctValidationMinRoomPeople: boolean = validateRoomMinPeopleInput();\r\n    const correctValidationMaxRoomPeople: boolean = validateRoomMaxPeopleInput();\r\n    const correctValidationRoomTypes: boolean = validateRoomTypeInput();\r\n\r\n    const correctValidation: boolean =\r\n    correctValidationRoomName &&\r\n    correctValidationRoomNumber &&\r\n    correctValidationMinRoomPeople &&\r\n    correctValidationMaxRoomPeople &&\r\n    correctValidationRoomTypes\r\n      ? true\r\n      : false;\r\n\r\n    if (correctValidation) {\r\n      const editRoomElementIndex: number = roomsData.indexOf(editRoomElement!)\r\n\r\n      setFormErrorMessage('');\r\n      dispatch(UPDATE_ROOM({index: editRoomElementIndex, value: editedRoom}));\r\n      dispatch(ADD_NOTIFICATION({notificationName: `Zaktualizowano pomieszczenie o ID: ${editedRoom.roomId}`, notificationDate: new Date().toJSON(), seenNotification: false})) ;\r\n      dispatch(CLOSE_MODAL_WINDOW());\r\n    } else {\r\n      setFormErrorMessage('Sprawdź poprawność wypełnienia formularza');\r\n    }\r\n  };\r\n\r\n  const resetFormValues = (): void => {\r\n    setFormValidationElements(initialFormValidationElementsData);\r\n    setFormErrorMessage('');\r\n    setEditedRoom(initialClearEditedMeetingData);\r\n  };\r\n\r\n  useEffect(() => {\r\n    checkAvailabilityRoomType();\r\n  }, []);\r\n\r\n  return (\r\n      <>\r\n          <div className=\"window__header\">\r\n              <div className=\"header__title\">Edytowanie pomieszczenia</div>\r\n              <div className=\"header__nav\">\r\n                  <button className=\"nav__button\" onClick={() => {dispatch(CLOSE_MODAL_WINDOW())}}>\r\n                    <span className=\"material-symbols-outlined\">close</span>\r\n                  </button>\r\n              </div>\r\n          </div>\r\n          <div className=\"window__description\">\r\n              Lorem ipsum dolor sit amet consectetur adipisicing elit. Distinctio, aliquid! Recusandae modi nam quis delectus dolore voluptatem, tempora neque quaerat culpa inventore, illo alias debitis necessitatibus libero. Dicta, laborum vitae in impedit delectus itaque iusto.\r\n          </div>\r\n          <div className=\"window__content\">\r\n              <form className=\"content__form\">\r\n                  <label className=\"form__label\">\r\n                      ID\r\n                      <input \r\n                          className=\"form__input-element\" \r\n                          type=\"number\" \r\n                          value={editedRoom.roomId} \r\n                          disabled \r\n                      />\r\n                  </label>\r\n                  <label className=\"form__label form__label--three-width\">\r\n                      Nazwa pomieszczenia*\r\n                      <div className=\"form__information-block form__information-block--error\">\r\n                          {formValidationElements.roomName.value}\r\n                      </div>\r\n                      <input\r\n                          className=\"form__input-element\"\r\n                          type=\"text\"\r\n                          value={editedRoom.roomName}\r\n                          name=\"roomName\"\r\n                          onChange={elementValueHandler}\r\n                      />\r\n                  </label>\r\n                  <label className=\"form__label\">\r\n                      Number pomieszczenia*\r\n                      <div className=\"form__information-block form__information-block--error\">\r\n                          {formValidationElements.roomNumber.value}\r\n                      </div>\r\n                      <input\r\n                          className=\"form__input-element\"\r\n                          type=\"text\"\r\n                          value={editedRoom.roomNumber}\r\n                          name=\"roomNumber\"\r\n                          onChange={elementValueHandler}\r\n                      />\r\n                  </label>\r\n                  <label className=\"form__label\">\r\n                      Minimalna ilość osób*\r\n                      <div className=\"form__information-block form__information-block--error\">\r\n                          {formValidationElements.minimumRoomPeople.value}\r\n                      </div>\r\n                      <input\r\n                          className=\"form__input-element\"\r\n                          type=\"number\"\r\n                          value={editedRoom.minimumRoomPeople}\r\n                          min={0}\r\n                          name=\"minimumRoomPeople\"\r\n                          onChange={elementNumberValueHandler}\r\n                      />\r\n                  </label>\r\n                  <label className=\"form__label\">\r\n                      Maksymalna ilość osób*\r\n                      <div className=\"form__information-block form__information-block--error\">\r\n                          {formValidationElements.maximumRoomPeople.value}\r\n                      </div>\r\n                      <input\r\n                          className=\"form__input-element\"\r\n                          type=\"number\"\r\n                          value={editedRoom.maximumRoomPeople}\r\n                          min={0}\r\n                          name=\"maximumRoomPeople\"\r\n                          onChange={elementNumberValueHandler}\r\n                      />\r\n                  </label>\r\n                  <label className=\"form__label\">\r\n                      Status pomieszczenia*\r\n                      <div className=\"label__group\">\r\n                        <div className={editedRoom.roomStatus ? \"form__information-block form__information-block--active\" : \"form__information-block form__information-block--default\"}>\r\n                            {editedRoom.roomStatus ? 'Pomieszczenie aktywne' : 'Pomieszczenie nieaktywne'}\r\n                        </div>\r\n                        <input\r\n                            className=\"form__checkbox-element\"\r\n                            type=\"checkbox\"\r\n                            checked={editedRoom.roomStatus}\r\n                            name=\"roomStatus\"\r\n                            onChange={(e) => {setEditedRoom((prevState: editedRoomElement) => {return {\r\n                              ...prevState,\r\n                              [e.target.name]: e.target.checked\r\n                            }})}}\r\n                        />\r\n                        <div className=\"form__checkbox\">\r\n                          <div className=\"checkbox__value\"></div>\r\n                        </div>\r\n                      </div>\r\n                  </label>\r\n                  <label className=\"form__label form__label--full-width\">\r\n                      Typ pomieszczenia*\r\n                      <div className=\"form__information-block form__information-block--error\">\r\n                          {formValidationElements.roomType.value}\r\n                      </div>\r\n                      <div className=\"form__element-with-icon\">\r\n                        <select\r\n                            className=\"form__select-element\"\r\n                            value={editedRoom.roomType}\r\n                            name=\"roomType\"\r\n                            onChange={elementValueHandler}\r\n                        >\r\n                            <option value=\"\"></option>\r\n                            {roomTypesData.map((e: roomTypeDataType) => (\r\n                                <option\r\n                                    key={e.roomTypeId}\r\n                                    value={e.roomTypeName}\r\n                                >\r\n                                    {e.roomTypeName}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n                        <span className=\"material-symbols-outlined\">arrow_drop_down</span>\r\n                      </div>\r\n                  </label>\r\n                  <label className=\"form__label form__label--full-width\">\r\n                      Dodatkowe informacje\r\n                      <div className=\"form__textarea-element-with-icon\">\r\n                        <textarea\r\n                            className=\"form__textarea-element\"\r\n                            value={editedRoom.additionalInformation}\r\n                            name=\"additionalInformation\"\r\n                            onChange={elementValueHandler}\r\n                        />\r\n                        <span className=\"material-symbols-outlined\">height</span>\r\n                      </div>\r\n                  </label>\r\n                  <label className=\"form__label form__label--full-width\">\r\n                      Data dodania\r\n                      <input\r\n                          className=\"form__input-element\"\r\n                          type=\"datetime-local\"\r\n                          value={dateStringToDateTimeInputFormat(editedRoom.dateAdded)}\r\n                          disabled\r\n                      />\r\n                  </label>\r\n                  <label className=\"form__label form__label--full-width\">\r\n                      Data modyfikacji\r\n                      <input\r\n                          className=\"form__input-element\"\r\n                          type=\"datetime-local\"\r\n                          value={dateStringToDateTimeInputFormat(editedRoom.modificationDate)}\r\n                          disabled\r\n                      />\r\n                  </label>\r\n                  <div className=\"form__information-block form__information-block--error form__information-block--full-width\">\r\n                    {formValidationMessage}\r\n                  </div>\r\n                  <div className=\"form__group\">\r\n                      <input\r\n                          className=\"form__button-element\"\r\n                          type=\"reset\"\r\n                          value=\"Wyczyść\"\r\n                          onClick={() => resetFormValues()}\r\n                      />\r\n                      <input\r\n                          className=\"form__button-element\"\r\n                          type=\"button\"\r\n                          value=\"Zaktualizuj\"\r\n                          onClick={() => updateRoomElement()}\r\n                      />\r\n                  </div>\r\n              </form>\r\n          </div>\r\n      </>\r\n  )\r\n}\r\n\r\nexport default EditRoomModalWindow;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useAppDispatch, useAppSelector } from \"../../../../hooks/redux-hooks\";\r\nimport { ADD_NOTIFICATION, CLOSE_MODAL_WINDOW } from \"../../../../redux/slices/globalSettingsSlice\";\r\nimport { UPDATE_SCREEN } from \"../../../../redux/slices/screensPageSlice\";\r\nimport { AppDispatch, RootState } from \"../../../../redux/store\";\r\nimport { roomDataType } from \"../../../../types/roomDataType\";\r\nimport { screenDataType } from \"../../../../types/screenDataType\";\r\nimport { globalSettingsSliceType } from \"../../../../types/slices/globalSettingsSliceTypes\";\r\nimport { dateStringToDateTimeInputFormat } from \"../../../../utils/dateStringToDateTimeInputFormat\";\r\n\r\nfunction EditScreenModalWindow() {\r\n  const globalSettingsData: globalSettingsSliceType = useAppSelector((state: RootState) => state.globalSettings);\r\n  const editScreenElement: screenDataType | null = globalSettingsData.editScreenElement;\r\n  const screensData: screenDataType[] = useAppSelector((state: RootState) => state.screensPage.value);\r\n  const roomsData: roomDataType[] = useAppSelector((state: RootState) => state.roomsPage.value);\r\n\r\n  const dispatch: AppDispatch = useAppDispatch();\r\n\r\n  interface editedScreenElement {\r\n    screenId: number;\r\n    screenName: string;\r\n    roomName: string;\r\n    screenLocation: string;\r\n    screenStatus: boolean;\r\n    screenType: string;\r\n    additionalInformation: string;\r\n    dateAdded: string;\r\n    modificationDate: string;\r\n  }\r\n\r\n  interface validationElementValue {\r\n    value: string;\r\n    correctValidation: boolean;\r\n  }\r\n\r\n  type validationElementName = 'screenName' | 'roomName' | 'screenLocation' | 'screenType' | 'checkAvailabilityRoomName';\r\n\r\n  type formValidationElements = {\r\n    [key in validationElementName]: validationElementValue;\r\n  }\r\n\r\n  const initialEditedScreenData: editedScreenElement = {\r\n    screenId: editScreenElement!.screenId,\r\n    screenName: editScreenElement!.screenName,\r\n    roomName: editScreenElement!.roomName,\r\n    screenLocation: editScreenElement!.screenLocation,\r\n    screenStatus: editScreenElement!.screenStatus,\r\n    screenType: editScreenElement!.screenType,\r\n    additionalInformation: editScreenElement!.additionalInformation ? editScreenElement!.additionalInformation : '',\r\n    dateAdded: editScreenElement!.dateAdded,\r\n    modificationDate: new Date().toJSON()\r\n  };\r\n\r\n  const initialClearEditedScreenData: editedScreenElement = {\r\n    screenId: editScreenElement!.screenId,\r\n    screenName: '',\r\n    roomName: '',\r\n    screenLocation: '',\r\n    screenStatus: true,\r\n    screenType: '',\r\n    additionalInformation: '',\r\n    dateAdded: editScreenElement!.dateAdded,\r\n    modificationDate: new Date().toJSON()\r\n  };\r\n\r\n  const [editedScreen, setEditedScreen] = useState<editedScreenElement>(initialEditedScreenData);\r\n\r\n  const initialFormValidationElementsData: formValidationElements = {\r\n    screenName: { value: '', correctValidation: true },\r\n    roomName: { value: '', correctValidation: true },\r\n    screenLocation: { value: '', correctValidation: true },\r\n    screenType: { value: '', correctValidation: true },\r\n    checkAvailabilityRoomName: { value: '', correctValidation: true }\r\n  };\r\n\r\n  const [formValidationElements, setFormValidationElements] = useState<formValidationElements>(initialFormValidationElementsData);\r\n\r\n  const [formErrorMessage, setFormErrorMessage] = useState<string>('');\r\n\r\n  const validationErrorsData = Object.values(formValidationElements).filter((key) => key.correctValidation == false && key.value.length > 0).map((key) => [key.value]);\r\n\r\n  const formValidationMessage: JSX.Element = (\r\n    <>\r\n      <p className=\"information-block__title\">{formErrorMessage}</p>\r\n      <ul className=\"information-block__list\">\r\n        {validationErrorsData.map((e, index) => <li key={index} className=\"list__element\">{e}</li>)}\r\n      </ul>\r\n    </>\r\n  );\r\n\r\n  const [currentRoomElement]: roomDataType[] = roomsData.filter((e: roomDataType) => e.roomName == editedScreen.roomName);\r\n\r\n  const checkAvailabilityRoomName = (): void => {\r\n    if (!currentRoomElement) {\r\n      setEditedScreen((prevState: editedScreenElement) => {return {\r\n        ...prevState, \r\n        roomName: ''}});\r\n      setFormErrorMessage('Uwaga!');\r\n      setFormValidationElements((prevState: formValidationElements) => {return {\r\n        ...prevState,\r\n        checkAvailabilityRoomName: {value: 'Brak danego pomieszczenia w danych o pomieszczeniach (Pole formularza: \"Ekran dla pomieszczenia\" zostało zresetowane)', correctValidation: false}}});\r\n    }\r\n  };\r\n\r\n  const elementValueHandler = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement>): void => {\r\n    setEditedScreen((prevState: editedScreenElement) => {return {\r\n      ...prevState,\r\n      [e.target.name]: e.target.value\r\n    }})\r\n  };\r\n\r\n  const validateScreenNameInput = () => {\r\n    if (editedScreen.screenName == \"\") {\r\n      setFormValidationElements((prevState: formValidationElements) => {\r\n        return {...prevState, screenName: {value: 'Wprowadź nazwę ekranu', correctValidation: false}}\r\n      });\r\n      return false;\r\n\r\n    } else {\r\n      setFormValidationElements((prevState: formValidationElements) => {\r\n        return {...prevState, screenName: {value: '', correctValidation: true}}\r\n      });\r\n      return true;\r\n    }\r\n  };\r\n\r\n  const validateRoomNameInput = () => {\r\n    const screenRoomsData = screensData.map(e => e.roomName.toUpperCase())\r\n\r\n    if (editedScreen.roomName == \"\") {\r\n      setFormValidationElements((prevState: formValidationElements) => {\r\n        return {...prevState, roomName: {value: 'Wybierz pomieszczenie', correctValidation: false}}\r\n      });\r\n      return false;\r\n\r\n    } else if (screenRoomsData.includes(editedScreen.roomName.toUpperCase()) && editedScreen.screenName != editScreenElement!.screenName) {\r\n      setFormValidationElements((prevState: formValidationElements) => {\r\n        return {...prevState, roomName: {value: 'Dane pomieszczenie posiada już swój ekran', correctValidation: false}}\r\n      });\r\n      return false;\r\n\r\n    } else {\r\n      setFormValidationElements((prevState: formValidationElements) => {\r\n        return {...prevState, roomName: {value: '', correctValidation: true}}\r\n      });\r\n      return true;\r\n    }\r\n  };\r\n\r\n  const validateScreenLocationInput = () => {\r\n    if (editedScreen.screenLocation == \"\") {\r\n      setFormValidationElements((prevState: formValidationElements) => {\r\n        return {...prevState, screenLocation: {value: 'Wprowadź lokalizację ekranu', correctValidation: false}}\r\n      });\r\n      return false;\r\n\r\n    } else {\r\n      setFormValidationElements((prevState: formValidationElements) => {\r\n        return {...prevState, screenLocation: {value: '', correctValidation: true}}\r\n      });\r\n      return true;\r\n    }\r\n  };\r\n\r\n  const validateScreenTypeInput = () => {\r\n    if (editedScreen.screenType == \"\") {\r\n      setFormValidationElements((prevState: formValidationElements) => {\r\n        return {...prevState, screenType: {value: 'Wybierz rodzaj ekranu', correctValidation: false}}\r\n      });\r\n      return false;\r\n\r\n    } else {\r\n      setFormValidationElements((prevState: formValidationElements) => {\r\n        return {...prevState, screenType: {value: '', correctValidation: true}}\r\n      });\r\n      return true;\r\n    }\r\n  };\r\n\r\n  const updateScreenElement = (): void => {\r\n    setFormValidationElements(initialFormValidationElementsData);\r\n\r\n    const correctValidationScreenName: boolean = validateScreenNameInput();\r\n    const correctValidationRoomName: boolean = validateRoomNameInput();\r\n    const correctValidationScreenLocation: boolean = validateScreenLocationInput();\r\n    const correctValidationScreenType: boolean = validateScreenTypeInput();\r\n\r\n    const correctValidation: boolean =\r\n    correctValidationScreenName &&\r\n    correctValidationRoomName &&\r\n    correctValidationScreenLocation &&\r\n    correctValidationScreenType\r\n      ? true\r\n      : false;\r\n\r\n    if (correctValidation) {\r\n      const editScreenElementIndex: number = screensData.indexOf(editScreenElement!)\r\n\r\n      setFormErrorMessage('');\r\n      dispatch(UPDATE_SCREEN({index: editScreenElementIndex, value: editedScreen}));\r\n      dispatch(ADD_NOTIFICATION({notificationName: `Zaktualizowano ekran o ID: ${editedScreen.screenId}`, notificationDate: new Date().toJSON(), seenNotification: false})) ;\r\n      dispatch(CLOSE_MODAL_WINDOW());\r\n    } else {\r\n      setFormErrorMessage('Sprawdź poprawność wypełnienia formularza');\r\n    }\r\n  };\r\n\r\n  const resetFormValues = (): void => {\r\n    setFormValidationElements(initialFormValidationElementsData);\r\n    setFormErrorMessage('');\r\n    setEditedScreen(initialClearEditedScreenData);\r\n  };\r\n\r\n  useEffect(() => {\r\n    checkAvailabilityRoomName();\r\n  }, []);\r\n\r\n  return (\r\n      <>\r\n          <div className=\"window__header\">\r\n              <div className=\"header__title\">Edytowanie ekranu</div>\r\n              <div className=\"header__nav\">\r\n                  <button className=\"nav__button\" onClick={() => {dispatch(CLOSE_MODAL_WINDOW())}}>\r\n                    <span className=\"material-symbols-outlined\">close</span>\r\n                  </button>\r\n              </div>\r\n          </div>\r\n          <div className=\"window__description\">\r\n              Lorem ipsum dolor sit amet consectetur adipisicing elit. Distinctio, aliquid! Recusandae modi nam quis delectus dolore voluptatem, tempora neque quaerat culpa inventore, illo alias debitis necessitatibus libero. Dicta, laborum vitae in impedit delectus itaque iusto.\r\n          </div>\r\n          <div className=\"window__content\">\r\n              <form className=\"content__form\">\r\n                  <label className=\"form__label\">\r\n                      ID\r\n                      <input \r\n                          className=\"form__input-element\" \r\n                          type=\"number\" \r\n                          value={editedScreen.screenId} \r\n                          disabled \r\n                      />\r\n                  </label>\r\n                  <label className=\"form__label form__label--three-width\">\r\n                      Nazwa ekranu*\r\n                      <div className=\"form__information-block form__information-block--error\">\r\n                          {formValidationElements.screenName.value}\r\n                      </div>\r\n                      <input\r\n                          className=\"form__input-element\"\r\n                          type=\"text\"\r\n                          value={editedScreen.screenName}\r\n                          name=\"screenName\"\r\n                          onChange={elementValueHandler}\r\n                      />\r\n                  </label>\r\n                  <label className=\"form__label form__label--two-width\">\r\n                      Rodzaj ekranu*\r\n                      <div className=\"form__information-block form__information-block--error\">\r\n                          {formValidationElements.screenType.value}\r\n                      </div>\r\n                      <div className=\"form__element-with-icon\">\r\n                        <select\r\n                            className=\"form__select-element\"\r\n                            value={editedScreen.screenType}\r\n                            name=\"screenType\"\r\n                            onChange={elementValueHandler}\r\n                        >\r\n                            <option value=\"\"></option>\r\n                            <option value=\"horizontal\">Poziomo</option>\r\n                            <option value=\"vertical\">Pionowo</option>\r\n                        </select>\r\n                        <span className=\"material-symbols-outlined\">arrow_drop_down</span>\r\n                      </div>\r\n                  </label>\r\n                  <label className=\"form__label form__label--two-width\">\r\n                      Ekran dla pomieszczenia*\r\n                      <div className=\"form__information-block form__information-block--error\">\r\n                          {formValidationElements.roomName.value}\r\n                      </div>\r\n                      <div className=\"form__element-with-icon\">\r\n                        <select\r\n                            className=\"form__select-element\"\r\n                            value={editedScreen.roomName}\r\n                            name=\"roomName\"\r\n                            onChange={elementValueHandler}\r\n                        >\r\n                            <option value=\"\"></option>\r\n                            {roomsData.map((e: roomDataType) => (\r\n                                <option\r\n                                    key={e.roomId}\r\n                                    value={e.roomName}\r\n                                >\r\n                                    {e.roomName}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n                        <span className=\"material-symbols-outlined\">arrow_drop_down</span>\r\n                      </div>\r\n                  </label>\r\n                  <label className=\"form__label form__label--two-width\">\r\n                      Lokalizacja ekranu*\r\n                      <div className=\"form__information-block form__information-block--error\">\r\n                          {formValidationElements.screenLocation.value}\r\n                      </div>\r\n                      <input\r\n                          className=\"form__input-element\"\r\n                          type=\"text\"\r\n                          value={editedScreen.screenLocation}\r\n                          name=\"screenLocation\"\r\n                          onChange={elementValueHandler}\r\n                      />\r\n                  </label>\r\n                  <label className=\"form__label form__label--two-width\">\r\n                      Status ekranu*\r\n                      <div className=\"from__group\">\r\n                        <div className={editedScreen.screenStatus ? \"form__information-block form__information-block--active\" : \"form__information-block form__information-block--default\"}>\r\n                            {editedScreen.screenStatus ? 'Ekran aktywny' : 'Ekran nieaktywny'}\r\n                        </div>\r\n                        <input\r\n                            className=\"form__checkbox-element\"\r\n                            type=\"checkbox\"\r\n                            checked={editedScreen.screenStatus}\r\n                            name=\"screenStatus\"\r\n                            onChange={(e) => {setEditedScreen((prevState: editedScreenElement) => {return {\r\n                              ...prevState,\r\n                              [e.target.name]: e.target.checked\r\n                            }})}}\r\n                        />\r\n                        <div className=\"form__checkbox\">\r\n                          <div className=\"checkbox__value\"></div>\r\n                        </div>\r\n                      </div>\r\n                  </label>\r\n                  <label className=\"form__label form__label--full-width\">\r\n                      Dodatkowe informacje\r\n                      <div className=\"form__textarea-element-with-icon\">\r\n                        <textarea\r\n                            className=\"form__textarea-element\"\r\n                            value={editedScreen.additionalInformation}\r\n                            name=\"additionalInformation\"\r\n                            onChange={elementValueHandler}\r\n                        />\r\n                        <span className=\"material-symbols-outlined\">height</span>\r\n                      </div>\r\n                  </label>\r\n                  <label className=\"form__label form__label--full-width\">\r\n                      Data dodania\r\n                      <input\r\n                          className=\"form__input-element\"\r\n                          type=\"datetime-local\"\r\n                          value={dateStringToDateTimeInputFormat(editedScreen.dateAdded)}\r\n                          disabled\r\n                      />\r\n                  </label>\r\n                  <label className=\"form__label form__label--full-width\">\r\n                      Data modyfikacji\r\n                      <input\r\n                          className=\"form__input-element\"\r\n                          type=\"datetime-local\"\r\n                          value={dateStringToDateTimeInputFormat(editedScreen.modificationDate)}\r\n                          disabled\r\n                      />\r\n                  </label>\r\n                  <div className=\"form__information-block form__information-block--error form__information-block--full-width\">\r\n                    {formValidationMessage}\r\n                  </div>\r\n                  <div className=\"form__group\">\r\n                      <input\r\n                          className=\"form__button-element\"\r\n                          type=\"reset\"\r\n                          value=\"Wyczyść\"\r\n                          onClick={() => resetFormValues()}\r\n                      />\r\n                      <input\r\n                          className=\"form__button-element\"\r\n                          type=\"button\"\r\n                          value=\"Zaktualizuj\"\r\n                          onClick={() => updateScreenElement()}\r\n                      />\r\n                  </div>\r\n              </form>\r\n          </div>\r\n      </>\r\n  )\r\n}\r\n\r\nexport default EditScreenModalWindow;\r\n","import React from \"react\";\r\nimport { useAppSelector } from \"../../hooks/redux-hooks\";\r\nimport { RootState } from \"../../redux/store\";\r\nimport { globalSettingsSliceType, modalWindowType } from \"../../types/slices/globalSettingsSliceTypes\";\r\nimport AddEmployeeModalWindow from \"./components/AddForms/AddEmployeeModalWindow\";\r\nimport AddMeetingModalWindow from \"./components/AddForms/AddMeetingModalWindow\";\r\nimport AddRoomModalWindow from \"./components/AddForms/AddRoomModalWindow\";\r\nimport AddScreenModalWindow from \"./components/AddForms/AddScreenModalWindow\";\r\nimport DeleteAgreementModalWindow from \"./components/DeleteAgreementModalWindow\";\r\nimport EditEmployeeModalWindow from \"./components/EditForms/EditEmployeeModalWindow\";\r\nimport EditMeetingModalWindow from \"./components/EditForms/EditMeetingModalWindow\";\r\nimport EditRoomModalWindow from \"./components/EditForms/EditRoomModalWindow\";\r\nimport EditScreenModalWindow from \"./components/EditForms/EditScreenModalWindow\";\r\n\r\nfunction ModalWindow() {\r\n  const globalSettingsData: globalSettingsSliceType = useAppSelector((state: RootState) => state.globalSettings);\r\n  const typeOfModalWindow: modalWindowType | null = globalSettingsData.typeOfModalWindow;\r\n\r\n  const getModalWindow = (): JSX.Element => {\r\n    switch (typeOfModalWindow) {\r\n      case \"add-employee\":\r\n        return <AddEmployeeModalWindow/>;\r\n\r\n      case \"add-meeting\":\r\n        return <AddMeetingModalWindow/>;\r\n\r\n      case \"add-room\":\r\n        return <AddRoomModalWindow/>;\r\n\r\n      case \"add-screen\":\r\n        return <AddScreenModalWindow/>;\r\n\r\n      case \"edit-employee\":\r\n        return <EditEmployeeModalWindow/>;\r\n\r\n      case \"edit-meeting\":\r\n        return <EditMeetingModalWindow/>;\r\n\r\n      case \"edit-room\":\r\n        return <EditRoomModalWindow/>;\r\n\r\n      case \"edit-screen\":\r\n        return <EditScreenModalWindow/>;\r\n\r\n      case \"delete-agreement\":\r\n        return <DeleteAgreementModalWindow/>;\r\n\r\n      default:\r\n        return <></>;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className={globalSettingsData.viewModalWindow ? 'modal-container modal-container-open' : 'modal-container modal-container-closed'}>\r\n        {globalSettingsData.viewModalWindow\r\n          ? (\r\n            <div className=\"modal-container__window\">\r\n              {getModalWindow()}\r\n            </div>\r\n          )\r\n          : null \r\n        }\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ModalWindow;\r\n","import React from 'react';\r\nimport { meetingDataType } from '../../../types/meetingDataType';\r\nimport { dateStringToLocalString } from '../../../utils/dateStringToLocalString';\r\n\r\nfunction MeetingInfoContent(props: {selectedMeetingData: meetingDataType | null}) {\r\n\r\n  const checkMeetingStatus = (): string => {\r\n    if (props.selectedMeetingData != null) {\r\n      const meetingDate: string = props.selectedMeetingData.meetingDate;\r\n      const meetingTimeStart: string = props.selectedMeetingData.meetingTimeStart;\r\n      const meetingTimeEnd: string = props.selectedMeetingData.meetingTimeEnd;\r\n\r\n      const [startHours, startMinutes]: string[] =  meetingTimeStart.split(':');\r\n      const dateStartTime: Date = new Date(meetingDate);\r\n      dateStartTime.setHours(parseInt(startHours));\r\n      dateStartTime.setMinutes(parseInt(startMinutes));\r\n\r\n      const [endHours, endMinutes]: string[] = meetingTimeEnd.split(':');\r\n      const dateEndTime: Date = new Date(meetingDate);\r\n      dateEndTime.setHours(parseInt(endHours));\r\n      dateEndTime.setMinutes(parseInt(endMinutes));\r\n\r\n      if (new Date(meetingDate) > new Date()) {\r\n        return 'Zaplanowane'\r\n      } else if (new Date().toDateString() == dateStartTime.toDateString()) {\r\n        if (new Date() < dateStartTime) {\r\n          return `Zaplanowane (dziś ${startHours}:${startMinutes})`\r\n        } else if (new Date() >= dateStartTime && new Date() <= dateEndTime) {\r\n          return 'W trakcie trwania'\r\n        } else {\r\n          return `Zakończone (dziś ${endHours}:${endMinutes})`\r\n        }\r\n      } else {\r\n        return 'Zakończone'\r\n      }\r\n    } else {\r\n      return ''\r\n    }\r\n  };\r\n  \r\n  const checkMeetingStatusStyle = (): string => {\r\n    if (props.selectedMeetingData != null) {\r\n      const meetingDate: string = props.selectedMeetingData.meetingDate;\r\n      const meetingTimeStart: string = props.selectedMeetingData.meetingTimeStart;\r\n      const meetingTimeEnd: string = props.selectedMeetingData.meetingTimeEnd;\r\n\r\n      const [startHours, startMinutes]: string[] =  meetingTimeStart.split(':');\r\n      const dateStartTime: Date = new Date(meetingDate);\r\n      dateStartTime.setHours(parseInt(startHours));\r\n      dateStartTime.setMinutes(parseInt(startMinutes));\r\n\r\n      const [endHours, endMinutes]: string[] = meetingTimeEnd.split(':');\r\n      const dateEndTime: Date = new Date(meetingDate);\r\n      dateEndTime.setHours(parseInt(endHours));\r\n      dateEndTime.setMinutes(parseInt(endMinutes));\r\n\r\n      if (new Date(meetingDate) > new Date()) {\r\n        return 'content__element content__element--inactive'\r\n      } else if (new Date().toDateString() == dateStartTime.toDateString()) {\r\n        if (new Date() < dateStartTime) {\r\n          return 'content__element content__element--inactive'\r\n        } else if (new Date() >= dateStartTime && new Date() <= dateEndTime) {\r\n          return 'content__element content__element--active'\r\n        } else {\r\n          return 'content__element content__element--inactive'\r\n        }\r\n      } else {\r\n        return 'content__element content__element--inactive'\r\n      }\r\n    } else {\r\n      return ''\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"main-meeting-info-page__content\">\r\n      <div className=\"content__element content__element--three-width\">\r\n        <div className=\"element__title\">ID | Nazwa</div>\r\n        <div className=\"element__value\">{props.selectedMeetingData != null ? `${props.selectedMeetingData.meetingId} | ${props.selectedMeetingData.meetingName}` : ''}</div>\r\n      </div>\r\n      <div className={checkMeetingStatusStyle()}>\r\n        <div className=\"element__title\">Status</div>\r\n        <div className=\"element__value\">{checkMeetingStatus()}</div>\r\n      </div>\r\n      <div className=\"content__element content__element--two-width\">\r\n        <div className=\"element__title\">Kategoria</div>\r\n        <div className=\"element__value\">{props.selectedMeetingData != null ? props.selectedMeetingData.meetingCategory : ''}</div>\r\n      </div>\r\n      <div className=\"content__element content__element--two-width\">\r\n        <div className=\"element__title\">Pomieszczenie</div>\r\n        <div className=\"element__value\">{props.selectedMeetingData != null ? props.selectedMeetingData.roomName : ''}</div>\r\n      </div>\r\n      <div className=\"content__element\">\r\n        <div className=\"element__title\">Data spotkania</div>\r\n        <div className=\"element__value\">{props.selectedMeetingData != null ? new Date(props.selectedMeetingData.meetingDate).toLocaleDateString() : ''}</div>\r\n      </div>\r\n      <div className=\"content__element\">\r\n        <div className=\"element__title\">Godzina spotkania</div>\r\n        <div className=\"element__value\">{props.selectedMeetingData != null ? `${props.selectedMeetingData.meetingTimeStart} - ${props.selectedMeetingData.meetingTimeEnd}` : ''}</div>\r\n      </div>\r\n      <div className=\"content__element\">\r\n        <div className=\"element__title\">Ilość osób</div>\r\n        <div className=\"element__value\">{props.selectedMeetingData != null ? props.selectedMeetingData.meetingPeopleNumber : ''}</div>\r\n      </div>\r\n      <div className=\"content__element\">\r\n        <div className=\"element__title\">Organizator</div>\r\n        <div className=\"element__value\">{props.selectedMeetingData != null ? props.selectedMeetingData.employeeName : ''}</div>\r\n      </div>\r\n      <div className=\"content__element content__element--two-width\">\r\n        <div className=\"element__title\">Dodatkowe informacje</div>\r\n        <div className=\"element__value\">{props.selectedMeetingData != null ? props.selectedMeetingData.additionalInformation : ''}</div>\r\n      </div>\r\n      <div className=\"content__element\">\r\n        <div className=\"element__title\">Data dodania</div>\r\n        <div className=\"element__value\">{props.selectedMeetingData != null ? dateStringToLocalString(props.selectedMeetingData.dateAdded) : ''}</div>\r\n      </div>\r\n      <div className=\"content__element\">\r\n        <div className=\"element__title\">Data modyfikacji</div>\r\n        <div className=\"element__value\">{props.selectedMeetingData != null ? props.selectedMeetingData.modificationDate != null ? dateStringToLocalString(props.selectedMeetingData.modificationDate) : '' : ''}</div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MeetingInfoContent;","import React from \"react\";\r\nimport { NavigateFunction, useNavigate } from \"react-router-dom\";\r\nimport { useAppDispatch, useAppSelector } from \"../../../hooks/redux-hooks\";\r\nimport { OPEN_ARGEEMENT_MODAL_WINDOW, OPEN_EDIT_MODAL_WINDOW } from \"../../../redux/slices/globalSettingsSlice\";\r\nimport { AppDispatch, RootState } from \"../../../redux/store\";\r\nimport { meetingDataType } from \"../../../types/meetingDataType\";\r\nimport { meetingsPageSliceType } from \"../../../types/slices/meetingsPageSliceTypes\";\r\n\r\nfunction MeetingInfoHeader(props: {selectedMeetingData: meetingDataType | null}) {\r\n  const navigate: NavigateFunction = useNavigate()\r\n\r\n  const meetingsData: meetingsPageSliceType = useAppSelector((state: RootState) => state.meetingsPage);\r\n  const dispatch: AppDispatch = useAppDispatch();\r\n  \r\n  const editSelectedMeeting = (meetingElement: meetingDataType): void => {\r\n    dispatch(OPEN_EDIT_MODAL_WINDOW({type: 'edit-meeting', element: meetingElement}))\r\n  };\r\n\r\n  const deleteSelectedMeeting = (currentMeetingId: number): void => {\r\n    const [meetingElement]: meetingDataType[] = meetingsData.value.filter((e: meetingDataType) => e.meetingId === currentMeetingId)\r\n    const meetingElementIndex: number = meetingsData.value.indexOf(meetingElement)\r\n    dispatch(OPEN_ARGEEMENT_MODAL_WINDOW({type: 'delete-agreement', dataType: 'meetingsData', index: (meetingElementIndex)}))\r\n  };\r\n\r\n  return (\r\n    <div className=\"main-meeting-info-page__header\">\r\n      <div className=\"header__group\">\r\n        <div className=\"group__title\">\r\n          <span className=\"material-symbols-outlined\">groups</span>\r\n          Spotkanie - {props.selectedMeetingData != null ? props.selectedMeetingData.meetingName : ''}\r\n        </div>\r\n        <div className=\"group__nav\">\r\n          <button className=\"nav__button\" onClick={() => {editSelectedMeeting(props.selectedMeetingData!)}}>\r\n            <span className=\"material-symbols-outlined\">edit</span>\r\n            Edytuj\r\n          </button>\r\n          <button className=\"nav__button\" onClick={() => {deleteSelectedMeeting(props.selectedMeetingData!.meetingId)}}>\r\n            <span className=\"material-symbols-outlined\">delete</span>\r\n            Usuń\r\n          </button>\r\n          <button className=\"nav__button\" onClick={() => {navigate('/platform/meetings')}}>\r\n            <span className=\"material-symbols-outlined\">settings</span>\r\n            Wróć\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div className=\"header__text\">\r\n        Lorem ipsum dolor, sit amet consectetur adipisicing elit. Temporibus\r\n        nam, ducimus quae deleniti recusandae sed corrupti dicta ullam autem\r\n        cupiditate? Quae ex aliquam dignissimos fuga, mollitia repudiandae\r\n        quaerat tempore rem cum explicabo fugiat cupiditate perferendis possimus\r\n        voluptatibus temporibus laudantium libero incidunt tempora minus\r\n        praesentium facilis saepe illo quidem. Consectetur est distinctio\r\n        voluptatum iure iste molestiae mollitia doloremque et repellendus alias\r\n        autem unde, magni inventore quae id illum. Facere est blanditiis enim,\r\n        laudantium eos nostrum iusto, quas odit corporis corrupti fugit totam et\r\n        sunt impedit nihil ducimus recusandae veniam ipsa commodi.\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MeetingInfoHeader;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { NavigateFunction, useNavigate, useParams } from \"react-router-dom\";\r\nimport LoadingSpinner from \"../../components/LoadingSpinner/LoadingSpinner\";\r\nimport { PLATFORM_NAME } from \"../../data/staticPlatformData\";\r\nimport { useAppDispatch, useAppSelector } from \"../../hooks/redux-hooks\";\r\nimport { getEmployeeresData } from \"../../redux/slices/employeeresPageSlice\";\r\nimport { getMeetingCategoriesData } from \"../../redux/slices/meetingCategoriesSlice\";\r\nimport { getMeetingsData } from \"../../redux/slices/meetingsPageSlice\";\r\nimport { getRoomsData } from \"../../redux/slices/roomsPageSlice\";\r\nimport { AppDispatch, RootState } from \"../../redux/store\";\r\nimport \"../../sass/pages/MeetingInfoPage/MeetingInfoPage.css\";\r\nimport { meetingDataType } from \"../../types/meetingDataType\";\r\nimport { employeeresPageSliceType } from \"../../types/slices/employeeresPageSliceTypes\";\r\nimport { meetingCategoriesSliceType } from \"../../types/slices/meetingCategoriesSliceTypes\";\r\nimport { meetingsPageSliceType } from \"../../types/slices/meetingsPageSliceTypes\";\r\nimport { roomsPageSliceType } from \"../../types/slices/roomsPageSliceTypes\";\r\nimport MeetingInfoContent from \"./components/MeetingInfoContent\";\r\nimport MeetingInfoHeader from \"./components/MeetingInfoHeader\";\r\n\r\nfunction MeetingInfoPage() {\r\n  const { id } = useParams();\r\n  const navigate: NavigateFunction = useNavigate();\r\n\r\n  const meetingsData: meetingsPageSliceType = useAppSelector((state: RootState) => state.meetingsPage);\r\n  const meetingCategoriesData: meetingCategoriesSliceType = useAppSelector((state: RootState) => state.meetingCategories);\r\n  const roomsData: roomsPageSliceType = useAppSelector((state: RootState) => state.roomsPage);\r\n  const employeeresData: employeeresPageSliceType = useAppSelector((state: RootState) => state.employeeresPage);\r\n  const dispatch: AppDispatch = useAppDispatch();\r\n\r\n  const [selectedMeetingData, setSelectedMeetingData] = useState<meetingDataType | null>(null);\r\n\r\n  useEffect((): void => {\r\n    if (meetingsData.loading == false && meetingsData.value.length > 0) {\r\n      if (id != undefined) {\r\n        const [selectedMeetingData]: meetingDataType[] = meetingsData.value.filter((e: meetingDataType) => e.meetingId == parseInt(id));\r\n\r\n        if (selectedMeetingData) {\r\n          setSelectedMeetingData(selectedMeetingData);\r\n        } else {\r\n          navigate(\"/platform/error\");\r\n        }\r\n      } else {\r\n        navigate(\"/platform/error\");\r\n      }\r\n    } else {\r\n    }\r\n  }, [meetingsData.value]);\r\n\r\n  useEffect((): void => {\r\n    dispatch(getMeetingsData());\r\n    dispatch(getMeetingCategoriesData());\r\n    dispatch(getRoomsData());\r\n    dispatch(getEmployeeresData());\r\n    document.title = `${PLATFORM_NAME} - Informacje o spotkaniu`;\r\n  }, []);\r\n\r\n  return (\r\n    <main className={meetingsData.loading || meetingsData.error != null || meetingCategoriesData.loading || meetingCategoriesData.error != null || roomsData.loading || roomsData.error != null || employeeresData.loading || employeeresData.error != null\r\n      ? \"main-meeting-info-page main-meeting-info-page--content-center\"\r\n      : \"main-meeting-info-page\"}>\r\n      {meetingsData.loading || meetingCategoriesData.loading || roomsData.loading || employeeresData.loading ? (\r\n        <LoadingSpinner />\r\n      ) : meetingsData.error != null || meetingCategoriesData.error != null || roomsData.error != null || employeeresData.error != null ? (\r\n        meetingsData.error || meetingCategoriesData.error || roomsData.error || employeeresData.error\r\n      ) : (\r\n        <>\r\n          <MeetingInfoHeader selectedMeetingData={selectedMeetingData}/>\r\n          <MeetingInfoContent selectedMeetingData={selectedMeetingData}/>\r\n        </>\r\n      )}\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default MeetingInfoPage;\r\n","import React from 'react';\r\nimport { roomDataType } from '../../../types/roomDataType';\r\nimport { dateStringToLocalString } from '../../../utils/dateStringToLocalString';\r\n\r\nfunction RoomInfoContent(props: {selectedRoomData: roomDataType | null}) {\r\n\r\n  return (\r\n    <div className=\"main-room-info-page__content\">\r\n      <div className=\"content__element content__element--three-width\">\r\n        <div className=\"element__title\">ID | Numer - Nazwa</div>\r\n        <div className=\"element__value\">{props.selectedRoomData != null ? `${props.selectedRoomData.roomId} | ${props.selectedRoomData.roomNumber} - ${props.selectedRoomData.roomName}` : ''}</div>\r\n      </div>\r\n      <div className=\"content__element\">\r\n        <div className=\"element__title\">Rodzaj pomieszczenia</div>\r\n        <div className=\"element__value\">{props.selectedRoomData != null ? props.selectedRoomData.roomType : ''}</div>\r\n      </div>\r\n      <div className={props.selectedRoomData != null ? props.selectedRoomData.roomStatus ? 'content__element content__element--active' : 'content__element content__element--inactive' : 'content__element'}>\r\n            <div className=\"element__title\">Status pomieszczenia</div>\r\n            <div className=\"element__value\">{props.selectedRoomData != null ? props.selectedRoomData.roomStatus ? 'Aktywne' : 'Nieaktywne' : ''}</div>\r\n        </div>  \r\n      <div className=\"content__element\">\r\n        <div className=\"element__title\">Ilość osób w pomieszczeniu</div>\r\n        <div className=\"element__value\">{props.selectedRoomData != null ? `Min. ${props.selectedRoomData.minimumRoomPeople} - Max. ${props.selectedRoomData.maximumRoomPeople}` : ''}</div>\r\n      </div>\r\n      <div className=\"content__element content__element--two-width\">\r\n        <div className=\"element__title\">Dodatkowe informacje</div>\r\n        <div className=\"element__value\">{props.selectedRoomData != null ? props.selectedRoomData.additionalInformation : ''}</div>\r\n      </div>\r\n      <div className=\"content__element\">\r\n        <div className=\"element__title\">Data dodania</div>\r\n        <div className=\"element__value\">{props.selectedRoomData != null ? dateStringToLocalString(props.selectedRoomData.dateAdded) : ''}</div>\r\n      </div>\r\n      <div className=\"content__element\">\r\n        <div className=\"element__title\">Data modyfikacji</div>\r\n        <div className=\"element__value\">{props.selectedRoomData != null ? props.selectedRoomData.modificationDate != null ? dateStringToLocalString(props.selectedRoomData.modificationDate) : '' : ''}</div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default RoomInfoContent;","import React from \"react\";\r\nimport { NavigateFunction, useNavigate } from \"react-router-dom\";\r\nimport { useAppDispatch, useAppSelector } from \"../../../hooks/redux-hooks\";\r\nimport { OPEN_ARGEEMENT_MODAL_WINDOW, OPEN_EDIT_MODAL_WINDOW } from \"../../../redux/slices/globalSettingsSlice\";\r\nimport { AppDispatch, RootState } from \"../../../redux/store\";\r\nimport { roomDataType } from \"../../../types/roomDataType\";\r\n\r\nfunction RoomInfoHeader(props: {selectedRoomData: roomDataType | null}) {\r\n  const navigate: NavigateFunction = useNavigate();\r\n\r\n  const roomsData = useAppSelector((state: RootState) => state.roomsPage);\r\n  const dispatch: AppDispatch = useAppDispatch();\r\n  \r\n  const editSelectedRoom = (roomElement: roomDataType): void => {\r\n    dispatch(OPEN_EDIT_MODAL_WINDOW({type: 'edit-room', element: roomElement}));\r\n  };\r\n\r\n  const deleteSelectedRoom = (currentRoomId: number): void => {\r\n    const [roomElement]: roomDataType[] = roomsData.value.filter((e: roomDataType) => e.roomId === currentRoomId);\r\n    const roomElementIndex: number = roomsData.value.indexOf(roomElement);\r\n    dispatch(OPEN_ARGEEMENT_MODAL_WINDOW({type: 'delete-agreement', dataType: 'roomsData', index: (roomElementIndex)}));\r\n  };\r\n\r\n  return (\r\n    <div className=\"main-room-info-page__header\">\r\n      <div className=\"header__group\">\r\n        <div className=\"group__title\">\r\n          <span className=\"material-symbols-outlined\">groups</span>\r\n          Pomieszczenie - {props.selectedRoomData != null ? props.selectedRoomData.roomName : ''}\r\n        </div>\r\n        <div className=\"group__nav\">\r\n          <button className=\"nav__button\" onClick={() => {editSelectedRoom(props.selectedRoomData!)}}>\r\n            <span className=\"material-symbols-outlined\">edit</span>\r\n            Edytuj\r\n          </button>\r\n          <button className=\"nav__button\" onClick={() => {deleteSelectedRoom(props.selectedRoomData!.roomId)}}>\r\n            <span className=\"material-symbols-outlined\">delete</span>\r\n            Usuń\r\n          </button>\r\n          <button className=\"nav__button\" onClick={() => {navigate('/platform/rooms')}}>\r\n            <span className=\"material-symbols-outlined\">settings</span>\r\n            Wróć\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div className=\"header__text\">\r\n        Lorem ipsum dolor, sit amet consectetur adipisicing elit. Temporibus\r\n        nam, ducimus quae deleniti recusandae sed corrupti dicta ullam autem\r\n        cupiditate? Quae ex aliquam dignissimos fuga, mollitia repudiandae\r\n        quaerat tempore rem cum explicabo fugiat cupiditate perferendis possimus\r\n        voluptatibus temporibus laudantium libero incidunt tempora minus\r\n        praesentium facilis saepe illo quidem. Consectetur est distinctio\r\n        voluptatum iure iste molestiae mollitia doloremque et repellendus alias\r\n        autem unde, magni inventore quae id illum. Facere est blanditiis enim,\r\n        laudantium eos nostrum iusto, quas odit corporis corrupti fugit totam et\r\n        sunt impedit nihil ducimus recusandae veniam ipsa commodi.\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RoomInfoHeader;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { NavigateFunction, useNavigate, useParams } from \"react-router-dom\";\r\nimport LoadingSpinner from \"../../components/LoadingSpinner/LoadingSpinner\";\r\nimport { useAppDispatch, useAppSelector } from \"../../hooks/redux-hooks\";\r\nimport { getRoomsData } from \"../../redux/slices/roomsPageSlice\";\r\nimport { roomDataType } from \"../../types/roomDataType\";\r\nimport '../../sass/pages/RoomInfoPage/RoomInfoPage.css'\r\nimport RoomInfoContent from \"./components/RoomInfoContent\";\r\nimport RoomInfoHeader from \"./components/RoomInfoHeader\";\r\nimport { getRoomTypesData } from \"../../redux/slices/roomTypesSlice\";\r\nimport { AppDispatch, RootState } from \"../../redux/store\";\r\nimport { PLATFORM_NAME } from \"../../data/staticPlatformData\";\r\nimport { roomsPageSliceType } from \"../../types/slices/roomsPageSliceTypes\";\r\nimport { roomTypesSliceType } from \"../../types/slices/roomTypesSliceTypes\";\r\n\r\nfunction RoomInfoPage() {\r\n  const { id } = useParams();\r\n  const navigate: NavigateFunction = useNavigate();\r\n\r\n  const roomsData: roomsPageSliceType = useAppSelector((state: RootState) => state.roomsPage);\r\n  const roomTypesData: roomTypesSliceType = useAppSelector((state: RootState) => state.roomTypes);\r\n  const dispatch: AppDispatch = useAppDispatch();\r\n\r\n  const [selectedRoomData, setSelectedRoomData] = useState<roomDataType | null>(null);\r\n\r\n  useEffect((): void => {\r\n    if (roomsData.loading == false && roomsData.value.length > 0) {\r\n      if (id != undefined) {\r\n        const [selectedRoomDataElement]: roomDataType[] = roomsData.value.filter((e: roomDataType) => e.roomId == parseInt(id));\r\n\r\n        if (selectedRoomDataElement) {\r\n          setSelectedRoomData(selectedRoomDataElement);\r\n        } else {\r\n          navigate(\"/platform/error\");\r\n        }\r\n      } else {\r\n        navigate(\"/platform/error\");\r\n      }\r\n    } else {\r\n    }\r\n  }, [roomsData.value]);\r\n\r\n  useEffect((): void => {\r\n    dispatch(getRoomsData());\r\n    dispatch(getRoomTypesData());\r\n\r\n    document.title = `${PLATFORM_NAME} - Informacje o pomieszczeniu`;\r\n  }, []);\r\n\r\n  return (\r\n    <main className={roomsData.loading || roomsData.error != null || roomTypesData.loading || roomTypesData.error != null\r\n      ? \"main-room-info-page main-room-info-page--content-center\"\r\n      : \"main-room-info-page\"}>\r\n      {roomsData.loading || roomTypesData.loading ? (\r\n        <LoadingSpinner />\r\n      ) : roomsData.error != null || roomTypesData.error != null ? (\r\n        roomsData.error || roomTypesData.error\r\n      ) : (\r\n        <>\r\n          <RoomInfoHeader selectedRoomData={selectedRoomData}/>\r\n          <RoomInfoContent selectedRoomData={selectedRoomData}/>\r\n        </>\r\n      )}\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default RoomInfoPage;\r\n","import React, { useEffect } from 'react';\r\nimport { PLATFORM_NAME } from '../../data/staticPlatformData';\r\nimport '../../sass/pages/ErrorFullPage/ErrorFullPage.css';\r\n\r\nfunction ErrorFullPage() {\r\n\r\n  useEffect(() => {\r\n    document.title = `${PLATFORM_NAME}`;\r\n  }, [])\r\n\r\n  return (\r\n    <div className=\"main-error-full-page\">\r\n      <div className=\"main-error-full-page__title\">Strona o podanym adresie nie istnieje</div>\r\n      <div className=\"main-error-full-page__description\">\r\n        Lorem ipsum dolor sit amet consectetur, adipisicing elit. Vitae odit earum repellat aut fugiat? Ea, dignissimos? Ratione excepturi quam est assumenda, eos ab et deleniti. Lorem ipsum dolor, sit amet consectetur adipisicing elit. Quos nihil impedit repudiandae perspiciatis eos ratione. Recusandae necessitatibus eligendi rem maiores quo veniam? Ullam fuga ea voluptatum, perferendis dolores perspiciatis ipsam asperiores animi impedit in atque. Lorem ipsum dolor sit amet consectetur adipisicing elit.\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ErrorFullPage;","import React, { useEffect } from \"react\";\nimport { Routes, Route, Outlet, Navigate, HashRouter } from \"react-router-dom\";\nimport ErrorPage from \"./pages/ErrorPage/ErrorPage\";\nimport HelpPage from \"./pages/HelpPage/HelpPage\";\nimport DashboardPage from \"./pages/DashboardPage/DashboardPage\";\nimport RoomsPage from \"./pages/RoomsPage/RoomsPage\";\nimport MeetingsPage from \"./pages/MeetingsPage/MeetingsPage\";\nimport ScreenInfoPage from \"./pages/ScreenInfoPage/ScreenInfoPage\";\nimport ScreenPage from \"./pages/ScreenPage/ScreenPage\";\nimport ScreensPage from \"./pages/ScreensPage/ScreensPage\";\nimport SettingsPage from \"./pages/SettingsPage/SettingsPage\";\nimport EmployeeInfoPage from \"./pages/EmployeeInfoPage/EmployeeInfoPage\";\nimport EmployeeresPage from \"./pages/EmployeeresPage/EmployeeresPage\";\nimport Header from \"./layouts/Header/Header\";\nimport Sidebar from \"./layouts/Sidebar/Sidebar\";\nimport Footer from \"./layouts/Footer/Footer\";\nimport \"./sass/App.css\";\nimport ModalWindow from \"./layouts/ModalWindow/ModalWindow\";\nimport MeetingInfoPage from \"./pages/MeetingInfoPage/MeetingInfoPage\";\nimport RoomInfoPage from \"./pages/RoomInfoPage/RoomInfoPage\";\nimport ErrorFullPage from \"./pages/ErrorFullPage/ErrorFullPage\";\nimport { PLATFORM_THEME_LSTORAGE_NAME } from \"./data/staticPlatformData\";\n\nfunction App() {\n\n  const PlatformAppLayout = (): JSX.Element => (\n    <div className=\"container\">\n      <ModalWindow/>\n      <Header/>\n      <Sidebar/>\n      <Outlet/>\n      <Footer/>\n    </div>\n  );\n\n  useEffect((): void => {\n    const localStoragePlatformTheme: string | null = localStorage.getItem(PLATFORM_THEME_LSTORAGE_NAME);\n\n    if (localStoragePlatformTheme) {\n      const themeValue: string = JSON.parse(localStoragePlatformTheme);\n      document.documentElement.setAttribute(\"data-theme\", themeValue);\n\n    } else {\n      document.documentElement.setAttribute(\"data-theme\", \"dark\");\n    }\n  }, []);\n\n  return (\n    <HashRouter>\n      <Routes>\n        <Route path=\"/\" element={<Navigate to=\"/platform\"/>}/>\n        <Route element={<PlatformAppLayout/>}>\n          <Route path=\"/platform\" element={<DashboardPage />} />\n          <Route path=\"platform/meetings\" element={<MeetingsPage />} />\n          <Route path=\"platform/meetings/:value\" element={<MeetingsPage />} />\n          <Route path=\"platform/meetings/meeting/:id\" element={<MeetingInfoPage />} />\n          <Route path=\"platform/rooms\" element={<RoomsPage />} />\n          <Route path=\"platform/rooms/room/:id\" element={<RoomInfoPage />} />\n          <Route path=\"platform/employeeres\" element={<EmployeeresPage />} />\n          <Route path=\"platform/employeeres/employee/:id\" element={<EmployeeInfoPage />} />\n          <Route path=\"platform/screens\" element={<ScreensPage />} />\n          <Route path=\"platform/screens/screen/:id\" element={<ScreenInfoPage />} />\n          <Route path=\"platform/settings\" element={<SettingsPage />} />\n          <Route path=\"platform/help\" element={<HelpPage />} />\n          <Route path=\"platform/*\" element={<ErrorPage />} />\n        </Route>\n        <Route path=\"/screen/:id\" element={<ScreenPage />} />\n        <Route path=\"*\" element={<ErrorFullPage />} />\n      </Routes>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport roomsPage from \"./slices/roomsPageSlice\";\r\nimport meetingsPage from \"./slices/meetingsPageSlice\";\r\nimport screensPage from \"./slices/screensPageSlice\";\r\nimport employeeresPage from \"./slices/employeeresPageSlice\";\r\nimport globalSettings from \"./slices/globalSettingsSlice\";\r\nimport meetingCategories from \"./slices/meetingCategoriesSlice\";\r\nimport employeePositions from \"./slices/employeePositionsSlice\";\r\nimport roomTypes from \"./slices/roomTypesSlice\";\r\n\r\nexport const store = configureStore({\r\n    reducer: {\r\n        roomsPage: roomsPage,\r\n        meetingsPage: meetingsPage,\r\n        screensPage: screensPage,\r\n        employeeresPage: employeeresPage,\r\n        globalSettings: globalSettings,\r\n        meetingCategories: meetingCategories,\r\n        employeePositions: employeePositions,\r\n        roomTypes: roomTypes\r\n    },\r\n})\r\n\r\nexport type RootState = ReturnType<typeof store.getState>\r\n\r\nexport type AppDispatch = typeof store.dispatch;","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport { store } from './redux/store';\n\nconst root = ReactDOM.createRoot(\n  document.getElementById('root') as HTMLElement\n);\nroot.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}